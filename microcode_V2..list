
  PASS 1 
----------------------
 Reading input file `lilith_1043.mcd`

-nop- 1211
-nop- 1212
-nop- 1777
-nop- 2000
-org- 2000
-org- 2000
-org- 4000
-org- 4000
-org- 4022
-org- 4233
-org- 4323
-org- 5120
-org- 6000
-org- 7752
-org- 7760
-org- 7764
-org- 7772
-org- 7776
-nop- 10000
 394 labels defined...

  PASS 2 
----------------------
 Rereading input file `lilith_1043.mcd`

    * ........................................................................
     *                                                                        .
     *       *******************************************************          .
     *       *                                                     *          .
     *       *   INTERPRETER        VERSION 13.2        12.6.81    *          .
     *       *                                                     *          .
     *       *******************************************************          .
     *                                                                        .
     *                                                                        .
     *                    NIKLAUS WIRTH  WERNER WINIGER                       .
     *                    INSTITUT FUER INFORMATIK                            .
     *                    ETH ZENTRUM                                         .
     *                    CH-8092 ZUERICH                                     .
     *                                                                        .
     *                    MNCODE INTERPRETER                                  .
     *                    BOOTSTRAP/DUMP                                      .
     *                    DISPLAY HANDLING PROCEDURES                         .
     *                    REAL OPERATIONS                                     .
     *                                                                        .
     *                                                                        .
     * ........................................................................
     *            7.0  IO WITH REARRANGED DELAY
     *                 DIVISION WITH CORRECT REMAINDER 
     *                 BOOTSTRAP/DUMP FROM/TO DISK
     *                 SPEED CATEGORIES INTRODUCED
     *            8.0  FOR2 CORRECTED
     *                 FREE LOCATIONS ASSEMBLED BEFORE LI0
     *                 INTERRUPT LOCATIONS NEWLY DISTRIBUTED
     *            8.1  BOOTSTRAP CORRECTED
     *                 PUT TO DISK SLOWN DOWN
     *            9.0  P-REGISTER INTRODUCED 
     *                 PRIORITY HANDLING (M-REGISTER) ENHANCED
     *                 INSTRUCTIONS REORDERED
     *                 CODE FRAME TABLE REMOVED
     *            9.1  SHL CORRECTED
     *                 NEW MAP CONCEPT ADAPTED
     *           10.0  INSTRUCTION SET EXTENDED
     *                 CHECKS ADDED
     *                 TRAP NUMBERS CHANGED
     *           10.1  REAL ARITHMETIC ADDED 
     *           11.0  MULTIPLICATION CORRECTED
     *                 128K DUMP
     *                 FIXED DISK BOOT
     *           12.0  REALS CORRECTED
     *                 MAP PROM ADDRESSED LOCATIONS ASSEMBLED CONTIGUOUS
     *           12.1  PUT/GET SLOWN DOWN
     *           13.0  MUL10 REMOVED
     *                 DMUL, DDIV, DMUL2, DDIV2, ESC INSERTED
     *           13.1  NEG (TRAP) CORRECTED
     *           13.2  ERRORS IN REPLICATE CORRECTED. SYS;5 -> 1 
     $
     *
     *                      Format
     *
     *   +------+--+----+----+---+---+---+---+--------+---+----+--+--+----+----+--------+
     *   |LABEL |K |DST |FCT |RS |C  |A  |B  |SHFT    |SP |PC  |S |E |BD  |BS  |COMMENT |
     *   +------+--+----+----+---+---+---+---+--------+---+----+--+--+---------+--------+
     *   |LABEL |K |DST |FCT |RS |C  |A  |B  |SHFT    |SP |PC  |S |E |N        |COMMENT |
     *   +------+--+---------------+------------------+---+----+---------------+--------+
     *   |LABEL |K |PA             |CC                |SP |PC  |               |COMMENT |
     *   +------+--+---------------+------------------+---+----+---------------+--------+
     *
     *     DEFINITION OF THE SPEED CATEGORIES:
     * SLOW A : JMAP
     *     B : CONDITIONAL JUMP & JSR    <
     *     C : UNCONDITIONAL JUMP & JSR  <
     *     D : RETURN                    <
     *                                    > DISABLED
     *     E : BUS SOURCE = MD           <
     *     F : BUS DESTINATION = MAR     <
     *     G : BUS SOURCE = IR/IR4/IR*   <
     * SLOW H : PUT (DISK)
     $
 000  FF 08 07 A0 0F     ZERO      0 NSTART     T             S JMP              TO THE BOOTSTRAP CODE
 001  6F E0 AC 70 02     #RESTART  1 B   OR  DZ 0  -  5  -  - - CNT - 1 2        KBDATA -> R5
 002  46 48 03 20 0F               0 #GET       T             - JSR              GET(KBDATA,DUMMY)
 003  6F E0 6C 70 04               1 B   OR  DZ 0  -  3  -  - - CNT - 1 4        4 -> R3
 004  2E 66 0C 60 30               1 NN  OR  ZA 0  3  -  -  - - CNT - 0 MAR ALU  R3 -> MAR
 005  6F E1 4C 60 01               1 B   OR  DZ 0  -  P  -  - - CNT - 0 ALU MD   MD -> P
     *                                                       R3 <> 0
 006  43 E8 03 20 0F               0 #RESTREGS  T             - JSR              RESTORE REGS(TRUE)
 007  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 008  42 38 07 20 0F     #REQ8     0 #LINE8     T             - JMP              GOTO LINE8
 009  42 18 07 20 0F     #REQ9     0 #LINE9     T             - JMP              GOTO LINE9
 00A  41 F8 07 20 0F     #REQ10    0 #LINE10    T             - JMP              GOTO LINE10   
 00B  41 D8 07 20 0F     #REQ11    0 #LINE11    T             - JMP              GOTO LINE11
 00C  41 B8 07 20 0F     #REQ12    0 #CLOCK     T             - JMP              GOTO CLOCK
 00D  41 98 07 20 0F     #REQ13    0 #DISK      T             - JMP              GOTO DISK
 00E  41 78 07 20 0F     #REQ14    0 #LINE14    T             - JMP              GOTO LINE14
 00F  41 58 07 20 0F     #REQ15    0 #LINE15    T             - JMP              GOTO LINE14
     $
 -map- 0 f 10
    .MAP 0   17 
 010  4D 7F EC 40 0F     LI0       1 B*  OR  ZQ 0  T  T  -  - - CNT S 0 PSH NBS  T -> STK, Q -> T
 011  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 10 10 12
    .MAP 20
 012  4F FF EC 40 04     LIB       1 B*  OR  DZ 0  T  T  -  - - CNT S 0 ALU IR   T -> STK, IR -> T
 013  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     * MAP 21   NOT USED 
 -map- 12 12 14
    .MAP 22
 014  4F FF E4 48 04     LIW       1 B*  OR  DZ 0  T  T  RC 10 - CNT S 0 ALU IR   T->STK, (IR^10) -> T
 015  6E FF EC 60 04               1 B   OR  DA 0  T  T  -  - - CNT - 0 ALU IR   IR OR T -> T
 016  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 13 13 17
    .MAP 23
 017  4F FF E4 48 04     LID       1 B*  OR  DZ 0  T  T  RC 10 - CNT S 0 ALU IR   T->STK, (IR^10) -> T
 018  6E FF EC 60 04               1 B   OR  DA 0  T  T  -  - - CNT - 0 ALU IR   IR OR T -> T
 019  4F FF E4 48 04               1 B*  OR  DZ 0  T  T  RC 10 - CNT S 0 ALU IR   T->STK, (IR^10) -> T
 01A  6E FF EC 60 04               1 B   OR  DA 0  T  T  -  - - CNT - 0 ALU IR   IR OR T -> T
 01B  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 14 14 1c
    .MAP 24
 01C  4F FF EC 40 04     LLA       1 B*  OR  DZ 0  T  T  -  - - CNT S 0 ALU IR   T -> STK, IR -> T
 01D  60 FD EC 60 FF               1 B   PL  AB 0  L  T  -  - - CNT - 0 NBD NBS  L+T -> T
 01E  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 15 15 1f
    .MAP 25
 01F  4F FF EC 40 04     LGA       1 B*  OR  DZ 0  T  T  -  - - CNT S 0 ALU IR   T -> STK, IR -> T
 020  60 FB EC 60 FF               1 B   PL  AB 0  G  T  -  - - CNT - 0 NBD NBS  G+T -> T
 021  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 16 16 22
    .MAP 26
 022  62 FF EC 60 04     LSA       1 B   PL  DA 0  T  T  -  - - CNT - 0 ALU IR   IR+T -> T
 023  3E 22 07 20 0F               0 TRAP(5)    C             - JMP              TRAP IF OVERFLOW
 024  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 17 17 25
    .MAP 27
 025  6F E0 0C 60 04     LEA       1 B   OR  DZ 0  -  0  -  - - CNT - 0 ALU IR   IR -> R0
 026  62 E0 0C 70 20               1 B   PL  DA 0  0  0  -  - - CNT - 1 40       40 + R0 -> R0 
 027  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 028  4F FE 0C 40 04               1 B*  OR  DZ 0  T  0  -  - - CNT S 0 ALU IR   IR -> R0, T -> STK
 029  62 E1 EC 60 01               1 B   PL  DA 0  0  T  -  - - CNT - 0 ALU MD   MD + R0 -> T
 02A  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 -map- 18 18 2b
    .MAP 30
 02B  2E 7E 0C 60 FF     JPC       1 NN  OR  ZA 0  T  -  -  - - CNT - 0 NBD NBS  T
 02C  04 19 07 20 0F               0 #SKIP2     -Z            - JMP              JMP IF #0
 02D  6F E1 EC 40 FF               1 B   OR  DZ 0  -  T  -  - - CNT S 0 POP NBS  STK -> T
 -map- 19 19 2e
    .MAP 31
 02E  6F E0 0C 60 02     JP        1 B   OR  DZ 0  -  0  -  - - CNT - 0 ALU PC   PC -> R0
 02F  62 E0 04 68 04               1 B   PL  DA 0  0  0  RC 10 - CNT - 0 ALU IR   (IR^10)+R0 -> R0
 030  62 E0 0C 60 06               1 B   PL  DA 0  0  0  -  - - CNT - 0 ALU IR*  R0+IR -> R0
 031  2E 60 0C 60 20               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 PC  ALU  R0 -> PC
 032  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 1a 1a 33
    .MAP 32
 033  2E 7E 0C 60 FF     JPFC      1 NN  OR  ZA 0  T  -  -  - - CNT - 0 NBD NBS  T
 034  04 29 07 20 0F               0 #SKIP1     -Z            - JMP              JMP IF #0
 035  6F E1 EC 40 FF               1 B   OR  DZ 0  -  T  -  - - CNT S 0 POP NBS  STK -> T
 -map- 1b 1b 36
    .MAP 33
 036  6F E0 0C 60 02     JPF       1 B   OR  DZ 0  -  0  -  - - CNT - 0 ALU PC   PC -> R0
 037  62 E0 0C 60 06               1 B   PL  DA 0  0  0  -  - - CNT - 0 ALU IR*  R0+IR -> R0
 038  2E 60 0C 60 20               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 PC  ALU  R0 -> PC
 039  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 1c 1c 3a
    .MAP 34
 03A  2E 7E 0C 60 FF     JPBC      1 NN  OR  ZA 0  T  -  -  - - CNT - 0 NBD NBS  T
 03B  04 29 07 20 0F               0 #SKIP1     -Z            - JMP              JMP IF #0
 03C  6F E1 EC 40 FF               1 B   OR  DZ 0  -  T  -  - - CNT S 0 POP NBS  STK -> T
 -map- 1d 1d 3d
    .MAP 35
 03D  6F E0 0C 60 02     JPB       1 B   OR  DZ 0  -  0  -  - - CNT - 0 ALU PC   PC -> R0
 03E  66 C0 0C 60 06               1 B   MP  DA 1  0  0  -  - - CNT - 0 ALU IR*  R0-IR -> R0
 03F  2E 60 0C 60 20               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 PC  ALU  R0 -> PC
 040  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 041  2D 60 0C 60 F4     #SKIP2    1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 NBD IR   IR
 042  6F E1 EC 40 F4     #SKIP1    1 B   OR  DZ 0  -  T  -  - - CNT S 0 POP IR   IR, STK -> T
 043  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 1e 1e 44
    .MAP 36
 044  2E 7E 0C 60 FF     ORJP      1 NN  OR  ZA 0  T  -  -  - - CNT - 0 NBD NBS  T
 045  04 A1 07 20 0F               0 #OR1       Z             - JMP              IF T = 0
 046  6F E0 0C 60 02     #AND1     1 B   OR  DZ 0  -  0  -  - - CNT - 0 ALU PC   PC -> R0
 047  62 E0 0C 60 06               1 B   PL  DA 0  0  0  -  - - CNT - 0 ALU IR*  IR + R0 -> R0 
 048  2E 60 0C 60 20               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 PC  ALU  R0 -> PC
 049  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 04A  63 C0 0C 60 02     #OR1      1 B   PL  DZ 1  -  0  -  - - CNT - 0 ALU PC   PC + 1 -> R0
 04B  4F E1 EC 40 20               1 B*  OR  DZ 0  0  T  -  - - CNT S 0 PC  ALU  R0 -> PC, STK -> T
 04C  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 1f 1f 4d
    .MAP 37
 04D  2E 7E 0C 60 FF     ANDJP     1 NN  OR  ZA 0  T  -  -  - - CNT - 0 NBD NBS  T
 04E  04 61 07 20 0F               0 #AND1      Z             - JMP              IF T = 0
 04F  63 C0 0C 60 02               1 B   PL  DZ 1  -  0  -  - - CNT - 0 ALU PC   PC + 1 -> R0
 050  4F E1 EC 40 20               1 B*  OR  DZ 0  0  T  -  - - CNT S 0 PC  ALU  R0 -> PC, STK -> T
 051  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 -map- 20 20 52
    .MAP 40
 052  62 FC 0C 60 04     LLW       1 B   PL  DA 0  L  0  -  - - CNT - 0 ALU IR   IR+L -> R0
 053  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 054  4F FF EC 40 01               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 ALU MD   T -> STK, MD -> T
 055  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 21 21 56
    .MAP 41
 056  62 FC 0C 60 04     LLD       1 B   PL  DA 0  L  0  -  - - CNT - 0 ALU IR   IR+L -> R0
 057  42 40 0C 60 30               1 B*  PL  ZA 1  0  0  -  - - CNT - 0 MAR ALU  R0 -> MAR, R0+1 ->R0
 058  4F FF EC 40 01               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 ALU MD   T -> STK, MD -> T
 059  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 05A  4F FF EC 40 01               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 ALU MD   T -> STK, MD -> T
 05B  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 22 22 5c
    .MAP 42
 05C  6F E0 0C 60 04     LEW       1 B   OR  DZ 0  -  0  -  - - CNT - 0 ALU IR   IR -> R0
 05D  62 E0 0C 70 20               1 B   PL  DA 0  0  0  -  - - CNT - 1 40       40 + R0 -> R0 
 05E  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 05F  6F E0 0C 60 04               1 B   OR  DZ 0  -  0  -  - - CNT - 0 ALU IR   IR -> R0
 060  62 E0 0C 60 01               1 B   PL  DA 0  0  0  -  - - CNT - 0 ALU MD   MD + R0 -> R0 
 061  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 062  4F FF EC 40 01               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 ALU MD   T -> STK, MD -> T
 063  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 23 23 64
    .MAP 43
 064  6F E0 0C 60 04     LED       1 B   OR  DZ 0  -  0  -  - - CNT - 0 ALU IR   IR -> R0
 065  62 E0 0C 70 20               1 B   PL  DA 0  0  0  -  - - CNT - 1 40       40 + R0 -> R0 
 066  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 067  6F E0 0C 60 04               1 B   OR  DZ 0  -  0  -  - - CNT - 0 ALU IR   IR -> R0
 068  62 E0 0C 60 01               1 B   PL  DA 0  0  0  -  - - CNT - 0 ALU MD   MD + R0 -> R0 
 069  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 06A  4F FF EC 40 01               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 ALU MD   T -> STK, MD -> T
 06B  22 40 0C 60 30               1 NN  PL  ZA 1  0  -  -  - - CNT - 0 MAR ALU  R0 + 1 -> MAR 
 06C  4F FF EC 40 01               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 ALU MD   T -> STK, MD -> T
 06D  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 24 2f 6e
    .MAP 44   57
 06E  20 7C 0C 60 30     LLW4      1 NN  PL  AQ 0  L  -  -  - - CNT - 0 MAR ALU  L+Q -> MAR
 06F  4F FF EC 40 01               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 ALU MD   T -> STK, MD -> T
 070  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 -map- 30 30 71
    .MAP 60
 071  62 FC 0C 60 04     SLW       1 B   PL  DA 0  L  0  -  - - CNT - 0 ALU IR   IR+L -> R0
 072  4F FF EC 40 10               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 MD  ALU  T -> MD, STK -> T
 073  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 074  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 31 31 75
    .MAP 61
 075  62 FC 0C 60 04     SLD       1 B   PL  DA 0  L  0  -  - - CNT - 0 ALU IR   IR+L -> R0
 076  2F E0 0C 40 10               1 NN  OR  DZ 0  -  -  -  - - CNT S 0 MD  ALU  STK -> MD
 077  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 078  4F FF EC 40 10               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 MD  ALU  T -> MD, STK -> T
 079  22 40 0C 60 30               1 NN  PL  ZA 1  0  -  -  - - CNT - 0 MAR ALU  R0+1 -> MAR
 07A  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 32 32 7b
    .MAP 62
 07B  6F E0 0C 60 04     SEW       1 B   OR  DZ 0  -  0  -  - - CNT - 0 ALU IR   IR -> R0
 07C  62 E0 0C 70 20               1 B   PL  DA 0  0  0  -  - - CNT - 1 40       40 + R0 -> R0 
 07D  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 07E  6F E0 0C 60 04               1 B   OR  DZ 0  -  0  -  - - CNT - 0 ALU IR   IR -> R0
 07F  62 E0 0C 60 01               1 B   PL  DA 0  0  0  -  - - CNT - 0 ALU MD   MD + R0 -> R0 
 080  4F FF EC 40 10               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 MD  ALU  T -> MD, STK -> T
 081  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 082  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 33 33 83
    .MAP 63
 083  6F E0 0C 60 04     SED       1 B   OR  DZ 0  -  0  -  - - CNT - 0 ALU IR   IR -> R0
 084  62 E0 0C 70 20               1 B   PL  DA 0  0  0  -  - - CNT - 1 40       40 + R0 -> R0 
 085  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 086  6F E0 0C 60 04               1 B   OR  DZ 0  -  0  -  - - CNT - 0 ALU IR   IR -> R0
 087  62 E0 0C 60 01               1 B   PL  DA 0  0  0  -  - - CNT - 0 ALU MD   MD + R0 -> R0 
 088  4F FF EC 40 10               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 MD  ALU  T -> MD, STK -> T
 089  22 40 0C 60 30               1 NN  PL  ZA 1  0  -  -  - - CNT - 0 MAR ALU  R0 + 1 -> MAR 
 08A  4F FF EC 40 10               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 MD  ALU  T -> MD, STK -> T
 08B  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 08C  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 34 3f 8d
    .MAP 64  77
 08D  4F FF EC 40 10     SLW4      1 B*  OR  DZ 0  T  T  -  - - CNT S 0 MD  ALU  T -> MD, STK -> T
 08E  20 7C 0C 60 30               1 NN  PL  AQ 0  L  -  -  - - CNT - 0 MAR ALU  L+Q -> MAR
 08F  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 -map- 40 40 90
    .MAP 100
 090  62 FA 0C 60 04     LGW       1 B   PL  DA 0  G  0  -  - - CNT - 0 ALU IR   IR+G -> R0
 091  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 092  4F FF EC 40 01               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 ALU MD   T -> STK, MD -> T
 093  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 41 41 94
    .MAP 101
 094  62 FA 0C 60 04     LGD       1 B   PL  DA 0  G  0  -  - - CNT - 0 ALU IR   IR+G -> R0
 095  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 096  4F FF EC 40 01               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 ALU MD   T -> STK, MD -> T
 097  22 40 0C 60 30               1 NN  PL  ZA 1  0  -  -  - - CNT - 0 MAR ALU  R0 + 1 -> MAR 
 098  4F FF EC 40 01               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 ALU MD   T -> STK, MD -> T
 099  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 42 4f 9a
    .MAP 102  117
 09A  20 7A 0C 60 30     LGW2      1 NN  PL  AQ 0  G  -  -  - - CNT - 0 MAR ALU  G+Q -> MAR
 09B  4F FF EC 40 01               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 ALU MD   T -> STK, MD -> T
 09C  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 50 50 9d
    .MAP 120
 09D  62 FA 0C 60 04     SGW       1 B   PL  DA 0  G  0  -  - - CNT - 0 ALU IR   IR+G -> R0
 09E  4F FF EC 40 10               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 MD  ALU  T -> MD, STK -> T
 09F  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 0A0  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 51 51 a1
    .MAP 121
 0A1  62 FA 0C 60 04     SGD       1 B   PL  DA 0  G  0  -  - - CNT - 0 ALU IR   IR+G -> R0
 0A2  4F FF EC 40 10               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 MD  ALU  T -> MD, STK -> T
 0A3  22 40 0C 60 30               1 NN  PL  ZA 1  0  -  -  - - CNT - 0 MAR ALU  R0 + 1 -> MAR 
 0A4  4F FF EC 40 10               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 MD  ALU  T -> MD, STK -> T
 0A5  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 0A6  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 52 5f a7
    .MAP 122   137
 0A7  4F FF EC 40 10     SGW2      1 B*  OR  DZ 0  T  T  -  - - CNT S 0 MD  ALU  T -> MD, STK -> T
 0A8  20 7A 0C 60 30               1 NN  PL  AQ 0  G  -  -  - - CNT - 0 MAR ALU  G+Q -> MAR
 0A9  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 0AA  6F E0 0C 60 01     TRAP5     1 B   OR  DZ 0  -  0  -  - - CNT - 0 ALU MD   MD -> R0 !DUMMY"
 0AB  3E 28 07 20 0F               0 TRAP(5)    T             - JMP              TRAP(5)
 -map- 60 60 ac
    .MAP 140
 0AC  42 5F EC 60 30     LSW0      1 B*  PL  ZA 1  T  T  -  - - CNT - 0 MAR ALU  T -> MAR, T+1 -> T
 0AD  0A A1 07 20 0F               0 TRAP5      Z             - JMP              TRAP IF NIL
 0AE  6F E1 EC 60 01               1 B   OR  DZ 0  -  T  -  - - CNT - 0 ALU MD   MD -> T
 0AF  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 61 6f b0
    .MAP 141  157
 0B0  20 7E 0C 60 30     LSW1      1 NN  PL  AQ 0  T  -  -  - - CNT - 0 MAR ALU  T+Q -> MAR
 0B1  0A A2 07 20 0F               0 TRAP5      C             - JMP              TRAP IF OVERFLOW
 0B2  6F E1 EC 60 01               1 B   OR  DZ 0  -  T  -  - - CNT - 0 ALU MD   MD -> T
 0B3  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 70 70 b4
    .MAP 160
 0B4  63 C0 0C 40 FF     SSW0      1 B   PL  DZ 1  -  0  -  - - CNT S 0 POP NBS  STK + 1 -> R0 
 0B5  3E 21 07 20 0F               0 TRAP(5)    Z             - JMP              TRAP IF NIL
 0B6  4F FF EC 40 10               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 MD  ALU  T -> MD, STK -> T
 0B7  26 60 0C 60 30               1 NN  MP  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 - 1 -> MAR 
 0B8  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 71 7f b9
    .MAP 161 177
 0B9  63 60 0C 40 FF     SSW1      1 B   PL  DQ 0  -  0  -  - - CNT S 0 POP NBS  STK + Q -> R0 
 0BA  3E 22 07 20 0F               0 TRAP(5)    C             - JMP              TRAP IF OVERFLOW
 0BB  4F FF EC 40 10               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 MD  ALU  T -> MD, STK -> T
 0BC  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 0BD  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 80 80 be
    .MAP 200
 0BE  62 FE 0C 60 04     LSW       1 B   PL  DA 0  T  0  -  - - CNT - 0 ALU IR   IR+T -> R0
 0BF  3E 22 07 20 0F               0 TRAP(5)    C             - JMP              TRAP IF OVERFLOW
 0C0  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 0C1  6F E1 EC 60 01               1 B   OR  DZ 0  -  T  -  - - CNT - 0 ALU MD   MD -> T
 0C2  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 81 81 c3
    .MAP 201
 0C3  62 FE 0C 60 04     LSD       1 B   PL  DA 0  T  0  -  - - CNT - 0 ALU IR   IR+T -> R0
 0C4  3E 22 07 20 0F               0 TRAP(5)    C             - JMP              TRAP IF OVERFLOW
 0C5  42 40 0C 60 30               1 B*  PL  ZA 1  0  0  -  - - CNT - 0 MAR ALU  R0 -> MAR, R0+1 ->R0
 0C6  0A A2 07 20 0F               0 TRAP5      C             - JMP              TRAP IF OVERFLOW
 0C7  4F FF EC 60 01               1 B*  OR  DZ 0  T  T  -  - - CNT - 0 ALU MD   MD -> T
 0C8  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 0C9  4F FF EC 40 01               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 ALU MD   T -> STK, MD -> T
 0CA  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 82 82 cb
    .MAP 202
 0CB  42 5E 0C 60 30     LSD0      1 B*  PL  ZA 1  T  0  -  - - CNT - 0 MAR ALU  T -> MAR, T+1 -> R0
 0CC  0A A2 07 20 0F               0 TRAP5      C             - JMP              TRAP IF OVERFLOW
 0CD  6F E1 EC 60 01               1 B   OR  DZ 0  -  T  -  - - CNT - 0 ALU MD   MD -> T
 0CE  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 0CF  4F FF EC 40 01               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 ALU MD   T -> STK, MD -> T
 0D0  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 -map- 83 83 d1
    .MAP 203
 0D1  03 E0 0C 40 FF     LXFW      1 Q   PL  DZ 0  -  -  -  - - CNT S 0 POP NBS  STK -> Q
 0D2  C3 E0 0C 70 00               1 BQL PL  DZ 0  -  0  -  - - CNT - 1 0        [0,Q] * 2 -> [R0,Q]
 0D3  C2 60 0C 60 FF               1 BQL PL  ZA 0  0  0  -  - - CNT - 0 NBD NBS  [R0,Q] * 2 -> [R0,Q]
 0D4  60 7E 2C 60 FF               1 B   PL  AQ 0  T  1  -  - - CNT - 0 NBD NBS  T + Q -> R1
 0D5  62 00 0C 60 D0               1 B   PL  ZA C  0  0  -  - - CNT - 0 BNK ALU  R0 + C -> R0 -> BNK
 0D6  2E 62 0C 60 30               1 NN  OR  ZA 0  1  -  -  - - CNT - 0 MAR ALU  R1 -> MAR
 0D7  26 C0 0C 70 04               1 NN  MP  DA 1  0  -  -  - - CNT - 1 4        R0 - 4
 0D8  0A A1 07 20 0F               0 TRAP5      Z             - JMP              TRAP IF BNK = 4
 0D9  6F E1 EC 60 01               1 B   OR  DZ 0  -  T  -  - - CNT - 0 ALU MD   MD -> T
 0DA  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 84 84 db
    .MAP 204
 0DB  6F E0 0C 70 02     LSTA      1 B   OR  DZ 0  -  0  -  - - CNT - 1 2        2 -> R0
 0DC  20 FA 0C 60 30               1 NN  PL  AB 0  G  0  -  - - CNT - 0 MAR ALU  G + R0 -> MAR 
 0DD  4F FE 0C 40 04               1 B*  OR  DZ 0  T  0  -  - - CNT S 0 ALU IR   T -> STK, IR -> R0
 0DE  62 E1 EC 60 01               1 B   PL  DA 0  0  T  -  - - CNT - 0 ALU MD   MD + R0 -> T
 0DF  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 85 85 e0
    .MAP 205
 0E0  82 7F EC 60 FF     LXB       1 BQR PL  ZA 0  T  T  -  - - CNT - 0 NBD NBS  [T,Q]/2 -> [T,Q]
 0E1  22 FE 0C 40 30               1 NN  PL  DA 0  T  -  -  - - CNT S 0 MAR ALU  STK + T -> MAR
 0E2  0A A2 07 20 0F               0 TRAP5      C             - JMP              TRAP IF OVERFLOW
 0E3  6F E0 2C 60 01               1 B   OR  DZ 0  -  1  -  - - CNT - 0 ALU MD   MD -> R1
 0E4  21 60 0C 60 FF               1 NN  PL  ZQ 0  -  -  -  - - CNT - 0 NBD NBS  Q
 0E5  0E 70 47 20 0F               0 #LXB1      F             - JMP              IF ODD(INDEX) 
 0E6  4F E2 24 68 00               1 B*  OR  DZ 0  1  1  RC 10 - CNT - 0 ALU ALU  R1^10 -> R1
 0E7  72 E3 EC 70 FF     #LXB1     1 B   AN  DA 0  1  T  -  - - CNT - 1 377      377 & R1 -> T 
 0E8  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 86 86 e9
    .MAP 206
 0E9  22 FE 0C 40 30     LXW       1 NN  PL  DA 0  T  -  -  - - CNT S 0 MAR ALU  STK + T -> MAR
 0EA  0A A2 07 20 0F               0 TRAP5      C             - JMP              TRAP IF OVERFLOW
 0EB  6F E1 EC 60 01               1 B   OR  DZ 0  -  T  -  - - CNT - 0 ALU MD   MD -> T
 0EC  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 87 87 ed
    .MAP 207
 0ED  60 FF EC 60 FF     LXD       1 B   PL  AB 0  T  T  -  - - CNT - 0 NBD NBS  T + T -> T
 0EE  3E 22 07 20 0F               0 TRAP(5)    C             - JMP              TRAP IF OVERFLOW
 0EF  62 FE 0C 40 30               1 B   PL  DA 0  T  0  -  - - CNT S 0 MAR ALU  STK + T -> MAR -> R0
 0F0  0A A2 07 20 0F               0 TRAP5      C             - JMP              TRAP IF OVERFLOW
 0F1  6F E1 EC 60 01               1 B   OR  DZ 0  -  T  -  - - CNT - 0 ALU MD   MD -> T
 0F2  22 40 0C 60 30               1 NN  PL  ZA 1  0  -  -  - - CNT - 0 MAR ALU  R0 + 1 -> MAR 
 0F3  0A A2 07 20 0F               0 TRAP5      C             - JMP              TRAP IF OVERFLOW
 0F4  4F FF EC 40 01               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 ALU MD   T -> STK, MD -> T
 0F5  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 -map- 88 88 f6
    .MAP 210
 0F6  6F E0 2C 40 FF     DADD      1 B   OR  DZ 0  -  1  -  - - CNT S 0 POP NBS  STK -> R1  !YH"
 0F7  62 FF EC 40 FF               1 B   PL  DA 0  T  T  -  - - CNT S 0 POP NBS  STK+T -> T !ZL"
 0F8  62 82 2C 40 FF               1 B   PL  DA C  1  1  -  - - CNT S 0 POP NBS  STK+R1 -> R1  
 0F9  2E 62 0C 40 0F               1 NN  OR  ZA 0  1  -  -  - - CNT S 0 PSH NBS  R1 -> STK  !ZH"
 0FA  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 89 89 fb
    .MAP 211
 0FB  6F E0 2C 40 FF     DSUB      1 B   OR  DZ 0  -  1  -  - - CNT S 0 POP NBS  STK -> R1  !YH"
 0FC  6A DF EC 40 FF               1 B   MI  DA 1  T  T  -  - - CNT S 0 POP NBS  STK-T -> T !ZL"
 0FD  6A 82 2C 40 FF               1 B   MI  DA C  1  1  -  - - CNT S 0 POP NBS  STK-R1 -> R1
 0FE  2E 62 0C 40 0F               1 NN  OR  ZA 0  1  -  -  - - CNT S 0 PSH NBS  R1 -> STK  !ZH"
 0FF  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     * MAP 212 DMUL
     * MAP 213 DDIV
     *                 TO BE FOUND ON PAGE 36
     * MAP 216 DSHL
     * MAP 217 DSHR
     * MAP 214,215     NOT USED
     $
 -map- 90 90 100
    .MAP 220
 100  6F E0 0C 40 FF     SSW       1 B   OR  DZ 0  -  0  -  - - CNT S 0 POP NBS  STK -> R0
 101  62 E0 0C 60 04               1 B   PL  DA 0  0  0  -  - - CNT - 0 ALU IR   R0 + IR -> R0 
 102  3E 22 07 20 0F               0 TRAP(5)    C             - JMP              TRAP IF OVERFLOW
 103  4F FF EC 40 10               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 MD  ALU  T -> MD, STK -> T
 104  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 105  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 91 91 106
    .MAP 221
 106  6F E0 2C 40 FF     SSD       1 B   OR  DZ 0  -  1  -  - - CNT S 0 POP NBS  STK -> R1
 107  6F E0 0C 40 FF               1 B   OR  DZ 0  -  0  -  - - CNT S 0 POP NBS  STK -> R0
 108  62 E0 0C 60 04               1 B   PL  DA 0  0  0  -  - - CNT - 0 ALU IR   IR+R0 -> R0
 109  3E 22 07 20 0F               0 TRAP(5)    C             - JMP              TRAP IF OVERFLOW
 10A  2E 62 0C 60 10               1 NN  OR  ZA 0  1  -  -  - - CNT - 0 MD  ALU  R1 -> MD
 10B  42 40 0C 60 30               1 B*  PL  ZA 1  0  0  -  - - CNT - 0 MAR ALU  R0 -> MAR, R0 + 1 -> R0 
 10C  3E 22 07 20 0F               0 TRAP(5)    C             - JMP              TRAP IF OVERFLOW
 10D  4F FF EC 40 10               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 MD  ALU  T -> MD, STK -> T
 10E  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 10F  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 92 92 110
    .MAP 222
 110  6F E0 2C 40 FF     SSD0      1 B   OR  DZ 0  -  1  -  - - CNT S 0 POP NBS  STK -> R1
 111  63 C0 0C 40 FF               1 B   PL  DZ 1  -  0  -  - - CNT S 0 POP NBS  STK + 1 -> R0 
 112  3E 21 07 20 0F               0 TRAP(5)    Z             - JMP              TRAP IF NIL
 113  2E 62 0C 60 10               1 NN  OR  ZA 0  1  -  -  - - CNT - 0 MD  ALU  R1 -> MD
 114  26 60 0C 60 30               1 NN  MP  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 - 1 -> MAR 
 115  4F FF EC 40 10               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 MD  ALU  T -> MD, STK -> T
 116  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 117  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 93 93 118
    .MAP 223
 118  6F E0 6C 40 FF     SXFW      1 B   OR  DZ 0  -  3  -  - - CNT S 0 POP NBS  STK -> R3
 119  03 E0 0C 40 FF               1 Q   PL  DZ 0  -  -  -  - - CNT S 0 POP NBS  STK -> Q
 11A  C3 E0 4C 70 00               1 BQL PL  DZ 0  -  2  -  - - CNT - 1 0        [0,Q] * 2 -> [R2,Q]
 11B  C2 64 4C 60 FF               1 BQL PL  ZA 0  2  2  -  - - CNT - 0 NBD NBS  [R2,Q] * 2 -> [R2,Q]
 11C  60 66 6C 60 FF               1 B   PL  AQ 0  3  3  -  - - CNT - 0 NBD NBS  R3 + Q -> R3
 11D  62 04 4C 60 FF               1 B   PL  ZA C  2  2  -  - - CNT - 0 NBD NBS  R2 + C -> R2
 11E  26 C4 0C 70 04               1 NN  MP  DA 1  2  -  -  - - CNT - 1 4        R2 - 4
 11F  3E 21 07 20 0F               0 TRAP(5)    Z             - JMP              TRAP IF OVERFLOW
 120  4F FF EC 40 10               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 MD  ALU  T -> MD, STK -> T
 121  2E 64 0C 60 D0               1 NN  OR  ZA 0  2  -  -  - - CNT - 0 BNK ALU  R2 -> BNK
 122  2E 66 0C 60 30               1 NN  OR  ZA 0  3  -  -  - - CNT - 0 MAR ALU  R3 -> MAR
 123  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 94 94 124
    .MAP 224                                          
 124  6E 7E 0C 60 30     TS        1 B   OR  ZA 0  T  0  -  - - CNT - 0 MAR ALU  T -> R0 -> MAR
 125  6F E0 2C 70 01               1 B   OR  DZ 0  -  1  -  - - CNT - 1 1        1 -> R1
 126  6F E1 EC 60 01               1 B   OR  DZ 0  -  T  -  - - CNT - 0 ALU MD   MD -> T
 127  2E 62 0C 60 10               1 NN  OR  ZA 0  1  -  -  - - CNT - 0 MD  ALU  R1 -> MD
 128  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 129  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 -map- 95 95 12a
    .MAP 225
 12A  83 E0 0C 40 FF     SXB       1 BQR PL  DZ 0  -  0  -  - - CNT S 0 POP NBS  [STK,Q]/2 -> [R0,Q]
 12B  62 E0 0C 40 30               1 B   PL  DA 0  0  0  -  - - CNT S 0 MAR ALU  STK+R0 -> R0 -> MAR
 12C  0A A2 07 20 0F               0 TRAP5      C             - JMP              TRAP IF OVERFLOW
 12D  6F E0 2C 60 01               1 B   OR  DZ 0  -  1  -  - - CNT - 0 ALU MD   MD -> R1
 12E  6F E0 4C 70 FF               1 B   OR  DZ 0  -  2  -  - - CNT - 1 377      377 -> R2
 12F  70 E5 EC 60 FF               1 B   AN  AB 0  2  T  -  - - CNT - 0 NBD NBS  R2 & T -> T
 130  21 60 0C 60 FF               1 NN  PL  ZQ 0  -  -  -  - - CNT - 0 NBD NBS  Q
 131  13 40 47 20 0F               0 #SXB1         F          - JMP              IF LOW-BYTE
 132  4F E4 44 68 00               1 B*  OR  DZ 0  2  2  RC 10 - CNT - 0 ALU ALU  R2^10 -> R2
 133  4F FF E4 68 00               1 B*  OR  DZ 0  T  T  RC 10 - CNT - 0 ALU ALU  T^10 -> T
 134  74 E4 2C 60 FF     #SXB1     1 B   NA  AB 0  2  1  -  - - CNT - 0 NBD NBS  -R2 & R1 -> R1
 135  2C E3 EC 60 10               1 NN  OR  AB 0  1  T  -  - - CNT - 0 MD  ALU  T OR R1 -> MD 
 136  4F E1 EC 40 30               1 B*  OR  DZ 0  0  T  -  - - CNT S 0 MAR ALU  R0 -> MAR, STK -> T
 137  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 96 96 138
    .MAP 226
 138  6F E0 0C 40 FF     SXW       1 B   OR  DZ 0  -  0  -  - - CNT S 0 POP NBS  STK -> R0
 139  62 E0 0C 40 FF               1 B   PL  DA 0  0  0  -  - - CNT S 0 POP NBS  R0 + STK -> R0
 13A  3E 22 07 20 0F               0 TRAP(5)    C             - JMP              TRAP IF OVERFLOW
 13B  4F FF EC 40 10               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 MD  ALU  T -> MD, STK -> T
 13C  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 13D  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 97 97 13e
    .MAP 227
 13E  6F E0 2C 40 FF     SXD       1 B   OR  DZ 0  -  1  -  - - CNT S 0 POP NBS  STK -> R1
 13F  6F E0 0C 40 FF               1 B   OR  DZ 0  -  0  -  - - CNT S 0 POP NBS  STK -> R0
 140  60 E0 0C 60 FF               1 B   PL  AB 0  0  0  -  - - CNT - 0 NBD NBS  R0 + R0 -> R0 
 141  3E 22 07 20 0F               0 TRAP(5)    C             - JMP              TRAP IF OVERFLOW
 142  62 C0 0C 40 FF               1 B   PL  DA 1  0  0  -  - - CNT S 0 POP NBS  R0+STK+1 -> R0
 143  3E 22 07 20 0F               0 TRAP(5)    C             - JMP              TRAP IF OVERFLOW
 144  2E 62 0C 60 10               1 NN  OR  ZA 0  1  -  -  - - CNT - 0 MD  ALU  R1 -> MD
 145  26 60 0C 60 30               1 NN  MP  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 - 1 -> MAR 
 146  4F FF EC 40 10               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 MD  ALU  T -> MD, STK -> T
 147  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
 148  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 -map- 98 98 149
    .MAP 230
 149  6F D8 07 20 0F               0 FADD       T             - JMP
 -map- 99 99 14a
    .MAP 231  
 14A  6F B8 07 20 0F               0 FSUB       T             - JMP
 -map- 9a 9a 14b
    .MAP 232
 14B  74 68 07 20 0F               0 FMUL       T             - JMP
 -map- 9b 9b 14c
    .MAP 233
 14C  77 98 07 20 0F               0 FDIV       T             - JMP
 -map- 9c 9c 14d
    .MAP 234
 14D  7A D8 07 20 0F               0 FCMP       T             - JMP        
 -map- 9d 9d 14e
    .MAP 235
 14E  6F E0 2C 40 FF     FABS      1 B   OR  DZ 0  -  1  -  - - CNT S 0 POP NBS  STK -> R1
 14F  76 E2 24 71 01               1 B   NA  DA 0  1  1  RC 1 - CNT - 1     1    _(1^1) & R1 -> R1
 150  2E 62 0C 40 0F               1 NN  OR  ZA 0  1  -  -  - - CNT S 0 PSH NBS  R1 -> STK
 151  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 9e 9e 152
    .MAP 236
 152  6F E0 2C 40 FF     FNEG      1 B   OR  DZ 0  -  1  -  - - CNT S 0 POP NBS  STK -> R1
 153  7A E2 24 71 01               1 B   XR  DA 0  1  1  RC 1 - CNT - 1     1    (1^1) XOR R1 -> R1
 154  2E 62 0C 40 0F               1 NN  OR  ZA 0  1  -  -  - - CNT S 0 PSH NBS  R1 -> STK
 155  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 9f 9f 156
    .MAP 237
 156  7C 78 07 20 0F               0 FFCT       T             - JMP
     $
 -map- a0 a0 157
    .MAP 240
 157  6F E0 AC 40 FF     READ      1 B   OR  DZ 0  -  5  -  - - CNT S 0 POP NBS  STK -> R5
 158  FF 48 03 20 0F               0 N_GET       T            - JSR              GET(R5,R6)
 159  2E 6C 0C 60 10               1 NN  OR  ZA 0  6  -  -  - - CNT - 0 MD  ALU  R6 -> MD
 15A  4F FF EC 40 30               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 MAR ALU  T -> MAR, STK -> T
 15B  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- a1 a1 15c
    .MAP 241
 15C  6E 7E CC 60 FF     WRITE     1 B   OR  ZA 0  T  6  -  - - CNT - 0 NBD NBS  T -> R6
 15D  6F E0 AC 40 FF               1 B   OR  DZ 0  -  5  -  - - CNT S 0 POP NBS  STK -> R5
 15E  6F E1 EC 40 FF               1 B   OR  DZ 0  -  T  -  - - CNT S 0 POP NBS  STK -> T
 15F  FF B8 03 20 0F               0 N_PUT       T             - JSR              PUT(R5,R6)
 160  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- a2 a2 161
    .MAP 242
 161  47 C8 03 20 0F     DSKR      0 #CLRADDR   T             - JSR              CLRADDR     <clear diskbuffer pointer>
 162  6F E0 2C 70 80               1 B   OR  DZ 0  -  1  -  - - CNT - 1 200      128 -> R1
 163  6F E0 0C 70 08               1 B   OR  DZ 0  -  0  -  - - CNT - 1 10       8 -> R0
 164  2E 60 0C 60 60               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 IOA ALU  R0 -> IO-ADDRESS
 165  2D 60 0C 60 FF     #DR       1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 NBD NBS  IO-DATA -> DUMMY
     *                                                  ^IOD WHEN HARDWARE READY
 166  2D 60 0C 60 F7               1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 NBD IOD  IO-DATA -> DUMMY
 167  2D 60 0C 60 17               1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 MD  IOD  IO-DATA -> MD 
 168  2D 60 0C 60 F7               1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 NBD IOD  IO-DATA -> DUMMY
 169  2D 60 0C 60 F7               1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 NBD IOD  IO-DATA -> DUMMY
 16A  42 5F EC 60 30               1 B*  PL  ZA 1  T  T  -  - - CNT - 0 MAR ALU  T -> MAR, T+1 -> T
 16B  66 62 2C 60 FF               1 B   MP  ZA 0  1  1  -  - - CNT - 0 NBD NBS  R1 - 1 -> R1
 16C  16 59 07 20 0F               0 #DR        -Z            - JMP              IF > 0
 16D  6F E1 EC 40 FF               1 B   OR  DZ 0  -  T  -  - - CNT S 0 POP NBS  STK -> T
 16E  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- a3 a3 16f
    .MAP 243
 16F  47 F8 03 20 0F     DSKW      0 #INITWRIT  T             - JSR              INITWRIT  < write preamble & clear pointer>
 170  6F E0 2C 70 80               1 B   OR  DZ 0  -  1  -  - - CNT - 1 200      128 -> R1
 171  6F E0 AC 70 08               1 B   OR  DZ 0  -  5  -  - - CNT - 1 10       10 -> R5
 172  2E 6A 0C 60 60               1 NN  OR  ZA 0  5  -  -  - - CNT - 0 IOA ALU  R5 -> IO-ADDRESS
 173  42 5F EC 60 30     #DW       1 B*  PL  ZA 1  T  T  -  - - CNT - 0 MAR ALU  T -> MAR, T+1 -> T
 174  2D 60 0C 60 F1               1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 NBD MD   MD -> IO-DATA 
     *                                              ^IOD WHEN HARDWARE READY
 175  2D 60 0C 60 71               1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 IOD MD   MD -> IO-DATA 
 176  2D 60 0C 60 71               1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 IOD MD   MD -> IO-DATA 
 177  2D 60 0C 60 71               1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 IOD MD   MD -> IO-DATA 
 178  2D 60 0C 60 71               1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 IOD MD   MD -> IO-DATA 
 179  66 62 2C 60 FF               1 B   MP  ZA 0  1  1  -  - - CNT - 0 NBD NBS  R1 - 1 -> R1
 17A  17 39 07 20 0F               0 #DW        -Z            - JMP              IF > 0
 17B  6F E1 EC 40 FF               1 B   OR  DZ 0  -  T  -  - - CNT S 0 POP NBS  STK -> T
 17C  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- a4 a4 17d
    .MAP 244
 17D  2E 74 0C 40 0F     SETRK     1 NN  OR  ZA 0  P  -  -  - - CNT S 0 PSH NBS  P -> STK
 17E  6E 7F 4C 60 FF               1 B   OR  ZA 0  T  12 -  - - CNT - 0 NBD NBS  T -> R12
 17F  49 08 03 20 0F               0 #SETTRACK  T             - JSR              SETTRACK(T)
 180  6F E1 4C 40 FF               1 B   OR  DZ 0  -  P  -  - - CNT S 0 POP NBS  STK -> P
 181  6F E1 EC 40 FF               1 B   OR  DZ 0  -  T  -  - - CNT S 0 POP NBS  STK -> T
 182  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 -map- a5 a5 183
    .MAP 245
 183  6E 7E 4C 60 FF     UCHK      1 B   OR  ZA 0  T  2  -  - - CNT - 0 NBD NBS  T -> R2    !HI"
 184  6F E0 2C 40 FF               1 B   OR  DZ 0  -  1  -  - - CNT S 0 POP NBS  STK -> R1 !LOW"
 185  6F E1 EC 40 FF               1 B   OR  DZ 0  -  T  -  - - CNT S 0 POP NBS  STK -> T    !X"
 186  28 DE 2C 60 FF               1 NN  MI  AB 1  T  1  -  - - CNT - 0 NBD NBS  T - R1
 187  3E 0A 07 20 0F               0 TRAP(4)    -C            - JMP              TRAP IF X < LOW
 188  28 C5 EC 60 FF               1 NN  MI  AB 1  2  T  -  - - CNT - 0 NBD NBS  R2 - T
 189  3E 0A 07 20 0F               0 TRAP(4)    -C            - JMP              TRAP IF HI < X
 18A  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- a7 a7 18b
    .MAP 247
 18B  6F E0 0C 60 04     SYS       1 B   OR  DZ 0  -  0  -  - - CNT - 0 ALU IR   IR -> R0
 18C  FE A1 07 20 0F               0 NBOOT      Z             - JMP              IF IR=0
 18D  66 60 0C 60 FF               1 B   MP  ZA 0  0  0  -  - - CNT - 0 NBD NBS  R0 - 1 -> R0
 18E  19 59 07 20 0F               0 >1        -Z             - JMP              IF IR<>1
 
 
 18F  2E 72 0C 40 0F               1 NN  OR  ZA 0  M  -  -  - - CNT S 0 PSH NBS  M -> STK
 190  2E 74 0C 40 0F               1 NN  OR  ZA 0  P  -  -  - - CNT S 0 PSH NBS  P -> STK
 191  FF A8 03 20 0F               0 NDUMP      T             - JSR              NDUMP
 192  6F E1 4C 40 FF               1 B   OR  DZ 0  -  P  -  - - CNT S 0 POP NBS  STK -> R3
 193  6F E1 2C 40 FF               1 B   OR  DZ 0  -  M  -  - - CNT S 0 POP NBS  STK -> R0
 194  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 195  66 60 0C 60 FF     >1        1 B   MP  ZA 0  0  0  -  - - CNT - 0 NBD NBS  R0 - 1 -> R0
 196  19 A9 07 20 0F               0 >2         -Z            - JMP              IF IR<>2
 197  2E 7E 0C 40 0F               1 NN  OR  ZA 0  T  -  -  - - CNT S 0 PSH NBS  T -> STK
 198  6E 75 EC 60 FF               1 B   OR  ZA 0  P  T  -  - - CNT - 0 NBD NBS  P -> T
 199  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 19A  66 60 0C 60 FF     >2        1 B   MP  ZA 0  0  0  -  - - CNT - 0 NBD NBS  R0 - 1 -> R0
 19B  1A 19 07 20 0F               0 >3         -Z            - JMP              IF IR<>3
 19C  66 DF 6C 70 18               1 B   MP  DA 1  T  H  -  - - CNT - 1 30       T - 30 -> H
 19D  6F E0 0C 70 05               1 B   OR  DZ 0  -  0  -  - - CNT - 1 5        5 -> R0
 19E  4F FF EC 40 10               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 MD  ALU  T -> MD, STK -> T
 19F  20 E1 4C 60 30               1 NN  PL  AB 0  0  P  -  - - CNT - 0 MAR ALU  R0 + P -> MAR 
 1A0  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 1A1  66 60 0C 60 FF     >3        1 B   MP  ZA 0  0  0  -  - - CNT - 0 NBD NBS  R0 - 1 -> R0
 1A2  3F 99 07 20 0F               0 >4         -Z            - JMP              IF IR<>4
 1A3  02 F6 0C 70 18               1 Q   PL  DA 0  H  -  -  - - CNT - 1 30       H + 30 -> Q
 1A4  4D 7F EC 40 0F               1 B*  OR  ZQ 0  T  T  -  - - CNT S 0 PSH NBS  T -> STK, Q -> T
 1A5  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 -map- a8 a8 1a6
    .MAP 250
 1A6  6F E0 2C 60 04     ENTP      1 B   OR  DZ 0  -  1  -  - - CNT - 0 ALU IR   IR -> R1
 1A7  26 C2 0C 70 10               1 NN  MP  DA 1  1  -  -  - - CNT - 1 20       R1 - 16
 1A8  1A E1 07 20 0F               0 ENTP1      Z             - JMP              IF R1 = 16
 1A9  2E 62 0C 60 40               1 NN  OR  ZA 0  1  -  -  - - CNT - 0 SR  ALU  R1 -> SR
 1AA  6F E0 3C 70 00               1 B   OR  DZ 0  -  1  MR - - CNT - 1 0        MSK(0,SR) -> R1
 1AB  28 C3 2C 60 FF               1 NN  MI  AB 1  1  M  -  - - CNT - 0 NBD NBS  R1 - M
 1AC  1A F2 07 20 0F               0 ENTP2      C             - JMP              IF R1 >= M
 1AD  3D C8 07 20 0F               0 TRAP(2)    T             - JMP              TRAP(2)
 1AE  68 E2 2C 60 FF     ENTP1     1 B   MI  AB 0  1  1  -  - - CNT - 0 NBD NBS  -1 -> R1
 1AF  6F E0 0C 70 03     ENTP2     1 B   OR  DZ 0  -  0  -  - - CNT - 1 3        3 -> R0
 1B0  2E 72 0C 60 10               1 NN  OR  ZA 0  M  -  -  - - CNT - 0 MD  ALU  M -> MD
 1B1  20 E1 CC 60 30               1 NN  PL  AB 0  0  L  -  - - CNT - 0 MAR ALU  R0 + L -> MAR 
 1B2  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR !DEV.STATUS"
 1B3  6E 63 2C 60 FF               1 B   OR  ZA 0  1  M  -  - - CNT - 0 NBD NBS  R1 -> M
 1B4  6E E2 2C 60 01               1 B   OR  DA 0  1  1  -  - - CNT - 0 ALU MD   MD OR R1 -> R1
 1B5  2E 62 0C 60 80               1 NN  OR  ZA 0  1  -  -  - - CNT - 0 INM ALU  R1 -> INM
 1B6  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- a9 a9 1b7
    .MAP 251
 1B7  6F E0 0C 70 03     EXP       1 B   OR  DZ 0  -  0  -  - - CNT - 1 3        3 -> R0
 1B8  20 E1 CC 60 30               1 NN  PL  AB 0  0  L  -  - - CNT - 0 MAR ALU  R0 + L -> MAR 
 1B9  6F E1 2C 60 01               1 B   OR  DZ 0  -  M  -  - - CNT - 0 ALU MD   MD -> M
 1BA  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR !DEV.STATUS"
 1BB  6F E0 0C 60 01               1 B   OR  DZ 0  -  0  -  - - CNT - 0 ALU MD   MD -> R0
 1BC  2C E1 2C 60 80               1 NN  OR  AB 0  0  M  -  - - CNT - 0 INM ALU  R0 OR M -> INM
 1BD  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- aa aa 1be
    .MAP 252
 1BE  2A DE 0C 40 FF     ULSS      1 NN  MI  DA 1  T  -  -  - - CNT S 0 POP NBS  STK-T
 1BF  2A BA 07 20 0F               0 #PUSH1    -C             - JMP              IF STK < T
 1C0  71 61 EC 60 FF               1 B   AN  ZQ 0  -  T  -  - - CNT - 0 NBD NBS  0 -> T
 1C1  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- ab ab 1c2
    .MAP 253
 1C2  2A FE 0C 40 FF     ULEQ      1 NN  MI  DA 0  T  -  -  - - CNT S 0 POP NBS  STK-T-1
 1C3  29 C2 07 20 0F               0 #PUSH0     C             - JMP              IF STK > T
 1C4  6F E1 EC 70 01               1 B   OR  DZ 0  -  T  -  - - CNT - 1 1        1 -> T
 1C5  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- ac ac 1c6
    .MAP 254
 1C6  2A FE 0C 40 FF     UGTR      1 NN  MI  DA 0  T  -  -  - - CNT S 0 POP NBS  STK-T-1
 1C7  2A B2 07 20 0F               0 #PUSH1     C             - JMP              IF STK > T
 1C8  71 61 EC 60 FF               1 B   AN  ZQ 0  -  T  -  - - CNT - 0 NBD NBS  0 -> T
 1C9  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- ad ad 1ca
    .MAP 255
 1CA  2A DE 0C 40 FF     UGEQ      1 NN  MI  DA 1  T  -  -  - - CNT S 0 POP NBS  STK-T
 1CB  29 CA 07 20 0F               0 #PUSH0    -C             - JMP              IF STK < T
 1CC  6F E1 EC 70 01               1 B   OR  DZ 0  -  T  -  - - CNT - 1 1        1 -> T
 1CD  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 -map- ae ae 1ce
    .MAP 256
 1CE  6F E0 6C 60 04     TRA       1 B   OR  DZ 0  -  3  -  - - CNT - 0 ALU IR   IR -> R3
 1CF  6F E0 4C 40 FF               1 B   OR  DZ 0  -  2  -  - - CNT S 0 POP NBS  STK -> R2
 1D0  6E 7E 2C 60 FF               1 B   OR  ZA 0  T  1  -  - - CNT - 0 NBD NBS  T -> R1
 1D1  6F E1 EC 40 FF               1 B   OR  DZ 0  -  T  -  - - CNT S 0 POP NBS  STK -> T
 1D2  42 78 07 20 0F               0 TRANSFER   T             - JMP              TRANSFER(R3,R1,R2)
 -map- af af 1d3
    .MAP 257
 1D3  6F E0 0C 60 04     RDS       1 B   OR  DZ 0  -  0  -  - - CNT - 0 ALU IR   IR -> R0
 1D4  6F E0 24 68 04     #RDS      1 B   OR  DZ 0  -  1  RC 10 - CNT - 0 ALU IR   (IR^10) -> R1 
 1D5  6E E2 2C 60 04               1 B   OR  DA 0  1  1  -  - - CNT - 0 ALU IR   IR OR R1 -> R1
 1D6  2E 62 0C 60 10               1 NN  OR  ZA 0  1  -  -  - - CNT - 0 MD  ALU  R1 -> MD
 1D7  42 5F EC 60 30               1 B*  PL  ZA 1  T  T  -  - - CNT - 0 MAR ALU  T -> MAR, T+1 -> T
 1D8  66 60 0C 60 FF               1 B   MP  ZA 0  0  0  -  - - CNT - 0 NBD NBS  R0-1 -> R0
 1D9  1D 48 27 20 0F               0 #RDS       -S            - JMP              JMP #RDS IF >= 0
 1DA  6F E1 EC 40 FF               1 B   OR  DZ 0  -  T  -  - - CNT S 0 POP NBS  STK -> T
 1DB  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 -map- b0 b0 1dc
    .MAP 260
     .$T-
 1DC  0E 7E 0C 40 FF     LODFW     1 Q   OR  ZA 0  T  -  -  - - CNT S 0 POP NBS  T -> Q, STK -> DUMMY
     .$T+
 1DD  45 48 03 20 0F               0 #RESTRSTK  T             - JSR              LOAD EXPR STACK
 1DE  4D 7F EC 40 0F               1 B*  OR  ZQ 0  T  T  -  - - CNT S 0 PSH NBS  T -> STK, Q -> T
 1DF  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- b1 b1 1e0
    .MAP 261
 1E0  0E 7E 0C 60 FF     LODFD     1 Q   OR  ZA 0  T  -  -  - - CNT - 0 NBD NBS  T -> Q
 1E1  6F E0 2C 40 FF               1 B   OR  DZ 0  -  1  -  - - CNT S 0 POP NBS  STK -> R1
 1E2  6F E1 EC 40 FF               1 B   OR  DZ 0  -  T  -  - - CNT S 0 POP NBS  STK -> T
 1E3  45 48 03 20 0F               0 #RESTRSTK  T             - JSR              LOAD EXPR STACK
 1E4  4D 7F EC 40 0F               1 B*  OR  ZQ 0  T  T  -  - - CNT S 0 PSH NBS  T -> STK, Q -> T
 1E5  2E 62 0C 40 0F               1 NN  OR  ZA 0  1  -  -  - - CNT S 0 PSH NBS  R1 -> STK
 1E6  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- b2 b2 1e7
    .MAP 262
 1E7  66 D6 0C 70 11     STORE     1 B   MP  DA 1  H  0  -  - - CNT - 1 21       H - 17 -> R0
 1E8  28 C1 8C 60 FF               1 NN  MI  AB 1  0  S  -  - - CNT - 0 NBD NBS  R0 - S
 1E9  3D EA 07 20 0F               0 TRAP(3)   -C             - JMP              IF R0 < S
 1EA  45 C8 03 20 0F               0 #SAVESTK   T             - JSR              STORE EXPR STACK
 1EB  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- b3 b3 1ec
    .MAP 263
 1EC  0E 7E 0C 60 FF     STOFV     1 Q   OR  ZA 0  T  -  -  - - CNT - 0 NBD NBS  T -> Q
 1ED  6F E1 EC 40 FF               1 B   OR  DZ 0  -  T  -  - - CNT S 0 POP NBS  STK -> T
 1EE  66 D6 0C 70 11               1 B   MP  DA 1  H  0  -  - - CNT - 1 21       H - 17 -> R0
 1EF  28 C1 8C 60 FF               1 NN  MI  AB 1  0  S  -  - - CNT - 0 NBD NBS  R0 - S
 1F0  3D EA 07 20 0F               0 TRAP(3)   -C             - JMP              IF R0 < S
 1F1  45 C8 03 20 0F               0 #SAVESTK   T             - JSR              STORE EXPR STACK
 1F2  2D 60 0C 60 10               1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 MD  ALU  Q -> MD
 1F3  42 59 8C 60 30               1 B*  PL  ZA 1  S  S  -  - - CNT - 0 MAR ALU  S -> MAR, S+1 -> S
 1F4  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- b4 b4 1f5
    .MAP 264
 1F5  4F FF EC 40 10     STOT      1 B*  OR  DZ 0  T  T  -  - - CNT S 0 MD  ALU  T -> MD, STK -> T
 1F6  42 59 8C 60 30               1 B*  PL  ZA 1  S  S  -  - - CNT - 0 MAR ALU  S -> MAR, S+1 -> S
 1F7  28 D9 6C 60 FF               1 NN  MI  AB 1  S  H  -  - - CNT - 0 NBD NBS  S - H
 1F8  3D E2 07 20 0F               0 TRAP(3)    C             - JMP              TRAP(3) IF S >= H
 1F9  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- b5 b5 1fa
    .MAP 265
 1FA  2E 7E 0C 40 0F     COPT      1 NN  OR  ZA 0  T  -  -  - - CNT S 0 PSH NBS  T -> STK
 1FB  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- b6 b6 1fc
    .MAP 266
 1FC  66 79 8C 60 FF     DECS      1 B   MP  ZA 0  S  S  -  - - CNT - 0 NBD NBS  S-1 -> S
 1FD  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 -map- b7 b7 1fe
    .MAP 267
 1FE  6F E0 0C 60 04     PCOP      1 B   OR  DZ 0  -  0  -  - - CNT - 0 ALU IR   IR -> R0
 1FF  2E 78 0C 60 10               1 NN  OR  ZA 0  S  -  -  - - CNT - 0 MD  ALU  S -> MD
 200  20 E1 CC 60 30               1 NN  PL  AB 0  0  L  -  - - CNT - 0 MAR ALU  R0 + L -> MAR 
 201  00 F9 EC 60 FF               1 Q   PL  AB 0  S  T  -  - - CNT - 0 NBD NBS  S + T -> Q
 202  3D E2 07 20 0F               0 TRAP(3)    C             - JMP              IF OVERFLOW
 203  28 56 0C 60 FF               1 NN  MI  AQ 1  H  -  -  - - CNT - 0 NBD NBS  H - Q
 204  3D EA 07 20 0F               0 TRAP(3)   -C             - JMP              IF H < Q
 205  6F E0 2C 40 FF               1 B   OR  DZ 0  -  1  -  - - CNT S 0 POP NBS  STK -> R1
 206  2E 7E 0C 60 FF               1 NN  OR  ZA 0  T  -  -  - - CNT - 0 NBD NBS  T
 207  20 D1 07 20 0F               0 PCOP2      Z             - JMP              IF T=0
 208  42 42 2C 60 30     PCOP1     1 B*  PL  ZA 1  1  1  -  - - CNT - 0 MAR ALU  R1 -> MAR, R1+1 -> R1
 209  2D 60 0C 60 11               1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 MD  MD   MD -> MD
 20A  42 59 8C 60 30               1 B*  PL  ZA 1  S  S  -  - - CNT - 0 MAR ALU  S -> MAR, S+1 -> S
 20B  66 7F EC 60 FF               1 B   MP  ZA 0  T  T  -  - - CNT - 0 NBD NBS  T - 1 -> T
 20C  20 89 07 20 0F               0 PCOP1      -Z            - JMP              IF <> 0
 20D  6F E1 EC 40 FF     PCOP2     1 B   OR  DZ 0  -  T  -  - - CNT S 0 POP NBS  STK -> T
 20E  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 -map- b8 b8 20f
    .MAP 270
 20F  62 FF EC 40 FF     UADD      1 B   PL  DA 0  T  T  -  - - CNT S 0 POP NBS  T+STK -> T
 210  3E 62 03 20 0F               0 TRAP(7)    C             - JSR              IF OVERFLOW
 211  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- b9 b9 212
    .MAP 271
 212  6A DF EC 40 FF     USUB      1 B   MI  DA 1  T  T  -  - - CNT S 0 POP NBS  STK-T -> T
 213  3E 6A 03 20 0F               0 TRAP(7)    -C            - JSR              IF OVERFLOW
 214  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- ba ba 215
    .MAP 272
 215  0F E0 0C 40 FF     UMUL      1 Q   OR  DZ 0  -  -  -  - - CNT S 0 POP NBS  STK -> Q
 216  3C 98 03 20 0F               0 #MUL16     T             - JSR              T * Q -> [R2,Q]
 217  2E 64 0C 60 FF               1 NN  OR  ZA 0  2  -  -  - - CNT - 0 NBD NBS  R2
 218  3E 69 03 20 0F               0 TRAP(7)    -Z            - JSR              IF OVERFLOW
 219  6D 61 EC 60 FF               1 B   OR  ZQ 0  -  T  -  - - CNT - 0 NBD NBS  Q -> T
 21A  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- bb bb 21b
    .MAP 273
 21B  2E 7E 0C 60 FF     UDIV      1 NN  OR  ZA 0  T  -  -  - - CNT - 0 NBD NBS  T
 21C  3E 61 03 20 0F               0 TRAP(7)    Z             - JSR              IF ZERODIVIDE 
 21D  0F E0 0C 40 FF               1 Q   OR  DZ 0  -  -  -  - - CNT S 0 POP NBS  STK -> Q
 21E  3A 58 03 20 0F               0 #DIVIDE       T          - JSR              Q DIV T -> Q
 21F  6D 61 EC 60 FF               1 B   OR  ZQ 0  -  T  -  - - CNT - 0 NBD NBS  Q -> T
 220  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- bc bc 221
    .MAP 274
 221  2E 7E 0C 60 FF     UMOD      1 NN  OR  ZA 0  T  -  -  - - CNT - 0 NBD NBS  T
 222  3E 61 03 20 0F               0 TRAP(7)    Z             - JSR              IF ZEROMOD
 223  0F E0 0C 40 FF               1 Q   OR  DZ 0  -  -  -  - - CNT S 0 POP NBS  STK -> Q
 224  3A 58 03 20 0F               0 #DIVIDE       T          - JSR              Q MOD T -> R2 
 225  6E 65 EC 60 FF               1 B   OR  ZA 0  2  T  -  - - CNT - 0 NBD NBS  R2 -> T
 226  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- bd bd 227
    .MAP 275
 227  4F FF EC 40 40     ROR       1 B*  OR  DZ 0  T  T  -  - - CNT S 0 SR  ALU  T -> SR, STK -> T
 228  4F FF F4 60 00               1 B*  OR  DZ 0  T  T  RR - - CNT - 0 ALU ALU  (T^SR) -> T
 229  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- be be 22a
    .MAP 276  SHL(X,N MOD 16)
 22A  4F FE 0C 40 40     SHL       1 B*  OR  DZ 0  T  0  -  - - CNT S 0 SR  ALU  T -> SR, STK -> R0
 22B  76 E0 1C 70 00               1 B   NA  DA 0  0  0  MR - - CNT - 1 0        _MSK(0,SR) & R0 -> R0
 22C  2A 5E 0C 60 40               1 NN  MI  ZA 1  T  -  -  - - CNT - 0 SR  ALU  -T -> SR
 22D  4F E1 F4 60 00               1 B*  OR  DZ 0  0  T  RR - - CNT - 0 ALU ALU  (R0^SR) -> T  
 22E  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- bf bf 22f
    .MAP 277  SHR(X,N MOD 16)
 22F  4F FF EC 40 40     SHR       1 B*  OR  DZ 0  T  T  -  - - CNT S 0 SR  ALU  T -> SR, STK -> T
 230  1F E0 1C 70 00               1 Q   XN  DZ 0  -  -  MR - - CNT - 1 0        _M(0,SR) -> Q 
 231  53 7F F4 60 00               1 B*  AN  DQ 0  T  T  RR - - CNT - 0 ALU ALU  (T^SR) & Q -> T
 232  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 -map- c0 c0 233
    .MAP 300
 233  6F E0 0C 40 FF     FOR1      1 B   OR  DZ 0  -  0  -  - - CNT S 0 POP NBS  STK -> R0
 234  6F E0 2C 40 FF               1 B   OR  DZ 0  -  1  -  - - CNT S 0 POP NBS  STK -> R1
 235  6F E0 6C 60 04               1 B   OR  DZ 0  -  3  -  - - CNT - 0 ALU IR   IR -> R3
 236  6F E0 44 68 04               1 B   OR  DZ 0  -  2  RC 10 - CNT - 0 ALU IR   IR^10 -> R2
 237  6E E4 4C 60 04               1 B   OR  DA 0  2  2  -  - - CNT - 0 ALU IR   IR OR R2 -> R2
 238  08 C1 EC 60 FF               1 Q   MI  AB 1  0  T  -  - - CNT - 0 NBD NBS  R0 - T -> Q
 239  2E 66 0C 60 FF               1 NN  OR  ZA 0  3  -  -  - - CNT - 0 NBD NBS  R3
 23A  23 C1 07 20 0F               0 #UP1       Z             - JMP              GOTO UP1 IF R3=0
 23B  09 40 0C 60 FF               1 Q   MI  ZQ 1  -  -  -  - - CNT - 0 NBD NBS  -Q -> Q
 23C  2D 60 0C 60 FF     #UP1      1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 NBD NBS  Q
 23D  24 79 47 20 0F               0 #EXIT      -FZ           - JMP              GOTO EXIT IF Q>0
 23E  2E 60 0C 60 10               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MD  ALU  R0 -> MD
 23F  2E 62 0C 60 30               1 NN  OR  ZA 0  1  -  -  - - CNT - 0 MAR ALU  R1 -> MAR
 240  2E 62 0C 60 10               1 NN  OR  ZA 0  1  -  -  - - CNT - 0 MD  ALU  R1 -> MD
 241  42 59 8C 60 30               1 B*  PL  ZA 1  S  S  -  - - CNT - 0 MAR ALU  S -> MAR, S+1 -> S
 242  28 D9 6C 60 FF               1 NN  MI  AB 1  S  H  -  - - CNT - 0 NBD NBS  S - H
 243  3D E2 07 20 0F               0 TRAP(3)    C             - JMP              TRAP(3) IF S >= H
 244  4F FF EC 40 10               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 MD  ALU  T -> MD, STK -> T
 245  42 59 8C 60 30               1 B*  PL  ZA 1  S  S  -  - - CNT - 0 MAR ALU  S -> MAR, S+1 -> S
 246  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 247  62 E4 4C 60 02     #EXIT     1 B   PL  DA 0  2  2  -  - - CNT - 0 ALU PC   PC + R2 -> R2 
 248  66 C4 4C 70 02               1 B   MP  DA 1  2  2  -  - - CNT - 1 2        R2 - 2 -> R2
 249  4F E5 EC 40 20               1 B*  OR  DZ 0  2  T  -  - - CNT S 0 PC  ALU  R2 -> PC, STK -> T
 24A  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- c1 c1 24b
    .MAP 301
 24B  66 78 8C 60 30     FOR2      1 B   MP  ZA 0  S  4  -  - - CNT - 0 MAR ALU  S-1 -> R4 -> MAR
 24C  6F E0 4C 60 04               1 B   OR  DZ 0  -  2  -  - - CNT - 0 ALU IR   IR -> R2
 24D  24 F8 17 20 0F               0 #POS       -H            - JMP              GOTO POS IF -H
 24E  6E E4 44 78 FF               1 B   OR  DA 0  2  2  RC 10 - CNT - 1 377      (377^10) OR R2 -> R2
 24F  6F E0 0C 60 01     #POS      1 B   OR  DZ 0  -  0  -  - - CNT - 0 ALU MD   MD -> R0
 250  26 68 0C 60 30               1 NN  MP  ZA 0  4  -  -  - - CNT - 0 MAR ALU  R4 - 1 -> MAR 
 251  6F E0 64 68 04               1 B   OR  DZ 0  -  3  RC 10 - CNT - 0 ALU IR   IR^10 -> R3
 252  6E E6 6C 60 04               1 B   OR  DA 0  3  3  -  - - CNT - 0 ALU IR   IR OR R3 -> R3
 253  6F E0 2C 60 01               1 B   OR  DZ 0  -  1  -  - - CNT - 0 ALU MD   MD -> R1
 254  2E 62 0C 60 30               1 NN  OR  ZA 0  1  -  -  - - CNT - 0 MAR ALU  R1 -> MAR
 255  62 E4 8C 60 01               1 B   PL  DA 0  2  4  -  - - CNT - 0 ALU MD   MD + R2 -> R4 
 256  26 30 87 20 0F               0 #TERM      V             - JMP              IF OVERFLOW
 257  68 C8 0C 60 FF               1 B   MI  AB 1  4  0  -  - - CNT - 0 NBD NBS  R4 - R0 -> R0 
 258  2E 64 0C 60 FF               1 NN  OR  ZA 0  2  -  -  - - CNT - 0 NBD NBS  R2
 259  25 B8 47 20 0F               0 #UP2       -F            - JMP              GOTO UP2 IF R2>=0
 25A  6A 40 0C 60 FF               1 B   MI  ZA 1  0  0  -  - - CNT - 0 NBD NBS  -R0 -> R0
 25B  2E 60 0C 60 FF     #UP2      1 NN  OR  ZA 0  0  -  -  - - CNT - 0 NBD NBS  R0
 25C  26 39 47 20 0F               0 #TERM      -FZ           - JMP              GOTO TERM IF R0>0
 25D  2E 68 0C 60 10               1 NN  OR  ZA 0  4  -  -  - - CNT - 0 MD  ALU  R4 -> MD
 25E  2E 62 0C 60 30               1 NN  OR  ZA 0  1  -  -  - - CNT - 0 MAR ALU  R1 -> MAR
 25F  62 E6 6C 60 02               1 B   PL  DA 0  3  3  -  - - CNT - 0 ALU PC   PC + R3 -> R3 
 260  66 C6 6C 70 02               1 B   MP  DA 1  3  3  -  - - CNT - 1 2        R3 - 2 -> R3
 261  2E 66 0C 60 20               1 NN  OR  ZA 0  3  -  -  - - CNT - 0 PC  ALU  R3 -> PC
 262  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 263  66 D9 8C 70 02     #TERM     1 B   MP  DA 1  S  S  -  - - CNT - 1 2        S - 2 -> S
 264  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 -map- c2 c2 265
    .MAP 302
 265  6F E0 0C 60 02     ENTC      1 B   OR  DZ 0  -  0  -  - - CNT - 0 ALU PC   PC -> R0
 266  62 E0 04 68 04               1 B   PL  DA 0  0  0  RC 10 - CNT - 0 ALU IR   IR^10 + R0 -> R0
 267  62 E0 0C 60 04               1 B   PL  DA 0  0  0  -  - - CNT - 0 ALU IR   IR + R0 -> R0 
 268  2E 60 0C 60 20               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 PC  ALU  R0 -> PC
 269  6F E0 04 68 04               1 B   OR  DZ 0  -  0  RC 10 - CNT - 0 ALU IR   IR^10 -> R0
 26A  6E E0 0C 60 04               1 B   OR  DA 0  0  0  -  - - CNT - 0 ALU IR   IR OR R0 -> R0
 26B  6F E0 24 68 04               1 B   OR  DZ 0  -  1  RC 10 - CNT - 0 ALU IR   IR^10 -> R1
 26C  6E E2 2C 60 04               1 B   OR  DA 0  1  1  -  - - CNT - 0 ALU IR   IR OR R1 -> R1
 26D  08 C2 0C 60 FF               1 Q   MI  AB 1  1  0  -  - - CNT - 0 NBD NBS  R1 - R0 -> Q
 26E  63 60 4C 70 02               1 B   PL  DQ 0  -  2  -  - - CNT - 1 2        Q + 2 -> R2
 26F  60 E4 4C 60 FF               1 B   PL  AB 0  2  2  -  - - CNT - 0 NBD NBS  R2 + R2 -> R2 
 270  62 E4 4C 60 02               1 B   PL  DA 0  2  2  -  - - CNT - 0 ALU PC   PC + R2 -> R2 
 271  2E 64 0C 60 10               1 NN  OR  ZA 0  2  -  -  - - CNT - 0 MD  ALU  R2 -> MD
 272  42 59 8C 60 30               1 B*  PL  ZA 1  S  S  -  - - CNT - 0 MAR ALU  S -> MAR, S+1 -> S
 273  28 D9 6C 60 FF               1 NN  MI  AB 1  S  H  -  - - CNT - 0 NBD NBS  S - H
 274  3D E2 07 20 0F               0 TRAP(3)    C             - JMP              TRAP(3) IF S >= H
 275  68 DE 0C 60 FF               1 B   MI  AB 1  T  0  -  - - CNT - 0 NBD NBS  T - R0 -> R0
 276  27 D0 27 20 0F               0 #ENTC1     S             - JMP              IF T < R0
 277  28 DE 2C 60 FF               1 NN  MI  AB 1  T  1  -  - - CNT - 0 NBD NBS  T - R1
 278  27 D9 27 20 0F               0 #ENTC1     -SZ           - JMP              IF T > R1
 279  62 40 0C 60 FF               1 B   PL  ZA 1  0  0  -  - - CNT - 0 NBD NBS  R0 + 1 -> R0
 27A  60 E0 0C 60 FF               1 B   PL  AB 0  0  0  -  - - CNT - 0 NBD NBS  R0 + R0 -> R0 
 27B  62 E0 0C 60 02               1 B   PL  DA 0  0  0  -  - - CNT - 0 ALU PC   PC + R0 -> R0 
 27C  2E 60 0C 60 20               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 PC  ALU  R0 -> PC
 27D  6F E0 0C 60 02     #ENTC1    1 B   OR  DZ 0  -  0  -  - - CNT - 0 ALU PC   PC -> R0
 27E  62 E0 04 68 04               1 B   PL  DA 0  0  0  RC 10 - CNT - 0 ALU IR   IR^10 + R0 -> R0
 27F  62 E0 0C 60 04               1 B   PL  DA 0  0  0  -  - - CNT - 0 ALU IR   IR + R0 -> R0 
 280  4F E1 EC 40 20               1 B*  OR  DZ 0  0  T  -  - - CNT S 0 PC  ALU  R0 -> PC, STK -> T
 281  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- c3 c3 282
    .MAP 303
 282  66 79 8C 60 30     EXC       1 B   MP  ZA 0  S  S  -  - - CNT - 0 MAR ALU  S - 1 -> S -> MAR
 283  2D 60 0C 60 21               1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 PC  MD   MD -> PC
 284  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 -map- c4 c4 285
    .MAP 304
 285  72 FE 0C 70 0F     TRAP      1 B   AN  DA 0  T  0  -  - - CNT - 1 17       T MOD 16 -> R0
 286  6F E1 EC 40 FF               1 B   OR  DZ 0  -  T  -  - - CNT S 0 POP NBS  STK -> T
 287  3E F8 07 20 0F               0 TRAP(R0)   T             - JMP              TRAP(R0)
 288  -0000 -0000 -0000 -0000 -ffFF     .NOP 377
 289  -0000 -0000 -0000 -0000 -ffFF     .NOP 377
 -map- c5 c5 28a
    .MAP 305
 28A  6E 7E 4C 60 FF     CHK       1 B   OR  ZA 0  T  2  -  - - CNT - 0 NBD NBS  T -> R2 !HI"
 28B  6F E0 2C 40 FF               1 B   OR  DZ 0  -  1  -  - - CNT S 0 POP NBS  STK -> R1 !LOW"
 28C  6F E1 EC 40 FF               1 B   OR  DZ 0  -  T  -  - - CNT S 0 POP NBS  STK -> T  !X" 
 28D  28 DE 2C 60 FF               1 NN  MI  AB 1  T  1  -  - - CNT - 0 NBD NBS  T-R1
 28E  3E 00 27 20 0F               0 TRAP(4)    S             - JMP              IF X < LOW
 28F  28 C5 EC 60 FF               1 NN  MI  AB 1  2  T  -  - - CNT - 0 NBD NBS  R2-T
 290  3E 00 27 20 0F               0 TRAP(4)    S             - JMP              IF HI < X
 291  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- c6 c6 292
    .MAP 306
 292  6E 7E 4C 60 FF     CHKZ      1 B   OR  ZA 0  T  2  -  - - CNT - 0 NBD NBS  T -> R2 !HI"
 293  63 E1 EC 40 FF               1 B   PL  DZ 0  -  T  -  - - CNT S 0 POP NBS  STK -> T  !X" 
 294  28 C5 EC 60 FF               1 NN  MI  AB 1  2  T  -  - - CNT - 0 NBD NBS  R2 - T
 295  3E 0A 07 20 0F               0 TRAP(4)    -C            - JMP              IF HI < X
 296  0F E0 0F E0 03     #CHKOK    1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- c7 c7 297
    .MAP 307
 297  2E 7E 0C 60 FF     CHKS      1 NN  OR  ZA 0  T  -  -  - - CNT - 0 NBD NBS  T
 298  29 68 47 20 0F               0 #CHKOK     -F            - JMP              IF >= 0
 299  3E 08 07 20 0F               0 TRAP(4)    T             - JMP              TRAP(4)
     $
 -map- c8 c8 29a
    .MAP 310
 29A  2A DE 0C 40 FF     EQL       1 NN  MI  DA 1  T  -  -  - - CNT S 0 POP NBS  STK-T
 29B  2A B1 07 20 0F               0 #PUSH1     Z             - JMP              IF =0
 29C  71 61 EC 60 FF     #PUSH0    1 B   AN  ZQ 0  -  T  -  - - CNT - 0 NBD NBS  0 -> T
 29D  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- c9 c9 29e
    .MAP 311
 29E  6A DF EC 40 FF     NEQ       1 B   MI  DA 1  T  T  -  - - CNT S 0 POP NBS  STK-T
 29F  2A B9 07 20 0F               0 #PUSH1     -Z            - JMP              IF # 0
 2A0  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- ca ca 2a1
    .MAP 312
 2A1  2A DE 0C 40 FF     LSS       1 NN  MI  DA 1  T  -  -  - - CNT S 0 POP NBS  STK-T
 2A2  2A B0 27 20 0F               0 #PUSH1     S             - JMP              IF STK < T
 2A3  71 61 EC 60 FF               1 B   AN  ZQ 0  -  T  -  - - CNT - 0 NBD NBS  0 -> T
 2A4  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- cb cb 2a5
    .MAP 313
 2A5  2A DE 0C 40 FF     LEQ       1 NN  MI  DA 1  T  -  -  - - CNT S 0 POP NBS  STK-T
 2A6  2A B1 27 20 0F               0 #PUSH1     SZ            - JMP              IF STK <= T
 2A7  71 61 EC 60 FF               1 B   AN  ZQ 0  -  T  -  - - CNT - 0 NBD NBS  0 -> T
 2A8  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- cc cc 2a9
    .MAP 314
 2A9  2A DE 0C 40 FF     GTR       1 NN  MI  DA 1  T  -  -  - - CNT S 0 POP NBS  STK-T
 2AA  29 C1 27 20 0F               0 #PUSH0     SZ            - JMP              IF STK <= T
 2AB  6F E1 EC 70 01     #PUSH1    1 B   OR  DZ 0  -  T  -  - - CNT - 1 1        1 -> T
 2AC  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- cd cd 2ad
    .MAP 315
 2AD  2A DE 0C 40 FF     GEQ       1 NN  MI  DA 1  T  -  -  - - CNT S 0 POP NBS  STK-T
 2AE  29 C0 27 20 0F               0 #PUSH0     S             - JMP              IF STK < T
 2AF  6F E1 EC 70 01               1 B   OR  DZ 0  -  T  -  - - CNT - 1 1        1 -> T
 2B0  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- ce ce 2b1
    .MAP 316
 2B1  2E 7E 0C 60 FF     ABS       1 NN  OR  ZA 0  T  -  -  - - CNT - 0 NBD NBS  T
 2B2  2B 58 47 20 0F               0 #NG       -F             - JMP              JMP IF >= 0
 -map- cf cf 2b3
    .MAP 317
 2B3  6A 5F EC 60 FF     NEG       1 B   MI  ZA 1  T  T  -  - - CNT - 0 NBD NBS  -T -> T
 2B4  3E 80 83 20 0F               0 TRAP(10)   V             - JSR              IF OVERFLOW
 2B5  0F E0 0F E0 03     #NG       1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 -map- d0 d0 2b6
    .MAP 320
 2B6  6E FF EC 40 FF     OR        1 B   OR  DA 0  T  T  -  - - CNT S 0 POP NBS  STK OR T -> T 
 2B7  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- d1 d1 2b8
    .MAP 321
 2B8  7A FF EC 40 FF     XOR       1 B   XR  DA 0  T  T  -  - - CNT S 0 POP NBS  STK XOR T -> T
 2B9  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- d2 d2 2ba
    .MAP 322
 2BA  72 FF EC 40 FF     AND       1 B   AN  DA 0  T  T  -  - - CNT S 0 POP NBS  STK & T -> T
 2BB  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- d3 d3 2bc
    .MAP 323
 2BC  7E 7F EC 60 FF     COM       1 B   XN  ZA 0  T  T  -  - - CNT - 0 NBD NBS  -(0 XOR T) -> T
 2BD  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- d4 d4 2be
    .MAP 324
 2BE  63 C0 0C 40 40     IN        1 B   PL  DZ 1  -  0  -  - - CNT S 0 SR  ALU  STK+1 -> R0 -> SR
 2BF  26 C0 0C 70 11               1 NN  MP  DA 1  0  -  -  - - CNT - 1 21       R0 - 21
 2C0  29 C2 07 20 0F               0 #PUSH0     C             - JMP              IF R0 > 16
 2C1  72 FF F4 70 01               1 B   AN  DA 0  T  T  RR - - CNT - 1 1        (1^SR) & T -> T
 2C2  2A B9 07 20 0F               0 #PUSH1     -Z            - JMP              GOTO PUSH1 IF #0
 2C3  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- d5 d5 2c4
    .MAP 325
 2C4  5C FF EC 40 0F     LINIL     1 B*  XN  AB 0  T  T  -  - - CNT S 0 PSH NBS  T -> STK, -1 -> T
 2C5  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- d6 d6 2c6
    .MAP 326
 2C6  2E 7E 0C 60 40     MSK       1 NN  OR  ZA 0  T  -  -  - - CNT - 0 SR  ALU  T -> SR
 2C7  6F E1 FC 70 00               1 B   OR  DZ 0  -  T  MR - - CNT - 1 0        MSK(SR) -> T
 2C8  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- d7 d7 2c9
    .MAP 327
 2C9  7A FF EC 70 01     NOT       1 B   XR  DA 0  T  T  -  - - CNT - 1 1        1 XOR T -> T
 2CA  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 -map- d8 d8 2cb
    .MAP 330
 2CB  62 FF EC 40 FF     ADD       1 B   PL  DA 0  T  T  -  - - CNT S 0 POP NBS  T+STK -> T
 2CC  3E 80 83 20 0F               0 TRAP(10)   V             - JSR              IF OVERFLOW
 2CD  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- d9 d9 2ce
    .MAP 331
 2CE  6A DF EC 40 FF     SUB       1 B   MI  DA 1  T  T  -  - - CNT S 0 POP NBS  STK-T -> T
 2CF  3E 80 83 20 0F               0 TRAP(10)   V             - JSR              IF OVERFLOW
 2D0  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- da da 2d1
    .MAP 332  
 2D1  0F E0 0C 40 FF     MUL       1 Q   OR  DZ 0  -  -  -  - - CNT S 0 POP NBS  STK -> Q
 2D2  78 7E 6C 60 FF               1 B   XR  AQ 0  T  3  -  - - CNT - 0 NBD NBS  T XOR Q -> R3 
 2D3  2D 60 0C 60 FF               1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 NBD NBS  Q
 2D4  2D 68 47 20 0F               0 QPOS       -F            - JMP              IF >= 0
 2D5  09 40 0C 60 FF               1 Q   MI  ZQ 1  -  -  -  - - CNT - 0 NBD NBS  -Q -> Q
 2D6  2E 7E 0C 60 FF     QPOS      1 NN  OR  ZA 0  T  -  -  - - CNT - 0 NBD NBS  T
 2D7  2D 98 47 20 0F               0 TPOS       -F            - JMP              IF >= 0
 2D8  6A 5F EC 60 FF               1 B   MI  ZA 1  T  T  -  - - CNT - 0 NBD NBS  -T -> T
 2D9  3C 98 03 20 0F     TPOS      0 #MUL16        T          - JSR              Q * T -> [R2,Q]
 2DA  2E 64 0C 60 FF               1 NN  OR  ZA 0  2  -  -  - - CNT - 0 NBD NBS  R2
 2DB  2D E1 07 20 0F               0 NO-OV      Z             - JMP              IF R2=0
 2DC  3E 88 03 20 0F               0 TRAP(10)   T             - JSR              IF OVERFLOW
 2DD  2E 08 07 20 0F               0 NO.OVER    T             - JMP              IF MASKED
 2DE  2D 60 0C 60 FF     NO-OV     1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 NBD NBS  Q
 2DF  3E 80 43 20 0F               0 TRAP(10)   F             - JSR              IF OVERFLOW
 2E0  2E 66 0C 60 FF     NO.OVER   1 NN  OR  ZA 0  3  -  -  - - CNT - 0 NBD NBS  R3
 2E1  2E 38 47 20 0F               0 RESPOS     -F            - JMP              JMP IF >=0
 2E2  09 40 0C 60 FF               1 Q   MI  ZQ 1  -  -  -  - - CNT - 0 NBD NBS  -Q -> Q
 2E3  6D 61 EC 60 FF     RESPOS    1 B   OR  ZQ 0  -  T  -  - - CNT - 0 NBD NBS  Q -> T
 2E4  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- db db 2e5
    .MAP 333
 2E5  0F E0 0C 40 FF     DIV       1 Q   OR  DZ 0  -  -  -  - - CNT S 0 POP NBS  STK -> Q
 2E6  78 7E 6C 60 FF               1 B   XR  AQ 0  T  3  -  - - CNT - 0 NBD NBS  T XOR Q -> R3 
 2E7  2D 60 0C 60 FF               1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 NBD NBS  Q
 2E8  2E A8 47 20 0F               0 D.QPOS     -F            - JMP              JMP IF >=0
 2E9  09 40 0C 60 FF               1 Q   MI  ZQ 1  -  -  -  - - CNT - 0 NBD NBS  -Q -> Q
 2EA  2E 7E 0C 60 FF     D.QPOS    1 NN  OR  ZA 0  T  -  -  - - CNT - 0 NBD NBS  T
 2EB  3E 81 03 20 0F               0 TRAP(10)    Z            - JSR              IF ZERODIVIDE 
 2EC  2F 28 47 20 0F               0 D.TPOS     -F            - JMP              IF > 0
 2ED  6A 5F EC 60 FF               1 B   MI  ZA 1  T  T  -  - - CNT - 0 NBD NBS  -T -> T
 2EE  2D 60 0C 60 FF               1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 NBD NBS  Q
 2EF  2F 28 47 20 0F               0 D.TPOS     -F            - JMP              GOTO #D3 IF >=0
 2F0  26 7E 0C 60 FF               1 NN  MP  ZA 0  T  -  -  - - CNT - 0 NBD NBS  T - 1
 2F1  3E 81 03 20 0F               0 TRAP(10)   Z             - JSR              IF OV !MININT DIV -1"
 2F2  3A 58 03 20 0F     D.TPOS    0 #DIVIDE    T             - JSR              Q DIV T -> Q
 2F3  2E 66 0C 60 FF               1 NN  OR  ZA 0  3  -  -  - - CNT - 0 NBD NBS  R3
 2F4  2F 68 47 20 0F               0 D.RESPOS   -F            - JMP              JMP IF >=0
 2F5  09 40 0C 60 FF               1 Q   MI  ZQ 1  -  -  -  - - CNT - 0 NBD NBS  -Q -> Q
 2F6  6D 61 EC 60 FF     D.RESPOS  1 B   OR  ZQ 0  -  T  -  - - CNT - 0 NBD NBS  Q -> T
 2F7  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
     * MAP 334  NOT USED 
 -map- dd dd 2f8
    .MAP 335
 2F8  22 5E 0C 60 40     BIT       1 NN  PL  ZA 1  T  -  -  - - CNT - 0 SR  ALU  T+1 -> SR
 2F9  6F E1 F4 70 01               1 B   OR  DZ 0  -  T  RR - - CNT - 1 1        (1^SR) -> T
 -map- de de 2fa
    .MAP 336  NOP
 2FA  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- df df 2fb
    .MAP 337
 2FB  6F E0 2C 40 FF     MOVF      1 B   OR  DZ 0  -  1  -  - - CNT S 0 POP NBS  STK -> R1    !FROM OFFS"
 2FC  03 E0 0C 40 FF               1 Q   PL  DZ 0  -  -  -  - - CNT S 0 POP NBS  STK -> Q     !FROM FP"
 2FD  C3 E0 0C 70 00               1 BQL PL  DZ 0  -  0  -  - - CNT - 1 0        [0,Q]*2 -> [R0,Q]
 2FE  C2 60 0C 60 FF               1 BQL PL  ZA 0  0  0  -  - - CNT - 0 NBD NBS  [R0,Q]*2 -> [R0,Q]
 2FF  60 62 2C 60 FF               1 B   PL  AQ 0  1  1  -  - - CNT - 0 NBD NBS  R1 + Q -> R1 !FROM ADDR"
 300  62 00 0C 60 FF               1 B   PL  ZA C  0  0  -  - - CNT - 0 NBD NBS  R0 + C -> R0 !FROM BNK" 
 301  26 C0 0C 70 04               1 NN  MP  DA 1  0  -  -  - - CNT - 1 4        R0 - 4
 302  3E 21 07 20 0F               0 TRAP(5)    Z             - JMP              IF BNK = 4
 303  6F E0 6C 40 FF               1 B   OR  DZ 0  -  3  -  - - CNT S 0 POP NBS  STK -> R3    !TO OFFS"
 304  03 E0 0C 40 FF               1 Q   PL  DZ 0  -  -  -  - - CNT S 0 POP NBS  STK -> Q     !TO FP"
 305  C3 E0 4C 70 00               1 BQL PL  DZ 0  -  2  -  - - CNT - 1 0        (0,Q)*2 -> (R2,Q)
 306  C2 64 4C 60 FF               1 BQL PL  ZA 0  2  2  -  - - CNT - 0 NBD NBS  (R2,Q)*2 -> (R2,Q)
 307  60 66 6C 60 FF               1 B   PL  AQ 0  3  3  -  - - CNT - 0 NBD NBS  R3 + Q -> R3 !TO ADDR"
 308  62 04 4C 60 FF               1 B   PL  ZA C  2  2  -  - - CNT - 0 NBD NBS  R2 + C -> R2 !TO BNK"
 309  20 E7 EC 60 FF               1 NN  PL  AB 0  3  T  -  - - CNT - 0 NBD NBS  R3 + T
 30A  62 04 8C 60 FF               1 B   PL  ZA C  2  4  -  - - CNT - 0 NBD NBS  R2 + C -> R4
 30B  26 C8 0C 70 04               1 NN  MP  DA 1  4  -  -  - - CNT - 1 4        R4 - 4
 30C  3E 22 07 20 0F               0 TRAP(5)    C             - JMP              IF OVERFLOW
 30D  2E 7E 0C 60 FF               1 NN  OR  ZA 0  T  -  -  - - CNT - 0 NBD NBS  T
 30E  31 71 07 20 0F               0 MOVF2      Z             - JMP              IF T=0
 30F  2E 60 0C 60 D0     MOVF1     1 NN  OR  ZA 0  0  -  -  - - CNT - 0 BNK ALU  R0 -> BNK
 310  42 42 2C 60 30               1 B*  PL  ZA 1  1  1  -  - - CNT - 0 MAR ALU  R1 -> MAR, R1 + 1 -> R1 
 311  62 00 0C 60 FF               1 B   PL  ZA C  0  0  -  - - CNT - 0 NBD NBS  R0 + C -> R0
 312  62 46 6C 60 11               1 B   PL  ZA 1  3  3  -  - - CNT - 0 MD  MD   MD -> MD, R3 + 1 -> R3
 313  42 04 4C 60 D0               1 B*  PL  ZA C  2  2  -  - - CNT - 0 BNK ALU  R2 -> BNK, R2 + C -> R2 
 314  26 66 0C 60 30               1 NN  MP  ZA 0  3  -  -  - - CNT - 0 MAR ALU  R3 - 1 -> MAR 
 315  66 7F EC 60 FF               1 B   MP  ZA 0  T  T  -  - - CNT - 0 NBD NBS  T - 1 -> T
 316  30 F9 07 20 0F               0 MOVF1      -Z          -   JMP              IF <> 0
 317  6F E1 EC 40 FF     MOVF2     1 B   OR  DZ 0  -  T  -  - - CNT S 0 POP NBS  STK -> T
 318  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 -map- e0 e0 319
    .MAP 340
 319  63 C0 4C 40 FF     MOV       1 B   PL  DZ 1  -  2  -  - - CNT S 0 POP NBS  STK + 1 -> R2 !SRC"
 31A  3E 21 07 20 0F               0 TRAP(5)    Z             - JMP              IF NIL
 31B  60 FE 4C 60 FF               1 B   PL  AB 0  T  2  -  - - CNT - 0 NBD NBS  T + R2 -> R2
 31C  62 FE 2C 40 FF               1 B   PL  DA 0  T  1  -  - - CNT S 0 POP NBS  STK + T -> R1 !DST"
 31D  3E 22 07 20 0F               0 TRAP(5)    C             - JMP              IF OVERFLOW
 31E  2E 7E 0C 60 FF               1 NN  OR  ZA 0  T  -  -  - - CNT - 0 NBD NBS  T             !SIZE"
 31F  32 51 07 20 0F               0 MOV2       Z             - JMP              IF T=0
 320  28 E5 EC 60 30     MOV1      1 NN  MI  AB 0  2  T  -  - - CNT - 0 MAR ALU  R2 - T - 1 -> MAR
 321  2D 60 0C 60 11               1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 MD  MD   MD -> MD
 322  28 C3 EC 60 30               1 NN  MI  AB 1  1  T  -  - - CNT - 0 MAR ALU  R1 - T -> MAR 
 323  66 7F EC 60 FF               1 B   MP  ZA 0  T  T  -  - - CNT - 0 NBD NBS  T - 1 -> T
 324  32 09 07 20 0F               0 MOV1      -Z             - JMP              IF <> 0
 325  6F E1 EC 40 FF     MOV2      1 B   OR  DZ 0  -  T  -  - - CNT S 0 POP NBS  STK -> T
 326  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- e1 e1 327
    .MAP 341
 327  62 FE 4C 40 FF     CMP       1 B   PL  DA 0  T  2  -  - - CNT S 0 POP NBS  STK + T -> R2 !SRC1"
 328  3E 22 07 20 0F               0 TRAP(5)    C             - JMP              IF OVERFLOW
 329  62 FE 2C 40 FF               1 B   PL  DA 0  T  1  -  - - CNT S 0 POP NBS  STK + T -> R1 !SRC2"
 32A  3E 22 07 20 0F               0 TRAP(5)    C             - JMP              IF OVERFLOW
 32B  2E 7E 0C 60 FF               1 NN  OR  ZA 0  T  -  -  - - CNT - 0 NBD NBS  T             !SIZE"
 32C  33 71 07 20 0F               0 CMP3       Z             - JMP              IF T=0
 32D  28 C5 EC 60 30     CMP1      1 NN  MI  AB 1  2  T  -  - - CNT - 0 MAR ALU  R2 - T -> MAR 
 32E  6F E0 0C 60 01               1 B   OR  DZ 0  -  0  -  - - CNT - 0 ALU MD   MD -> R0
 32F  28 C3 EC 60 30               1 NN  MI  AB 1  1  T  -  - - CNT - 0 MAR ALU  R1 - T -> MAR 
 330  2A C0 0C 60 01               1 NN  MI  DA 1  0  -  -  - - CNT - 0 ALU MD   MD - R0
 331  33 49 07 20 0F               0 CMP2       -Z            - JMP              IF MD <> R0
 332  66 7F EC 60 FF               1 B   MP  ZA 0  T  T  -  - - CNT - 0 NBD NBS  T - 1 -> T
 333  32 D9 07 20 0F               0 CMP1       -Z            - JMP              IF <> 0
 334  6F E1 EC 40 01     CMP2      1 B   OR  DZ 0  -  T  -  - - CNT S 0 ALU MD   MD -> T -> STK
 335  6E 61 EC 60 FF               1 B   OR  ZA 0  0  T  -  - - CNT - 0 NBD NBS  R0 -> T
 336  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 337  2E 7E 0C 40 0F     CMP3      1 NN  OR  ZA 0  T  -  -  - - CNT S 0 PSH NBS  T -> STK
 338  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 -map- e2 e2 339
    .MAP 342
 339  4F A8 07 20 0F               0 DDT        T             - JMP
 -map- e3 e3 33a
    .MAP 343  
 33A  68 F8 07 20 0F               0 REPL       T             - JMP
 -map- e4 e4 33b
    .MAP 344
 33B  5D 28 07 20 0F               0 BBLT       T             - JMP
 -map- e5 e5 33c
    .MAP 345
 33C  51 F8 07 20 0F               0 DCH        T             - JMP
 -map- e6 e6 33d
    .MAP 346
 33D  67 E0 0C 40 40     UNPACK    1 B   MP  DZ 0  -  0  -  - - CNT S 0 SR  ALU  -STK-1 -> R0 -> SR
 33E  4F FF F4 60 00               1 B*  OR  DZ 0  T  T  RR - - CNT - 0 ALU ALU  T^SR -> T
 33F  22 E0 0C 40 40               1 NN  PL  DA 0  0  -  -  - - CNT S 0 SR  ALU  STK + R0 -> SR
 340  76 FF FC 70 00               1 B   NA  DA 0  T  T  MR - - CNT - 1     0    _MSK(0,SR) & T -> T
 341  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- e7 e7 342
    .MAP 347
 342  63 C0 6C 40 FF     PACK      1 B   PL  DZ 1  -  3  -  - - CNT S 0 POP NBS  STK + 1 -> R3 
 343  2A C6 0C 40 40               1 NN  MI  DA 1  3  -  -  - - CNT S 0 SR  ALU  STK - R3 -> SR
 344  6F E0 4C 40 30               1 B   OR  DZ 0  -  2  -  - - CNT S 0 MAR ALU  STK -> R2 -> MAR
 345  6F E0 1C 70 00               1 B   OR  DZ 0  -  0  MR - - CNT - 1 0        MSK(0,SR) -> R0
 346  2E 66 0C 60 40               1 NN  OR  ZA 0  3  -  -  - - CNT - 0 SR  ALU  R3 -> SR
 347  4F E0 14 60 00               1 B*  OR  DZ 0  0  0  RR - - CNT - 0 ALU ALU  (R0^SR) -> R0 
 348  72 E0 2C 60 01               1 B   AN  DA 0  0  1  -  - - CNT - 0 ALU MD   MD & R0 -> R1 
 349  4F FF F4 60 00               1 B*  OR  DZ 0  T  T  RR - - CNT - 0 ALU ALU  (T^SR) -> T   
 34A  74 E1 EC 60 FF               1 B   NA  AB 0  0  T  -  - - CNT - 0 NBD NBS  _R0 & T -> T  
 34B  2C E3 EC 60 10               1 NN  OR  AB 0  1  T  -  - - CNT - 0 MD  ALU  R1 OR T -> MD 
 34C  4F E5 EC 40 30               1 B*  OR  DZ 0  2  T  -  - - CNT S 0 MAR ALU  R2 -> MAR, STK -> T
 34D  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 -map- e8 e8 34e
    .MAP 350
 34E  4F FE 0C 40 04     GB        1 B*  OR  DZ 0  T  0  -  - - CNT S 0 ALU IR   T -> STK, IR -> R0
 34F  2E 7C 0C 60 30               1 NN  OR  ZA 0  L  -  -  - - CNT - 0 MAR ALU  L -> MAR
 350  35 28 07 20 0F               0 #GB        T             - JMP              GOTO GB
 351  2E 7E 0C 60 30     #GBREP    1 NN  OR  ZA 0  T  -  -  - - CNT - 0 MAR ALU  T -> MAR
 352  6F E1 EC 60 01     #GB       1 B   OR  DZ 0  -  T  -  - - CNT - 0 ALU MD   MD -> T
 353  66 60 0C 60 FF               1 B   MP  ZA 0  0  0  -  - - CNT - 0 NBD NBS  R0 - 1 -> R0
 354  35 19 07 20 0F               0 #GBREP     -Z            - JMP              IF # 0
 355  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- e9 e9 356
    .MAP 351
 356  2E 7C 0C 60 30     GB1       1 NN  OR  ZA 0  L  -  -  - - CNT - 0 MAR ALU  L -> MAR
 357  4F FF EC 40 01               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 ALU MD   T -> STK, MD -> T
 358  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- ea ea 359
    .MAP 352
 359  6E 7E 2C 60 FF     ALLOC     1 B   OR  ZA 0  T  1  -  - - CNT - 0 NBD NBS  T -> R1
 35A  6E 79 EC 60 FF               1 B   OR  ZA 0  S  T  -  - - CNT - 0 NBD NBS  S -> T
 35B  60 E3 8C 60 FF               1 B   PL  AB 0  1  S  -  - - CNT - 0 NBD NBS  S+R1 -> S
 35C  36 62 07 20 0F               0 TRAP3      C             - JMP              IF OVERFLOW
 35D  28 D7 8C 60 FF               1 NN  MI  AB 1  H  S  -  - - CNT - 0 NBD NBS  H-S 
 35E  36 6A 07 20 0F               0 TRAP3     -C             - JMP              IF H < S
 35F  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- eb eb 360
    .MAP 353
 360  6F E0 2C 60 04     ENTR      1 B   OR  DZ 0  -  1  -  - - CNT - 0 ALU IR   IR -> R1
 361  60 E3 8C 60 FF               1 B   PL  AB 0  1  S  -  - - CNT - 0 NBD NBS  S+R1 -> S
 362  36 62 07 20 0F               0 TRAP3      C             - JMP              IF OVERFLOW
 363  28 D7 8C 60 FF               1 NN  MI  AB 1  H  S  -  - - CNT - 0 NBD NBS  H-S 
 364  36 6A 07 20 0F               0 TRAP3     -C             - JMP              IF H < S
 365  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 366  64 C3 8C 60 FF     TRAP3     1 B   MP  AB 1  1  S  -  - - CNT - 0 NBD NBS  S - R1 -> S
 367  3D E8 07 20 0F               0 TRAP(3)    T             - JMP              TRAP(3)
     $
 -map- ec ec 368
    .MAP 354
 368  6E 7D 8C 60 FF     RTN       1 B   OR  ZA 0  L  S  -  - - CNT - 0 NBD NBS  L -> S
 369  62 58 2C 60 30               1 B   PL  ZA 1  S  1  -  - - CNT - 0 MAR ALU  S+1 -> R1 -> MAR
 36A  6F E1 CC 60 01               1 B   OR  DZ 0  -  L  -  - - CNT - 0 ALU MD   MD -> L
 36B  62 42 2C 60 30               1 B   PL  ZA 1  1  1  -  - - CNT - 0 MAR ALU  R1+1 -> R1 -> MAR
 36C  6F E0 4C 60 01               1 B   OR  DZ 0  -  2  -  - - CNT - 0 ALU MD   MD -> R2
 36D  37 38 47 20 0F               0 #LOC       -F            - JMP              IF >= 0
 36E  2E 78 0C 60 30               1 NN  OR  ZA 0  S  -  -  - - CNT - 0 MAR ALU  S -> MAR
 36F  6F E1 AC 60 01               1 B   OR  DZ 0  -  G  -  - - CNT - 0 ALU MD   MD -> G
 370  2E 7A 0C 60 30               1 NN  OR  ZA 0  G  -  -  - - CNT - 0 MAR ALU  G -> MAR
 371  2D 60 0C 60 E1               1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 F   MD   MD -> F
 372  7A E4 44 71 01               1 B   XR  DA 0  2  2  RC 1 - CNT - 1 1        1^1 XOR R2 -> R2
 373  2E 64 0C 60 20     #LOC      1 NN  OR  ZA 0  2  -  -  - - CNT - 0 PC  ALU  R2 -> PC
 374  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- ed ed 375
    .MAP 355
 375  6F E0 6C 60 04     CX        1 B   OR  DZ 0  -  3  -  - - CNT - 0 ALU IR   IR -> R3
 376  6F E0 4C 60 06               1 B   OR  DZ 0  -  2  -  - - CNT - 0 ALU IR*  IR -> R2
 377  2E 7A 0C 60 10     #MARKG    1 NN  OR  ZA 0  G  -  -  - - CNT - 0 MD  ALU  G -> MD
 378  6E 78 2C 60 30               1 B   OR  ZA 0  S  1  -  - - CNT - 0 MAR ALU  S -> R1 -> MAR
 379  41 DD 8C 60 10               1 B*  PL  ZB 1  L  S  -  - - CNT - 0 MD  ALU  L -> MD, S+1 -> S
 37A  42 59 8C 60 30               1 B*  PL  ZA 1  S  S  -  - - CNT - 0 MAR ALU  S -> MAR, S+1 -> S
 37B  6F E0 84 71 01               1 B   OR  DZ 0  -  4  RC 1 - CNT - 1 1        1^1 -> R4
 37C  6E E8 8C 60 02               1 B   OR  DA 0  4  4  -  - - CNT - 0 ALU PC   PC OR R4 -> R4
 37D  2E 68 0C 60 10               1 NN  OR  ZA 0  4  -  -  - - CNT - 0 MD  ALU  R4 -> MD
 37E  42 59 8C 60 30               1 B*  PL  ZA 1  S  S  -  - - CNT - 0 MAR ALU  S -> MAR, S+1 -> S
 37F  2D 60 0C 60 1E               1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 MD  F    F -> MD
 380  42 59 8C 60 30               1 B*  PL  ZA 1  S  S  -  - - CNT - 0 MAR ALU  S -> MAR, S+1 -> S
 381  6E 63 CC 60 FF               1 B   OR  ZA 0  1  L  -  - - CNT - 0 NBD NBS  R1 -> L
 382  6F E0 0C 70 20               1 B   OR  DZ 0  -  0  -  - - CNT - 1 40       40 -> R0
 383  20 E0 6C 60 30               1 NN  PL  AB 0  0  3  -  - - CNT - 0 MAR ALU  R0+R3 -> MAR
 384  6F E1 AC 60 01               1 B   OR  DZ 0  -  G  -  - - CNT - 0 ALU MD   MD -> G
 385  2E 7A 0C 60 30               1 NN  OR  ZA 0  G  -  -  - - CNT - 0 MAR ALU  G -> MAR
 386  2D 60 0C 60 E1               1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 F   MD   MD -> F
 387  20 E4 4C 60 20               1 NN  PL  AB 0  2  2  -  - - CNT - 0 PC  ALU  R2 + R2 -> PC 
 388  6F E0 24 68 04               1 B   OR  DZ 0  -  1  RC 10 - CNT - 0 ALU IR   IR^10 -> R1
 389  6E E2 2C 60 06               1 B   OR  DA 0  1  1  -  - - CNT - 0 ALU IR*  IR OR R1 -> R1
 38A  2E 62 0C 60 20               1 NN  OR  ZA 0  1  -  -  - - CNT - 0 PC  ALU  R1 -> PC
 38B  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- ee ee 38c
    .MAP 356
 38C  4F FF EC 40 10     CI        1 B*  OR  DZ 0  T  T  -  - - CNT S 0 MD  ALU  T -> MD, STK -> T
 38D  6F E0 4C 60 06               1 B   OR  DZ 0  -  2  -  - - CNT - 0 ALU IR*  IR -> R2
 38E  39 98 07 20 0F               0 #MARK      T             - JMP              MARK(IR)
 -map- ef ef 38f
    .MAP 357
 38F  26 78 0C 60 30     CF        1 NN  MP  ZA 0  S  -  -  - - CNT - 0 MAR ALU  S - 1 -> MAR
 390  6F E0 6C 70 FF               1 B   OR  DZ 0  -  3  -  - - CNT - 1 377      377 -> R3
 391  72 E6 4C 60 01               1 B   AN  DA 0  3  2  -  - - CNT - 0 ALU MD   MD & R3 -> R2 
 392  72 E6 64 68 01               1 B   AN  DA 0  3  3  RC 10 - CNT - 0 ALU MD   ROT(MD,10) & R3 -> R3
 393  37 78 07 20 0F               0 #MARKG     T             - JMP
     $
 -map- f0 f0 394
    .MAP 360
 394  2E 7C 0C 60 10     CL        1 NN  OR  ZA 0  L  -  -  - - CNT - 0 MD  ALU  L -> MD
 395  6F E0 4C 60 06               1 B   OR  DZ 0  -  2  -  - - CNT - 0 ALU IR*  IR -> R2
 396  39 98 07 20 0F               0 #MARK      T             - JMP              MARK(IR)
 -map- f1 ff 397
    .MAP 361  377
 397  2E 7C 0C 60 10     CL1       1 NN  OR  ZA 0  L  -  -  - - CNT - 0 MD  ALU  L -> MD
 398  6D 60 4C 60 FF               1 B   OR  ZQ 0  -  2  -  - - CNT - 0 NBD NBS  Q -> R2
     *                                                       MARK(Q)
 399  6E 78 2C 60 30     #MARK     1 B   OR  ZA 0  S  1  -  - - CNT - 0 MAR ALU  S -> R1 -> MAR
 39A  41 DD 8C 60 10               1 B*  PL  ZB 1  L  S  -  - - CNT - 0 MD  ALU  L -> MD, S+1 -> S
 39B  42 59 8C 60 30               1 B*  PL  ZA 1  S  S  -  - - CNT - 0 MAR ALU  S -> MAR, S+1 -> S
 39C  2D 60 0C 60 12               1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 MD  PC   PC -> MD
 39D  2E 78 0C 60 30               1 NN  OR  ZA 0  S  -  -  - - CNT - 0 MAR ALU  S -> MAR
 39E  62 F9 8C 70 02               1 B   PL  DA 0  S  S  -  - - CNT - 1 2        S + 2 -> S
 39F  6E 63 CC 60 FF               1 B   OR  ZA 0  1  L  -  - - CNT - 0 NBD NBS  R1 -> L
 3A0  20 E4 4C 60 20               1 NN  PL  AB 0  2  2  -  - - CNT - 0 PC  ALU  R2 + R2 -> PC 
 3A1  6F E0 24 68 04               1 B   OR  DZ 0  -  1  RC 10 - CNT - 0 ALU IR   IR^10 -> R1
 3A2  6E E2 2C 60 06               1 B   OR  DA 0  1  1  -  - - CNT - 0 ALU IR*  IR OR R1 -> R1
 3A3  2E 62 0C 60 20               1 NN  OR  ZA 0  1  -  -  - - CNT - 0 PC  ALU  R1 -> PC
 3A4  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
     *         Q DIV T -> Q, Q MOD T -> R2
 3A5  D1 E0 4C 60 FF     #DIVIDE   1 BQL AN  ZB 0  -  2  -  - - CNT - 0 NBD NBS  [0,Q]*2 -> [R2,Q]
 3A6  64 DE 4C 60 FF     #DIVIDE+1 1 B   MP  AB 1  T  2  -  - - CNT - 0 NBD NBS  R2-T -> R2
 3A7  C0 FE 4C 60 5F               1 BQL PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  DIV STEP
 3A8  64 DE 4C 60 FF               1 B   MP  AB 1  T  2  -  - - CNT - 0 NBD NBS  R2-T -> R2
 3A9  C0 FE 4C 60 5F               1 BQL PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  DIV STEP
 3AA  64 DE 4C 60 FF               1 B   MP  AB 1  T  2  -  - - CNT - 0 NBD NBS  R2-T -> R2
 3AB  C0 FE 4C 60 5F               1 BQL PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  DIV STEP
 3AC  64 DE 4C 60 FF               1 B   MP  AB 1  T  2  -  - - CNT - 0 NBD NBS  R2-T -> R2
 3AD  C0 FE 4C 60 5F               1 BQL PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  DIV STEP
 3AE  64 DE 4C 60 FF               1 B   MP  AB 1  T  2  -  - - CNT - 0 NBD NBS  R2-T -> R2
 3AF  C0 FE 4C 60 5F               1 BQL PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  DIV STEP
 3B0  64 DE 4C 60 FF               1 B   MP  AB 1  T  2  -  - - CNT - 0 NBD NBS  R2-T -> R2
 3B1  C0 FE 4C 60 5F               1 BQL PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  DIV STEP
 3B2  64 DE 4C 60 FF               1 B   MP  AB 1  T  2  -  - - CNT - 0 NBD NBS  R2-T -> R2
 3B3  C0 FE 4C 60 5F               1 BQL PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  DIV STEP
 3B4  64 DE 4C 60 FF               1 B   MP  AB 1  T  2  -  - - CNT - 0 NBD NBS  R2-T -> R2
 3B5  C0 FE 4C 60 5F               1 BQL PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  DIV STEP
 3B6  64 DE 4C 60 FF               1 B   MP  AB 1  T  2  -  - - CNT - 0 NBD NBS  R2-T -> R2
 3B7  C0 FE 4C 60 5F               1 BQL PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  DIV STEP
 3B8  64 DE 4C 60 FF               1 B   MP  AB 1  T  2  -  - - CNT - 0 NBD NBS  R2-T -> R2
 3B9  C0 FE 4C 60 5F               1 BQL PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  DIV STEP
 3BA  64 DE 4C 60 FF               1 B   MP  AB 1  T  2  -  - - CNT - 0 NBD NBS  R2-T -> R2
 3BB  C0 FE 4C 60 5F               1 BQL PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  DIV STEP
 3BC  64 DE 4C 60 FF               1 B   MP  AB 1  T  2  -  - - CNT - 0 NBD NBS  R2-T -> R2
 3BD  C0 FE 4C 60 5F               1 BQL PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  DIV STEP
 3BE  64 DE 4C 60 FF               1 B   MP  AB 1  T  2  -  - - CNT - 0 NBD NBS  R2-T -> R2
 3BF  C0 FE 4C 60 5F               1 BQL PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  DIV STEP
 3C0  64 DE 4C 60 FF               1 B   MP  AB 1  T  2  -  - - CNT - 0 NBD NBS  R2-T -> R2
 3C1  C0 FE 4C 60 5F               1 BQL PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  DIV STEP
 3C2  64 DE 4C 60 FF               1 B   MP  AB 1  T  2  -  - - CNT - 0 NBD NBS  R2-T -> R2
 3C3  C0 FE 4C 60 5F               1 BQL PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  DIV STEP
 3C4  64 DE 4C 60 FF               1 B   MP  AB 1  T  2  -  - - CNT - 0 NBD NBS  R2-T -> R2
 3C5  3C 82 07 20 0F               0 #DIV1      C             - JMP              GOTO DIV1 IF C
 3C6  C0 FE 8C 60 5F               1 BQL PL  AB 0  T  4  -  - - CNT - 0 MDS NBS  DIV STEP !WITHOUT
     *                                                       CHANGING R2"
 3C7  60 FE 49 60 FF               1 B   PL  AB 0  T  2  -  - - RTN - 0 NBD NBS  T + R2 -> R2, RTN
 3C8  C0 FE 89 60 5F     #DIV1     1 BQL PL  AB 0  T  4  -  - - RTN - 0 MDS NBS  DIV STEP !R2 UNCHANGED" 
     *         Q * T -> [R2,Q]     (N STEPS) 
 3C9  71 E0 4C 60 FF     #MUL16    1 B   AN  ZB 0  -  2  -  - - CNT - 0 NBD NBS   0 -> R2
 3CA  80 FE 4C 60 5F               1 BQR PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  MUL STEP
 3CB  80 FE 4C 60 5F               1 BQR PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  MUL STEP
 3CC  80 FE 4C 60 5F               1 BQR PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  MUL STEP
 3CD  80 FE 4C 60 5F               1 BQR PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  MUL STEP
 3CE  80 FE 4C 60 5F               1 BQR PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  MUL STEP
 3CF  80 FE 4C 60 5F               1 BQR PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  MUL STEP
 3D0  80 FE 4C 60 5F               1 BQR PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  MUL STEP
 3D1  80 FE 4C 60 5F               1 BQR PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  MUL STEP
 3D2  80 FE 4C 60 5F               1 BQR PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  MUL STEP
 3D3  80 FE 4C 60 5F               1 BQR PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  MUL STEP
 3D4  80 FE 4C 60 5F               1 BQR PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  MUL STEP
 3D5  80 FE 4C 60 5F               1 BQR PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  MUL STEP
 3D6  80 FE 4C 60 5F               1 BQR PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  MUL STEP
 3D7  80 FE 4C 60 5F               1 BQR PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  MUL STEP
 3D8  80 FE 4C 60 5F               1 BQR PL  AB 0  T  2  -  - - CNT - 0 MDS NBS  MUL STEP
 3D9  80 FE 49 60 5F               1 BQR PL  AB 0  T  2  -  - - RTN - 0 MDS NBS  MUL STEP
     $
 3DA  6F E0 0C 70 01     TRAP(1)   1 B   OR  DZ 0  -  0  -  - - CNT - 1 1        1 -> R0
 3DB  3E F8 07 20 0F               0 TRAP(R0)   T             - JMP              TRAP(R0)
 3DC  6F E0 0C 70 02     TRAP(2)   1 B   OR  DZ 0  -  0  -  - - CNT - 1 2        2 -> R0
 3DD  3E F8 07 20 0F               0 TRAP(R0)   T             - JMP              TRAP(R0)
 3DE  6F E0 0C 70 03     TRAP(3)   1 B   OR  DZ 0  -  0  -  - - CNT - 1 3        3 -> R0
 3DF  3E F8 07 20 0F               0 TRAP(R0)   T             - JMP              TRAP(R0)
 3E0  6F E0 0C 70 04     TRAP(4)   1 B   OR  DZ 0  -  0  -  - - CNT - 1 4        4 -> R0
 3E1  3E F8 07 20 0F               0 TRAP(R0)   T             - JMP              TRAP(R0)
 3E2  6F E0 0C 70 05     TRAP(5)   1 B   OR  DZ 0  -  0  -  - - CNT - 1 5        5 -> R0
 3E3  3E F8 07 20 0F               0 TRAP(R0)   T             - JMP              TRAP(R0)
 3E4  6F E0 0C 70 06     TRAP(6)   1 B   OR  DZ 0  -  0  -  - - CNT - 1 6        6 -> R0
 3E5  3E F8 07 20 0F               0 TRAP(R0)   T             - JMP              TRAP(R0)
 3E6  6F E0 0C 70 07     TRAP(7)   1 B   OR  DZ 0  -  0  -  - - CNT - 1 7        7 -> R0
 3E7  3E 98 07 20 0F               0 TRAP(N)    T             - JMP              TRAP(N)
 3E8  6F E0 0C 70 08     TRAP(10)  1 B   OR  DZ 0  -  0  -  - - CNT - 1 10       10 -> R0
     *         0 TRAP(N)    T             - JMP              TRAP(N)
     *         MASKABLE TRAPS:
 3E9  6F E0 AC 70 07     TRAP(N)   1 B   OR  DZ 0  -  5  -  - - CNT - 1 7        7 -> R5 !TRAP MSK"
 3EA  20 EB 4C 60 30               1 NN  PL  AB 0  5  P  -  - - CNT - 0 MAR ALU  R5 + P -> MAR 
 3EB  2A 40 0C 60 40               1 NN  MI  ZA 1  0  -  -  - - CNT - 0 SR  ALU  -R0 -> SR
 3EC  6F E0 B4 60 01               1 B   OR  DZ 0  -  5  RR - - CNT - 0 ALU MD   (MD^SR) -> R5 
 3ED  00 00 41 20 0F               0 0          F             - RTN              RTN IF N IN R5
 3EE  00 08 00 20 0F               0 0          T             - PST              ADJUST 2911-STACK
     *         NOT MASKABLE TRAPS: 
 3EF  2E 60 0C 60 10     TRAP(R0)  1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MD  ALU  R0 -> MD !TRAP NR"
 3F0  6F E0 2C 70 06               1 B   OR  DZ 0  -  1  -  - - CNT - 1 6        6 -> R1
 3F1  20 E3 4C 60 30               1 NN  PL  AB 0  1  P  -  - - CNT - 0 MAR ALU  R1 + P -> MAR 
 3F2  6F E0 4C 70 03               1 B   OR  DZ 0  -  2  -  - - CNT - 1 3        3 -> R2
 3F3  2E 64 0C 60 30               1 NN  OR  ZA 0  2  -  -  - - CNT - 0 MAR ALU  R2 -> MAR
 3F4  6F E0 2C 70 07               1 B   OR  DZ 0  -  1  -  - - CNT - 1 7        7 -> R1
 3F5  6F E0 64 78 01               1 B   OR  DZ 0  -  3  RC 10 - CNT - 1 1        (1^10) -> R3
 3F6  32 E6 0C 60 01               1 NN  AN  DA 0  3  -  -  - - CNT - 0 ALU MD   MD & R3
 3F7  42 41 07 20 0F               0 INTERRUPT  Z             - JMP              IF NOT 7 IN M[3]
 3F8  3F 88 07 20 0F     #LOOP     0 #LOOP      T             - JMP              LOOP END
     *         EXTENSION TO THE SYS INSTRUCTION:
 3F9  66 60 0C 60 FF     >4        1 B   MP  ZA 0  0  0  -  - - CNT - 0 NBD NBS  R0 - 1 -> R0
 3FA  40 09 07 20 0F               0 ILL_INSTR  -Z            - JMP              IF IR<>5
 3FB  4F FF E4 78 00               1 B*  OR  DZ 0  T  T  RC 10 - CNT - 1 0        T -> STK, (0^10) -> T
     *         VERSION CODE OF 13.2: 1
 3FC  6E FF EC 70 01               1 B   OR  DA 0  T  T  -  - - CNT - 1 1        1 OR T -> T
 3FD  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 3FE  -0000 -0000 -0000 -0000 -0000     .NOP 000
 3FF  -0000 -0000 -0000 -0000 -0000     .NOP 000
 -org- 2000 2000
    .ORG 2000 
     *    ILLEGAL INSTRUCTIONS:
 -org- 2000 2000
    .ORG 2000 
 -map- 8c 8d 400
    .MAP 214  215
 -map- 11 11 400
    .MAP 21
 -map- dc dc 400
    .MAP 334
 400  3D A8 07 20 0F     ILL_INSTR 0 TRAP(1)    T             - JMP              TRAP(1)
     *
     *
     *  Mathematical routines
     *
     *
 -map- 8a 8a 401
    .MAP 212
 401  0F E0 0C 40 FF     DMUL      1 Q   OR  DZ 0  -  -  -  - - CNT S 0 POP NBS  STK -> Q
 402  3C 98 03 20 0F               0 #MUL16     T             - JSR              T * Q -> [R2,Q]
 403  4D 65 EC 40 0F               1 B*  OR  ZQ 0  2  T  -  - - CNT S 0 PSH NBS  Q -> T, R2 -> STK
 404  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 8b 8b 405
    .MAP 213
 405  2E 7E 0C 60 FF     DDIV      1 NN  OR  ZA 0  T  -  -  - - CNT - 0 NBD NBS  T
 406  3E 61 03 20 0F               0 TRAP(7)    Z             - JSR              IF ZERODIVIDE 
 407  0F E0 0C 40 FF               1 Q   OR  DZ 0  -  -  -  - - CNT S 0 POP NBS  STK -> Q
 408  CF E0 4C 40 FF               1 BQL OR  DZ 0  -  2  -  - - CNT S 0 POP NBS  [STK,Q]*2 -> [R2,Q]
 409  3A 68 03 20 0F               0 #DIVIDE+1     T          - JSR              [STK,Q] DIV T -> [R2,T] 
 40A  4D 65 EC 40 0F               1 B*  OR  ZQ 0  2  T  -  - - CNT S 0 PSH NBS  Q -> T, R2 -> STK
 40B  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 8e 8e 40c
    .MAP 216
 40C  6F E0 4C 40 FF     DSHL      1 B   OR  DZ 0  -  2  -  - - CNT S 0 POP NBS  STK -> R2
 40D  60 FF EC 60 FF               1 B   PL  AB 0  T  T  -  - - CNT - 0 NBD NBS  T + T -> T
 40E  20 84 4C 40 0F               1 NN  PL  AB C  2  2  -  - - CNT S 0 PSH NBS  R2 + R2 + C -> STK
 40F  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 -map- 8f 8f 410
    .MAP 217
 410  6F E0 4C 40 FF     DSHR      1 B   OR  DZ 0  -  2  -  - - CNT S 0 POP NBS  STK -> R2
 411  0E 7E 0C 60 FF               1 Q   OR  ZA 0  T  -  -  - - CNT - 0 NBD NBS  T -> Q
 412  82 64 4C 60 FF               1 BQR PL  ZA 0  2  2  -  - - CNT - 0 NBD NBS  [R2,Q] DIV 2 -> [R2,Q]
 413  4D 65 EC 40 0F               1 B*  OR  ZQ 0  2  T  -  - - CNT S 0 PSH NBS  Q -> T, R2 -> STK
 414  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 415  6F E0 2C 70 0F     #LINE15   1 B   OR  DZ 0  -  1  -  - - CNT - 1 17       17 -> R1
 416  42 48 07 20 0F               0 INTERRUPT  T             - JMP              GOTO INTERRUPT
 417  6F E0 2C 70 0E     #LINE14   1 B   OR  DZ 0  -  1  -  - - CNT - 1 16       16 -> R1
 418  42 48 07 20 0F               0 INTERRUPT  T             - JMP              GOTO INTERRUPT
 419  6F E0 2C 70 0D     #DISK     1 B   OR  DZ 0  -  1  -  - - CNT - 1 15       15 -> R1
 41A  42 48 07 20 0F               0 INTERRUPT  T             - JMP              GOTO INTERRUPT
 41B  6F E0 2C 70 0C     #CLOCK    1 B   OR  DZ 0  -  1  -  - - CNT - 1 14       14 -> R1
 41C  42 48 07 20 0F               0 INTERRUPT  T             - JMP              GOTO INTERRUPT
 41D  6F E0 2C 70 0B     #LINE11   1 B   OR  DZ 0  -  1  -  - - CNT - 1 13       13 -> R1
 41E  42 48 07 20 0F               0 INTERRUPT  T             - JMP              GOTO INTERRUPT
 41F  6F E0 2C 70 0A     #LINE10   1 B   OR  DZ 0  -  1  -  - - CNT - 1 12       12 -> R1
 420  42 48 07 20 0F               0 INTERRUPT  T             - JMP              GOTO INTERRUPT
 421  6F E0 2C 70 09     #LINE9    1 B   OR  DZ 0  -  1  -  - - CNT - 1 11       11 -> R1
 422  42 48 07 20 0F               0 INTERRUPT  T             - JMP              GOTO INTERRUPT
 423  6F E0 2C 70 08     #LINE8    1 B   OR  DZ 0  -  1  -  - - CNT - 1 10       10 -> R1
     *         0 INTERRUPT  T             - JMP              GOTO INTERRUPT
     $
 424  60 E2 2C 60 FF     INTERRUPT 1 B   PL  AB 0  1  1  -  - - CNT - 0 NBD NBS  R1 + R1 -> R1 
 425  62 42 4C 60 FF               1 B   PL  ZA 1  1  2  -  - - CNT - 0 NBD NBS  R1 + 1 -> R2
 426  6F E0 6C 70 01               1 B   OR  DZ 0  -  3  -  - - CNT - 1 1        1 -> R3
     *         0 TRANSFER   T             - JMP              TRANSFER(TRUE,R1,R2)
 427  2E 62 0C 60 30     TRANSFER  1 NN  OR  ZA 0  1  -  -  - - CNT - 0 MAR ALU  R1 -> MAR
 428  6F E0 2C 60 01               1 B   OR  DZ 0  -  1  -  - - CNT - 0 ALU MD   MD -> R1
 429  42 F8 03 20 0F               0 #SAVEREGS     T          - JSR              SAVE
 42A  2E 74 0C 60 10               1 NN  OR  ZA 0  P  -  -  - - CNT - 0 MD  ALU  P -> MD
 42B  2E 64 0C 60 30               1 NN  OR  ZA 0  2  -  -  - - CNT - 0 MAR ALU  R2 -> MAR
 42C  6E 63 4C 60 FF               1 B   OR  ZA 0  1  P  -  - - CNT - 0 NBD NBS  R1 -> P
 42D  43 E8 03 20 0F               0 #RESTREGS     T          - JSR              RESTORE
 42E  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 42F  45 C8 03 20 0F     #SAVEREGS 0 #SAVESTK   T             - JSR              SAVE EXPR STACK
 430  2E 7A 0C 60 10               1 NN  OR  ZA 0  G  -  -  - - CNT - 0 MD  ALU  G -> MD
 431  42 55 4C 60 30               1 B*  PL  ZA 1  P  P  -  - - CNT - 0 MAR ALU  P -> MAR, P+1 -> P
 432  2E 7C 0C 60 10               1 NN  OR  ZA 0  L  -  -  - - CNT - 0 MD  ALU  L -> MD
 433  42 55 4C 60 30               1 B*  PL  ZA 1  P  P  -  - - CNT - 0 MAR ALU  P -> MAR, P+1 -> P
 434  2D 60 0C 60 12               1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 MD  PC   PC -> MD
 435  42 55 4C 60 30               1 B*  PL  ZA 1  P  P  -  - - CNT - 0 MAR ALU  P -> MAR, P+1 -> P
 436  2E 72 0C 60 10               1 NN  OR  ZA 0  M  -  -  - - CNT - 0 MD  ALU  M -> MD
 437  42 55 4C 60 30               1 B*  PL  ZA 1  P  P  -  - - CNT - 0 MAR ALU  P -> MAR, P+1 -> P
 438  2E 78 0C 60 10               1 NN  OR  ZA 0  S  -  -  - - CNT - 0 MD  ALU  S -> MD
 439  42 55 4C 60 30               1 B*  PL  ZA 1  P  P  -  - - CNT - 0 MAR ALU  P -> MAR, P+1 -> P
 43A  62 F7 6C 70 18               1 B   PL  DA 0  H  H  -  - - CNT - 1 30       30 + H -> H
 43B  2E 76 0C 60 10               1 NN  OR  ZA 0  H  -  -  - - CNT - 0 MD  ALU  H -> MD
 43C  2E 74 0C 60 30               1 NN  OR  ZA 0  P  -  -  - - CNT - 0 MAR ALU  P -> MAR
 43D  66 D5 49 70 05               1 B   MP  DA 1  P  P  -  - - RTN - 1 5        P - 5 -> P, RTN
     $
 43E  42 55 4C 60 30     #RESTREGS 1 B*  PL  ZA 1  P  P  -  - - CNT - 0 MAR ALU  P -> MAR, P + 1 -> P
 43F  6F E1 AC 60 01               1 B   OR  DZ 0  -  G  -  - - CNT - 0 ALU MD   MD -> G
 440  2E 7A 0C 60 30               1 NN  OR  ZA 0  G  -  -  - - CNT - 0 MAR ALU  G -> MAR
 441  2D 60 0C 60 E1               1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 F   MD   MD -> F
 442  42 55 4C 60 30               1 B*  PL  ZA 1  P  P  -  - - CNT - 0 MAR ALU  P -> MAR, P + 1 -> P
 443  6F E1 CC 60 01               1 B   OR  DZ 0  -  L  -  - - CNT - 0 ALU MD   MD -> L
 444  42 55 4C 60 30               1 B*  PL  ZA 1  P  P  -  - - CNT - 0 MAR ALU  P -> MAR, P + 1 -> P
 445  2D 60 0C 60 21               1 NN  OR  ZQ 0  -  -  -  - - CNT - 0 PC  MD   MD -> PC
 446  2E 66 0C 60 FF               1 NN  OR  ZA 0  3  -  -  - - CNT - 0 NBD NBS  R3
 447  44 E1 07 20 0F               0 #REST      Z             - JMP              GOTO REST IF R3=0
 448  2E 74 0C 60 30               1 NN  OR  ZA 0  P  -  -  - - CNT - 0 MAR ALU  P -> MAR
 449  6F E0 2C 70 03               1 B   OR  DZ 0  -  1  -  - - CNT - 1 3        3 -> R1
 44A  6F E1 2C 60 01               1 B   OR  DZ 0  -  M  -  - - CNT - 0 ALU MD   MD -> M
 44B  2E 62 0C 60 30               1 NN  OR  ZA 0  1  -  -  - - CNT - 0 MAR ALU  R1 -> MAR
 44C  6F E0 2C 60 01               1 B   OR  DZ 0  -  1  -  - - CNT - 0 ALU MD   MD -> R1
 44D  2C E3 2C 60 80               1 NN  OR  AB 0  1  M  -  - - CNT - 0 INM ALU  R1 OR M -> INM
 44E  62 55 4C 60 30     #REST     1 B   PL  ZA 1  P  P  -  - - CNT - 0 MAR ALU  P + 1 -> P -> MAR
 44F  6F E1 8C 60 01               1 B   OR  DZ 0  -  S  -  - - CNT - 0 ALU MD   MD -> S
 450  22 54 0C 60 30               1 NN  PL  ZA 1  P  -  -  - - CNT - 0 MAR ALU  P + 1 -> MAR
 451  66 D5 4C 70 04               1 B   MP  DA 1  P  P  -  - - CNT - 1 4        P - 4 -> P
 452  6F E1 6C 60 01               1 B   OR  DZ 0  -  H  -  - - CNT - 0 ALU MD   MD -> H
 453  66 D7 6C 70 18               1 B   MP  DA 1  H  H  -  - - CNT - 1 30       H - 30 -> H
     *         0 #RESTRSTK  T             - JMP              RESTORE EXPR STACK
 454  66 79 8C 60 30     #RESTRSTK 1 B   MP  ZA 0  S  S  -  - - CNT - 0 MAR ALU  S-1 -> S -> MAR
 455  6F E0 0C 60 01               1 B   OR  DZ 0  -  0  -  - - CNT - 0 ALU MD   MD -> R0
 456  00 01 01 20 0F               0 0          Z             - RTN              IF =0
 457  66 79 8C 60 30     #RSTK     1 B   MP  ZA 0  S  S  -  - - CNT - 0 MAR ALU  S-1 -> S -> MAR
 458  4F FF EC 40 01               1 B*  OR  DZ 0  T  T  -  - - CNT S 0 ALU MD   T -> STK, MD -> T
 459  66 60 0C 60 FF               1 B   MP  ZA 0  0  0  -  - - CNT - 0 NBD NBS  R0-1 -> R0
 45A  45 79 07 20 0F               0 #RSTK     -Z             - JMP              IF R0 > 0
 45B  00 08 01 20 0F               0 0          T             - RTN              RETURN
 45C  6F E0 0C 70 00     #SAVESTK  1 B   OR  DZ 0  -  0  -  - - CNT - 1 0        0 -> R0
 45D  46 20 0F 20 0F               0 #SAVED     E             - JMP              IF STK EMPTY  
 45E  4F FF EC 40 10     #SSTK     1 B*  OR  DZ 0  T  T  -  - - CNT S 0 MD  ALU  T -> MD, STK -> T
 45F  42 59 8C 60 30               1 B*  PL  ZA 1  S  S  -  - - CNT - 0 MAR ALU  S -> MAR, S+1 -> S
 460  62 40 0C 60 FF               1 B   PL  ZA 1  0  0  -  - - CNT - 0 NBD NBS  R0 + 1 -> R0
 461  45 E8 0F 20 0F               0 #SSTK     -E             - JMP              IF NOT STK EMPTY
 462  2E 60 0C 60 10     #SAVED    1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MD  ALU  R0 -> MD
 463  42 59 89 60 30               1 B*  PL  ZA 1  S  S  -  - - RTN - 0 MAR ALU  S -> MAR, S+1 -> S
     $
     * ---------------------------------------------------------------------------
     * -------------------- DISK INPUT/OUTPUT ------------------------------------ 
     * ---------------------------------------------------------------------------
 464  2E 6A 0C 60 60     #GET      1 NN  OR  ZA 0  5  -  -  - - CNT - 0 IOA ALU  R5 -> IO-ADDRESS
 465  2D 60 0C E0 F7               1 NN  OR  ZQ 0  -  -  -  - S CNT - 0 NBD IOD  IO-DATA -> DUMMY
 466  2D 60 0C E0 F7               1 NN  OR  ZQ 0  -  -  -  - S CNT - 0 NBD IOD  IO-DATA -> DUMMY
 467  6F E0 CC E0 07               1 B   OR  DZ 0  -  6  -  - S CNT - 0 ALU IOD  IO-DATA -> R6 
 468  2D 60 0C E0 F7               1 NN  OR  ZQ 0  -  -  -  - S CNT - 0 NBD IOD  IO-DATA -> DUMMY
 469  2D 60 09 E0 F7               1 NN  OR  ZQ 0  -  -  -  - S RTN - 0 NBD IOD  IO-DATA -> DUMMY, RTN
 46A  2E 6A 0C 60 60     #PUT      1 NN  OR  ZA 0  5  -  -  - - CNT - 0 IOA ALU  R5 -> IO-ADDRESS
 46B  2E 6C 0C E0 70               1 NN  OR  ZA 0  6  -  -  - S CNT - 0 IOD ALU  R6 -> IO-DATA 
 46C  2E 6C 0C E0 70               1 NN  OR  ZA 0  6  -  -  - S CNT - 0 IOD ALU  R6 -> IO-DATA 
 46D  2E 6C 0C E0 70               1 NN  OR  ZA 0  6  -  -  - S CNT - 0 IOD ALU  R6 -> IO-DATA 
 46E  2E 6C 0C E0 70               1 NN  OR  ZA 0  6  -  -  - S CNT - 0 IOD ALU  R6 -> IO-DATA 
 46F  2E 6C 09 E0 70               1 NN  OR  ZA 0  6  -  -  - S RTN - 0 IOD ALU  R6 -> IO-DATA, RTN
 470  6F E0 AC 70 09     #WAIT     1 B   OR  DZ 0  -  5  -  - - CNT - 1 11       11 -> R5      <Wait for disk OK>
 471  2E 6A 0C 60 60               1 NN  OR  ZA 0  5  -  -  - - CNT - 0 IOA ALU  R5 -> IO-ADDRESS
 472  72 E6 CC 60 07     #W        1 B   AN  DA 0  3  6  -  - - CNT - 0 ALU IOD  IO-DATA & R3 -> R6
 473  00 09 01 20 0F               0 0          -Z            - RTN              RTN IF R3 IN IO-DATA
 474  47 28 07 20 0F               0 #W         T             - JMP              GOTO W
 475  6F E0 AC 70 09     #RESETDSK 1 B   OR  DZ 0  -  5  -  - - CNT - 1 11       11 -> R5       <Disk cmd register>
 476  6F E0 CC 70 06               1 B   OR  DZ 0  -  6  -  - - CNT - 1 6        6 -> R6
 477  46 A8 03 20 0F               0 #PUT       T             - JSR              PUT(DISK,FAULTRESET)
 478  6F E0 CC 70 07               1 B   OR  DZ 0  -  6  -  - - CNT - 1 7        7 -> R6
 479  46 A8 03 20 0F     ERRESET   0 #PUT       T             - JSR              PUT(DISK,INIT)
 47A  6F E0 6C 70 80               1 B   OR  DZ 0  -  3  -  - - CNT - 1 200      200 -> R3
 47B  47 08 07 20 0F               0 #WAIT      T             - JMP              WAIT(RDYSRW)
 47C  6F E0 AC 70 09     #CLRADDR  1 B   OR  DZ 0  -  5  -  - - CNT - 1 11       11 -> R5       <Reset buffer pointer>
 47D  6F E0 CC 70 05               1 B   OR  DZ 0  -  6  -  - - CNT - 1 5        5 -> R6
 47E  46 A8 07 20 0F               0 #PUT       T             - JMP              PUT(STATUS,CLR)
     $
 47F  47 C8 03 20 0F     #INITWRIT 0 #CLRADDR   T             - JSR              CLRADDR        <Reset buffer pointer>
 480  6F E0 2C 70 03               1 B   OR  DZ 0  -  1  -  - - CNT - 1 3        3 -> R1        <Write preamble 4 x 0>
 481  6F E0 AC 70 08               1 B   OR  DZ 0  -  5  -  - - CNT - 1 10       10 -> R5
 482  72 6C CC 60 FF               1 B   AN  ZA 0  6  6  -  - - CNT - 0 NBD NBS  0 -> R6
 483  46 A8 03 20 0F     #IW       0 #PUT       T             - JSR              PUT(DISK,0)
 484  66 62 2C 60 FF               1 B   MP  ZA 0  1  1  -  - - CNT - 0 NBD NBS  R1 - 1 -> R1
 485  48 39 07 20 0F               0 #IW        -Z            - JMP              IF > 0
 486  6F E0 CC 70 A6               1 B   OR  DZ 0  -  6  -  - - CNT - 1 246      A6H -> R6      <Write preamble A6A6>
 487  4E EC C4 68 00               1 B*  OR  DA 0  6  6  RC 10 - CNT - 0 ALU ALU  R6^10 OR R6 -> R6
 488  46 A8 07 20 0F               0 #PUT       T             - JMP              PUT(DISK,SYNC)
 489  6F E0 AC 70 01     #READCH   1 B   OR  DZ 0  -  5  -  - - CNT - 1 1        1 -> R5
 48A  46 48 03 20 0F     #RCH      0 #GET       T             - JSR              GET(KBSTATUS,R6)
 48B  32 EC 0C 70 01               1 NN  AN  DA 0  6  -  -  - - CNT - 1 1        R6 & 1         <Wait for keyboard>
 48C  48 A1 07 20 0F               0 #RCH       Z             - JMP              IF NOT 1 IN R6
 48D  6F E0 AC 70 02               1 B   OR  DZ 0  -  5  -  - - CNT - 1 2        2 -> R5
 48E  46 48 03 20 0F               0 #GET       T             - JSR              GET(KBDATA,R6)
 48F  72 EC C9 70 FF               1 B   AN  DA 0  6  6  -  - - RTN - 1 377      R6 & 377 -> R6, RTN
     * MCODE settrack points to here
 490  72 F4 6C 76 00     #SETTRACK 1 B   AN  DA 0  12 3  MC 6 - CNT - 1 0        MSK(0,6) & R12 -> R3
 491  76 F4 8C 76 00               1 B   NA  DA 0  12 4  MC 6 - CNT - 1 0        _MSK(0,6) & R12 -> R4
 492  4F E8 84 61 00               1 B*  OR  DZ 0  4  4  RC  1 - CNT - 0 ALU ALU  (R4^1) -> R4  
 493  49 58 47 20 0F               0 #SETRK     -F            - JMP              IF >= 0
 494  7A E8 84 77 41               1 B   XR  DA 0  4  4  RC  7 - CNT - 1 101      (101^7) XOR R4 -> R4
 495  6C E6 8C 60 FF     #SETRK    1 B   OR  AB 0  3  4  -  - - CNT - 0 NBD NBS  R3 OR R4 -> R4
 496  6F E0 6C 70 04               1 B   OR  DZ 0  -  3  -  - - CNT - 1 4        4 -> R3
 497  47 08 03 20 0F               0 #WAIT      T             - JSR              WAIT(RDYSEEK) 
 498  6F E0 AC 70 0A               1 B   OR  DZ 0  -  5  -  - - CNT - 1 12       12 -> R5      <Disk Track-H / head sel register>
 499  4F E8 C4 68 00               1 B*  OR  DZ 0  4  6  RC 10 - CNT - 0 ALU ALU  (R4^10) -> R6 
 49A  46 A8 03 20 0F               0 #PUT       T             - JSR              PUT(TRACKH,R4 DIV 100H) 
 49B  62 4A AC 60 FF               1 B   PL  ZA 1  5  5  -  - - CNT - 0 NBD NBS  R5 + 1 -> R5  <Disk Track-L  register>
 49C  6E 68 CC 60 FF               1 B   OR  ZA 0  4  6  -  - - CNT - 0 NBD NBS  R4 -> R6
 49D  46 A8 07 20 0F               0 #PUT       T             - JMP              PUT(TRACKL,R4 MOD 100H) 
     $
     * SECTOR(Q):   Q=100 <=> PUT;   Q=200 <=> GET
 49E  66 D3 2C 70 2C     #SECTOR   1 B   MP  DA 1  11 11 -  - - CNT - 1 54       R11 - 54 -> R11
 49F  4A 71 47 20 0F               0 #SECT1     FZ            - JMP              GOTO SECT1 IF <= 0
 4A0  26 D2 0C 70 03               1 NN  MP  DA 1  11 -  -  - - CNT - 1 3        R11 - 3
 4A1  4A 89 07 20 0F               0 #SECT2     -Z            - JMP              GOTO #SECT2 IF #0
 4A2  67 C1 2C 70 2F               1 B   MP  DZ 1  -  11 -  - - CNT - 1 57       -47Z -> R11
 4A3  62 55 4C 60 FF               1 B   PL  ZA 1  12 12 -  - - CNT - 0 NBD NBS  R12 + 1 -> R12
 4A4  49 08 03 20 0F               0 #SETTRACK  T             - JSR              SETTRACK(R12) 
 4A5  6F E0 6C 70 80               1 B   OR  DZ 0  -  3  -  - - CNT - 1 200      200 -> R3
 4A6  47 08 03 20 0F               0 #WAIT      T             - JSR              WAIT(RDYSRW)
 4A7  62 F3 2C 70 2F     #SECT1    1 B   PL  DA 0  11 11 -  - - CNT - 1 57       R11 + 47 -> R11
 4A8  60 72 CC 60 FF     #SECT2    1 B   PL  AQ 0  11 6  -  - - CNT - 0 NBD NBS  R11 + Q -> R6 
 4A9  6F E0 AC 70 0C     #SECT48   1 B   OR  DZ 0  -  5  -  - - CNT - 1 14       14 -> R5
 4AA  46 A8 03 20 0F               0 #PUT       T             - JSR              PUT(SECTOR,R6)
 4AB  6F E0 6C 70 41               1 B   OR  DZ 0  -  3  -  - - CNT - 1 101      101 -> R3
 4AC  47 08 03 20 0F               0 #WAIT      T             - JSR              WAIT(XFERCOMPL OR
     *                                                               BADSECTOR)
     *         BAD SECTOR HANDLING:
 4AD  32 EC 0C 70 01               1 NN  AN  DA 0  6  -  -  - - CNT - 1 1        R6 & 1
 4AE  47 C1 07 20 0F               0 #CLRADDR   Z             - JMP              GOTO CLRADDR IF Z
 4AF  6F E0 AC 70 09               1 B   OR  DZ 0  -  5  -  - - CNT - 1 11       11 -> R5
 4B0  6F E0 CC 70 04               1 B   OR  DZ 0  -  6  -  - - CNT - 1 4        4 -> R6
 4B1  47 98 03 20 0F               0 ERRESET    T             - JSR              ERRESET
 4B2  63 60 CC 70 30               1 B   PL  DQ 0  -  6  -  - - CNT - 1 60       48Z + Q -> R6 
 4B3  4A 98 07 20 0F               0 #SECT48    T             - JMP              GOTO SECT48
 4B4  62 51 0C 60 FF     #GETWORD  1 B   PL  ZA 1  10 10 -  - - CNT - 0 NBD NBS  R10 + 1 -> R10
 4B5  72 F1 0C 70 7F               1 B   AN  DA 0  10 10 -  - - CNT - 1 177      R10 & 177 -> R10
 4B6  49 E1 03 20 0F               0 #SECTOR    Z             - JSR              SECTOR(GET) IF =0
 4B7  6F E0 AC 70 08               1 B   OR  DZ 0  -  5  -  - - CNT - 1 10       10 -> R5
 4B8  46 48 03 20 0F               0 #GET       T             - JSR              GET(DISK,R6)
 4B9  6E 6C E9 60 FF               1 B   OR  ZA 0  6  7  -  - - RTN - 0 NBD NBS  R6 -> R7, RTN 
     *
     * procedure belows dumps memory into a file ( i.e. coredump )
     *
 4BA  72 71 0C 60 FF     DUMP      1 B   AN  ZA 0  10 10 -  - - CNT - 0 NBD NBS  0 -> R10
 4BB  6F E1 2C 70 2F               1 B   OR  DZ 0  -  11 -  - - CNT - 1 57       57 -> R11
 4BC  6F E1 4C 70 03               1 B   OR  DZ 0  -  12 -  - - CNT - 1 3        3 -> R12
 4BD  6F E0 4C 70 00               1 B   OR  DZ 0  -  2  -  - - CNT - 1 0        0 -> R2
 4BE  0F E0 0C 70 40               1 Q   OR  DZ 0  -  -  -  - - CNT - 1 100      100 -> Q
 4BF  6F E0 0C 70 00               1 B   OR  DZ 0  -  0  -  - - CNT - 1 0        0 -> R0
 4C0  2E 60 0C 60 D0     DUMPWORD  1 NN  OR  ZA 0  0  -  -  - - CNT - 0 BNK ALU  R0 -> BNK
 4C1  2E 64 0C 60 30               1 NN  OR  ZA 0  2  -  -  - - CNT - 0 MAR ALU  R2 -> MAR
 4C2  2E 70 0C 60 FF     #PUTWORD  1 NN  OR  ZA 0  10 -  -  - - CNT - 0 NBD NBS  R10 
 4C3  47 F1 03 20 0F               0 #INITWRIT  Z             - JSR              INITWRIT IF =0
 4C4  6F E0 AC 70 08               1 B   OR  DZ 0  -  5  -  - - CNT - 1 10       10 -> R5
 4C5  6F E0 CC 60 01               1 B   OR  DZ 0  -  6  -  - - CNT - 0 ALU MD   MD -> R6
 4C6  46 A8 03 20 0F               0 #PUT       T             - JSR              PUT(DISK,R6)
 4C7  62 51 0C 60 FF               1 B   PL  ZA 1  10 10 -  - - CNT - 0 NBD NBS  R10 + 1 -> R10
 4C8  72 F1 0C 70 7F               1 B   AN  DA 0  10 10 -  - - CNT - 1 177      R10 & 177 -> R10
 4C9  49 E1 03 20 0F               0 #SECTOR    Z             - JSR              SECTOR(PUT) IF =0
 4CA  62 44 4C 60 FF               1 B   PL  ZA 1  2  2  -  - - CNT - 0 NBD NBS  R2 + 1 -> R2
 4CB  4C 0A 07 20 0F               0 DUMPWORD   -C            - JMP              IF R2 <= FFFF 
 4CC  62 40 0C 60 FF               1 B   PL  ZA 1  0  0  -  - - CNT - 0 NBD NBS  R0 + 1 -> R0
 4CD  26 C0 0C 70 02               1 NN  MP  DA 1  0  -  -  - - CNT - 1 2        R0-2
 4CE  4C 09 07 20 0F               0 DUMPWORD   -Z            - JMP              IF R0 <> 2
 4CF  00 08 01 20 0F               0 0          T             - RTN              RETURN
     $
     * BOOTSTRAP SEQUENCE:
 4D0  42 F8 03 20 0F     START     0 #SAVEREGS  T             - JSR              SAVE REG'S IN CASE OF
 4D1  6F E0 0C 70 05               1 B   OR  DZ 0  -  0  -  - - CNT - 1 5        5 -> R0         RESET
 4D2  2E 74 0C 60 10               1 NN  OR  ZA 0  P  -  -  - - CNT - 0 MD  ALU  P -> MD
 4D3  2E 60 0C 60 30               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MAR ALU  R0 -> MAR
     *         CLEAR KEYBOARD DATA REGISTER: 
 4D4  6F E0 AC 70 02               1 B   OR  DZ 0  -  5  -  - - CNT - 1 2        KBDATA -> R5
 4D5  46 48 03 20 0F               0 #GET       T             - JSR              GET(KBDATA,DUMMY)
 4D6  47 58 03 20 0F               0 #RESETDSK  T             - JSR              RESETDSK
 4D7  48 98 03 20 0F               0 #READCH    T             - JSR              READCH(R6)
 4D8  2A CC 0C 70 04               1 NN  MI  DA 1  6  -  -  - - CNT - 1 4        R6 - 4  (CTRL D) <Dump ram to disk>
 4D9  4D D9 07 20 0F               0 NODUMP     -Z            - JMP              IF R0 <> CTRL D  
 4DA  4B A8 03 20 0F               0 DUMP       T             - JSR              DUMP
 4DB  47 58 03 20 0F               0 #RESETDSK  T             - JSR              RESETDSK
 4DC  48 98 03 20 0F               0 #READCH    T             - JSR              READCH(R6)
 4DD  52 7F EC 40 0F     NODUMP    1 B*  AN  ZA 0  T  T  -  - - CNT S 0 PSH NBS  T -> STK, 0 -> T  <Normal boot : 0>
 4DE  26 6C 0C 60 FF               1 NN  MP  ZA 0  6  -  -  - - CNT - 0 NBD NBS  R6 - 1  !CTRL A
 4DF  4E 29 07 20 0F               0 BOOT1      -Z            - JMP              IF R6 <> CTRL A
 4E0  6F E1 EC 70 1A               1 B   OR  DZ 0  -  T  -  - - CNT - 1 32       32 -> T    
 4E1  4E A8 07 20 0F               0 BOOT       T             - JMP              BOOT(32)      <Alternative boot : 32>
 4E2  26 CC 0C 70 06     BOOT1     1 NN  MP  DA 1  6  -  -  - - CNT - 1 6        R1 - 6  !CTRL F"
 4E3  4E 69 07 20 0F               0 BOOT2      -Z            - JMP              IF R6 <> CTRL F
 4E4  6F E1 E4 72 01               1 B   OR  DZ 0  -  T  RC  2 - CNT - 1 1        40000B -> T
 4E5  4E A8 07 20 0F               0 BOOT       T             - JMP              BOOT(40000) 
 4E6  26 CC 0C 70 13     BOOT2     1 NN  MP  DA 1  6  -  -  - - CNT - 1 23       R6 - 23 !CTRL S"
 4E7  4E A9 07 20 0F               0 BOOT       -Z            - JMP              IF R6 <> CTRL S
 4E8  6F E1 E4 72 01               1 B   OR  DZ 0  -  T  RC  2 - CNT - 1 1        40032B -> T
 4E9  62 FF EC 70 1A               1 B   PL  DA 0  T  T  -  - - CNT - 1 32       BOOT(40032)      
 4EA  6F E1 0C 70 7F     BOOT      1 B   OR  DZ 0  -  10 -  - - CNT - 1 177      177 -> R10
 4EB  6F E1 2C 70 2F               1 B   OR  DZ 0  -  11 -  - - CNT - 1 57       57 -> R11
 4EC  66 7F 4C 60 FF               1 B   MP  ZA 0  T  12 -  - - CNT - 0 NBD NBS  T - 1 -> R12
 4ED  6F E1 EC 40 FF               1 B   OR  DZ 0  -  T  -  - - CNT S 0 POP NBS  STK -> T
 4EE  0F E0 0C 70 80               1 Q   OR  DZ 0  -  -  -  - - CNT - 1 200      200 -> Q
 4EF  4B 48 03 20 0F     BLOCK     0 #GETWORD   T             - JSR              GETWORD(SIZE) 
 4F0  66 6E 0C 60 FF               1 B   MP  ZA 0  7  0  -  - - CNT - 0 NBD NBS  R7 - 1 -> R0
 4F1  00 10 47 20 0F               0 #RESTART   F             - JMP              RTN IF < 0
 4F2  4B 48 03 20 0F               0 #GETWORD   T             - JSR              GETWORD(ADDR) 
 4F3  6E 6E 2C 60 FF               1 B   OR  ZA 0  7  1  -  - - CNT - 0 NBD NBS  R7 -> R1
 4F4  4B 48 03 20 0F     DATA      0 #GETWORD   T             - JSR              GETWORD(R7)
 4F5  2E 6E 0C 60 10               1 NN  OR  ZA 0  7  -  -  - - CNT - 0 MD  ALU  R7 -> MD
 4F6  42 42 2C 60 30               1 B*  PL  ZA 1  1  1  -  - - CNT - 0 MAR ALU  R1 -> MAR, R1+1 -> R1
 4F7  66 60 0C 60 FF               1 B   MP  ZA 0  0  0  -  - - CNT - 0 NBD NBS  R0 - 1 -> R0
 4F8  4F 49 07 20 0F               0 DATA       -Z            - JMP              IF SIZE <> 0
 4F9  4E F8 07 20 0F               0 BLOCK      T             - JMP              GOTO BLOCK
     $
     * MODULE DISPLAYHANDLER;
     * EXPORT BBLT,REPL,DCH,DDT;
     *
     * (* PARAMETERS FOR THE BITHANDLING MACROINSTRUCTIONS ON THE EXPRESSION STACK:
     *
     *   BBLT:          I          I
     *   =====          +----------+
     *                  I  SRCBMD  I  ^       REPL:     I          I
     *                  +----------+  I       =====     +----------+  ^
     *                  I DESTBLD  I  I                 I DESTBLD  I  I
     *                  +----------+  I                 +----------+  I
     *                  I  SRCBLD  I  I                 I  SOURCE  I  I
     *                  +----------+  I                 +----------+  I
     *                  I DESTBMD  I  I                 I   BMD    I  I
     *                  +----------+                    +----------+
     *                  I   MODE   I                    I   MODE   I
     *                  +----------+                    +----------+
     *
     *
     *        DCH:      I          I          DDT:      I          I
     *        ====      +----------+          ====      +----------+
     *                  I    CH    I  ^                 I     Y    I
     *                  +----------+  I                 +----------+
     *                  I DESTBLD  I  I                 I     X    I
     *                  +----------+  I                 +----------+
     *                  I FONTADDR I  I                 I    BMD   I
     *                  +----------+  I                 +----------+
     *                  I   BMD    I                    I   MODE   I
     *                  +----------+                    +----------+       *)
     *
     *
     *
     * TYPE
     *   BMDESCR = RECORD
     *     ADDR,
     *     WIDTH,HEIGHT : CARDINAL;
     *     WORD4 : PACKED RECORD
     *       INVERT     : BOOLEAN; 
     *       WPRIM      : [0..63]; 
     *       HPRIM      : [0..511];
     *     END;
     *   END;
     *
     *   BLOCKDESCR = RECORD
     *     X,Y,
     *     WIDTH,HEIGHT : CARDINAL;
     *   END;
     *
     *   PATTERN = RECORD
     *     COUNT        : CARDINAL;
     *     DOTS         : ARRAY [1..COUNT] OF BITSET;
     *   END;
     *
     *   FONT = RECORD
     *     HEIGHT       : CARDINAL;
     *     CHAR         : ARRAY [0..255] OF POINTER TO CHARACTER; (* SELF RELATIV *) 
     *     PSEUDOCHAR   : ARRAY [256..MAXCHAR] OF POINTER TO CHARACTER;
     *   END;
     *
     *   CHARACTER = RECORD
     *     DOTS         : ARRAY [1..HEIGHT] OF BITSET; 
     *     CASE EXTENDED OF
     *       FALSE : WIDTH     : CARDINAL;
     *       TRUE  : PSEUDOCHR : INTEGER; (* -INDEX TO THE ARRAY PSEUDOCHAR *)
     *     END;
     *     SKIP,HEIGHT  : 0..255;
     *   END;
     *
     * VAR
     *   SRCBMD,DESTBMD, 
     *   BMD             : BMDESCR;
     *   DESTBLD, SRCBLD : BLOCKDESCR;
     *   SOURCE          : PATTERN;
     *   FONTADDR        : POINTER TO FONT;
     *
     *
     *
     $
     *         PROCEDURE DDT;  (* NW 7.80
     *         ==============             *) 
     *
 4FA  6F E0 0C 40 FF     DDT       1 B   OR  DZ 0  -  0  -  - - CNT S 0 POP NBS  STK -> R0          !X"
 4FB  6F E0 2C 40 30               1 B   OR  DZ 0  -  1  -  - - CNT S 0 MAR ALU  STK -> R1 -> MAR !BMD"
 4FC  6F E0 6C 60 01               1 B   OR  DZ 0  -  3  -  - - CNT - 0 ALU MD   MD -> R3
 4FD  72 E6 8C 70 03               1 B   AN  DA 0  3  4  -  - - CNT - 1 3        3 & R3 -> R4    !BANK"
 4FE  76 E6 6C 70 03               1 B   NA  DA 0  3  3  -  - - CNT - 1 3        _3 & R3 -> R3    !BMA"
 4FF  62 42 2C 60 30               1 B   PL  ZA 1  1  1  -  - - CNT - 0 MAR ALU  R1+1 -> R1 -> MAR
 500  0F E0 0C 60 01               1 Q   OR  DZ 0  -  -  -  - - CNT - 0 ALU MD   MD -> Q            !W"
 501  6D 60 4C 60 FF               1 B   OR  ZQ 0  -  2  -  - - CNT - 0 NBD NBS  Q -> R2
 502  4F E4 44 6C 00               1 B*  OR  DZ 0  2  2  RC 14 - CNT - 0 ALU ALU  (R2^14) -> R2 
 503  28 C0 4C 60 FF               1 NN  MI  AB 1  0  2  -  - - CNT - 0 NBD NBS  R0 - R2
 504  3E 02 07 20 0F               0 TRAP(4)    C             - JMP              TRAP(4) IF 16*W<=R0
 505  22 42 0C 60 30               1 NN  PL  ZA 1  1  -  -  - - CNT - 0 MAR ALU  R1 + 1 -> MAR 
 506  63 C0 2C 60 01               1 B   PL  DZ 1  -  1  -  - - CNT - 0 ALU MD   MD+1 -> R1       !H+1"
 507  68 C3 EC 60 FF               1 B   MI  AB 1  1  T  -  - - CNT - 0 NBD NBS  R1 - T -> T    !H+1-Y"
 508  22 5E 0C 60 FF               1 NN  PL  ZA 1  T  -  -  - - CNT - 0 NBD NBS  T + 1
 509  3E 01 47 20 0F               0 TRAP(4)    FZ            - JMP              TRAP(4) IF H<=Y
 50A  3C 98 03 20 0F               0 #MUL16     T             - JSR              Q * T -> [R2,Q] !..*W"
 50B  60 66 6C 60 FF               1 B   PL  AQ 0  3  3  -  - - CNT - 0 NBD NBS  Q + R3 -> R3  !..+BMA"
 50C  4F E0 24 64 00               1 B*  OR  DZ 0  0  1  RC  4 - CNT - 0 ALU ALU  R0^4 -> R1  !X DIV 16"
 50D  76 E2 2C 74 00               1 B   NA  DA 0  1  1  MC 4 - CNT - 1 0        _MSK(0,4) & R1 -> R1
 50E  2E 68 0C 60 D0               1 NN  OR  ZA 0  4  -  -  - - CNT - 0 BNK ALU  R4 -> BNK
 50F  60 E2 6C 60 30               1 B   PL  AB 0  1  3  -  - - CNT - 0 MAR ALU  R1+R3 -> R3 -> MAR
     *                                                      !(H+1-Y)*W + BMA + X/16" 
 510  22 40 0C 60 40               1 NN  PL  ZA 1  0  -  -  - - CNT - 0 SR  ALU  R0+1->SCR !(X+1)MOD16"
 511  6F E0 4C 60 01               1 B   OR  DZ 0  -  2  -  - - CNT - 0 ALU MD   MD -> R2
 512  6F E0 34 70 01               1 B   OR  DZ 0  -  1  RR - - CNT - 1 1        1^SR -> R1
 513  6F E0 0C 40 FF               1 B   OR  DZ 0  -  0  -  - - CNT S 0 POP NBS  STK -> R0          !M"
 514  26 C0 0C 70 02               1 NN  MP  DA 1  0  -  -  - - CNT - 1 2        R0 - 2
 515  51 91 07 20 0F               0 #INV       Z             - JMP              IF R0=2
 516  51 B0 27 20 0F               0 #SET       S             - JMP              IF R0<2
 517  34 E2 4C 60 10     #CLR      1 NN  NA  AB 0  1  2  -  - - CNT - 0 MD  ALU  _R1 & R2 -> MD
 518  51 C8 07 20 0F               0 #DD        T             - JMP
 519  38 E2 4C 60 10     #INV      1 NN  XR  AB 0  1  2  -  - - CNT - 0 MD  ALU  R1 XOR R2 -> MD
 51A  51 C8 07 20 0F               0 #DD        T             - JMP
 51B  2C E2 4C 60 10     #SET      1 NN  OR  AB 0  1  2  -  - - CNT - 0 MD  ALU  R1 OR R2 -> MD
 51C  2E 68 0C 60 D0     #DD       1 NN  OR  ZA 0  4  -  -  - - CNT - 0 BNK ALU  R4 -> BNK
 51D  4F E7 EC 40 30               1 B*  OR  DZ 0  3  T  -  - - CNT S 0 MAR ALU  R3 -> MAR, STK -> T
 51E  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
     *         PROCEDURE DCH;  (* WW 27.3.79 
     *         ==============                                *)
     *           POP(CH);                                    T : CH
     *           POP(DESTBLD);                               L : DESTBLD
     *           POP(FONTADDR);                              3 : FONTADDR
     *           POP(BMD);                                   4 : BMD
     *           DX := DESTBLD.X;                            8 : DX
     *           PUSH(M);
     *           DY := DESTBLD.Y;                            M : DY
 51F  0F E0 0C 40 30     DCH       1 Q   OR  DZ 0  -  -  -  - - CNT S 0 MAR ALU  STK -> Q -> MAR
 520  6F E0 6C 40 FF               1 B   OR  DZ 0  -  3  -  - - CNT S 0 POP NBS  STK -> R3
 521  6F E0 8C 40 FF               1 B   OR  DZ 0  -  4  -  - - CNT S 0 POP NBS  STK -> R4
 522  6F E1 0C 60 01               1 B   OR  DZ 0  -  10 -  - - CNT - 0 ALU MD   MD -> R10
 523  21 40 0C 60 30               1 NN  PL  ZQ 1  -  -  -  - - CNT - 0 MAR ALU  Q+1 -> MAR
 524  4F F3 2C 40 01               1 B*  OR  DZ 0  M  11 -  - - CNT S 0 ALU MD   M -> STK, MD -> R11
     *           BMA := BMD.ADDR;                            5 : BMA
     *           PUSH(H);
     *           BMWIDTH := BMD.WIDTH;                       6 : BMWIDTH
     *           PUSH(S);
     *           BMHEIGHT := BMD.HEIGHT + 1                  0 : BMHEIGHT
 525  2E 68 0C 60 30               1 NN  OR  ZA 0  4  -  -  - - CNT - 0 MAR ALU  R4 -> MAR
 526  4F F4 AC 40 01               1 B*  OR  DZ 0  P  5  -  - - CNT S 0 ALU MD   P -> STK, MD -> R5
 527  62 48 8C 60 30               1 B   PL  ZA 1  4  4  -  - - CNT - 0 MAR ALU  R4+1 -> R4 -> MAR
 528  4F F6 CC 40 01               1 B*  OR  DZ 0  H  6  -  - - CNT S 0 ALU MD   H -> STK, MD -> R6
 529  22 48 0C 60 30               1 NN  PL  ZA 1  4  -  -  - - CNT - 0 MAR ALU  R4+1 -> MAR
 52A  43 D8 0C 40 01               1 B*  PL  DZ 1  S  0  -  - - CNT S 0 ALU MD   S -> STK, MD+1 -> R0
     *           BLOCKWIDTH := 0;                            S : BLOCKWIDTH
     *           PUSH(G);
     *           PUSH(L);
     *           DWORD := BMHEIGHT - DY;                     M : DWORD
     *           CH := CH MOD 377;                           M : CH
     *           DWORD := BMWIDTH * DWORD;                   Q : DWORD
 52B  52 7B 8C 40 0F               1 B*  AN  ZA 0  G  S  -  - - CNT S 0 PSH NBS  G -> STK, 0 -> S
 52C  4D 7D CC 40 0F               1 B*  OR  ZQ 0  L  L  -  - - CNT S 0 PSH NBS  L -> STK, Q -> L
 52D  68 C1 2C 60 FF               1 B   MI  AB 1  0  11 -  - - CNT - 0 NBD NBS  R0 - R11 -> R11
 52E  22 52 0C 40 0F               1 NN  PL  ZA 1  11 -  -  - - CNT S 0 PSH NBS  R11 + 1 -> STK
 52F  0E 72 0C 60 FF               1 Q   OR  ZA 0  11 -  -  - - CNT - 0 NBD NBS  R11 -> Q
 530  72 FF 2C 70 FF               1 B   AN  DA 0  T  11 -  - - CNT - 1 377      T & 377 -> R11
 531  6E 6D EC 60 FF               1 B   OR  ZA 0  6  T  -  - - CNT - 0 NBD NBS  R6 -> T
 532  3C 98 03 20 0F               0 #MUL16     T             - JSR              Q * T -> Q  (-2-)
     *           DWORD := DWORD + BMA + (DX DIV 16);         1 : DWORD
     *           BITADDR := DX MOD 16;                       0 : BITADDR
     *           FBANK := FONTADDR MOD 4;                    H : FBANK
     *           BANK := BMA MOD 4;                          2 : BANK
 533  4F F0 24 64 00               1 B*  OR  DZ 0  10 1  RC 4 - CNT - 0 ALU ALU  R10^4 -> R1
 534  76 E2 2C 74 00               1 B   NA  DA 0  1  1  MC 4 - CNT - 1 0         -MSK(0,4) & R1 -> R1
 535  60 62 2C 60 FF               1 B   PL  AQ 0  1  1  -  - - CNT - 0 NBD NBS  R1 + Q -> R1
 536  72 EA 4C 70 03               1 B   AN  DA 0  5  2  -  - - CNT - 1 3        3 & R5 -> R2
 537  76 EA AC 70 03               1 B   NA  DA 0  5  5  -  - - CNT - 1 3        _3 & R5 -> R5
 538  4F E6 64 6E 00               1 B*  OR  DZ 0  3  3  RC 16 - CNT - 0 ALU ALU  (R3^16) -> R3
 539  72 E7 6C 70 03               1 B   AN  DA 0  3  H  -  - - CNT - 1 3        3 & R3 -> H
 53A  76 E6 6C 70 03               1 B   NA  DA 0  3  3  -  - - CNT - 1 3        _3 & R3 -> R3
 53B  60 EA 2C 60 FF               1 B   PL  AB 0  5  1  -  - - CNT - 0 NBD NBS  R1 + R5 -> R1
 53C  72 F0 0C 70 0F               1 B   AN  DA 0  10 0  -  - - CNT - 1 17       R10 & 17 -> R0
 53D  6E 71 EC 60 FF               1 B   OR  ZA 0  10 T  -  - - CNT - 0 NBD NBS  R10 -> T
     *           CONVERT(CH);
     *           POP(L);
     *           POP(G);
     *           DESTBLD.X := DESTBLD.X + BLOCKWIDTH;
     *           DESTBLD.W := DESTBLD.W + BLOCKWIDTH;
     *           POP(S);
     *           POP(F);
     *           POP(H);
     *           POP(P);
     *           POP(M);
     *           POP(T);
     *         END DCH;
 53E  55 48 03 20 0F               0 #CONVERT         T       - JSR              CONVERT(R11)
 53F  6E 7C 4C 60 30               1 B   OR  ZA 0  L  2  -  - - CNT - 0 MAR ALU  L -> MAR -> R2
 540  62 F8 0C 60 01               1 B   PL  DA 0  S  0  -  - - CNT - 0 ALU MD   MD + S -> R0
 541  2E 60 0C 60 10               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MD  ALU  R0 -> MD
 542  42 44 4C 60 30               1 B*  PL  ZA 1  2  2  -  - - CNT - 0 MAR ALU  R2 -> MAR, R2 + 1 -> R2
 543  22 44 0C 60 30               1 NN  PL  ZA 1  2  -  -  - - CNT - 0 MAR ALU  R2 + 1 => MAR
 544  6A D8 0C 60 01               1 B   MI  DA 1  S  0  -  - - CNT - 0 ALU MD   MD - S -> R0
 545  2E 60 0C 60 10               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 MD  ALU  R0 -> MD
 546  22 44 0C 60 30               1 NN  PL  ZA 1  2  -  -  - - CNT - 0 MAR ALU  R2 + 1 -> MAR
 547  54 C8 03 20 0F               0 EXITDCH    T             - JSR              RESTORE REGS
 548  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 549  00 08 00 20 0F     TRAPDCH   0 0          T             - PST              FIX 2911 STACK
 54A  54 C8 03 20 0F               0 EXITDCH    T             - JSR              RESTORE REGS
 54B  3E 08 07 20 0F               0 TRAP(4)    T             - JMP              TRAP(4)
 54C  6F E0 0C 40 FF     EXITDCH   1 B   OR  DZ 0  -  0  -  - - CNT S 0 POP NBS  STK -> DUMMY
 54D  6F E1 CC 40 FF               1 B   OR  DZ 0  -  L  -  - - CNT S 0 POP NBS  STK -> L
 54E  6F E1 AC 40 FF               1 B   OR  DZ 0  -  G  -  - - CNT S 0 POP NBS  STK -> G
 54F  6F E1 8C 40 FF               1 B   OR  DZ 0  -  S  -  - - CNT S 0 POP NBS  STK -> S
 550  6F E1 6C 40 FF               1 B   OR  DZ 0  -  H  -  - - CNT S 0 POP NBS  STK -> H
 551  6F E1 4C 40 FF               1 B   OR  DZ 0  -  P  -  - - CNT S 0 POP NBS  STK -> P
 552  6F E1 2C 40 FF               1 B   OR  DZ 0  -  M  -  - - CNT S 0 POP NBS  STK -> M
 553  6F E1 E9 40 FF               1 B   OR  DZ 0  -  T  -  - - RTN S 0 POP NBS  STK -> T
     $
     *         PROCEDURE CONVERT (CH:CHARACTER);
     *         -----------------
     *           CHAR := FONTADDR + CH;                      9 : CHAR
     *           CHARPTR := CHAR + M[CHAR];                  9 : CHARPTR
     *           PSEUDOCHAR := 0;                            G : PSEUDOCHAR
     *           WIDTH := CHARPTR^.WIDTH;                    7 : WIDTH
 554  2E 76 0C 60 D0     #CONVERT  1 NN  OR  ZA 0  H  -  -  - - CNT - 0 BNK ALU  H -> BNK
 555  60 E7 2C 60 30               1 B   PL  AB 0  3  11 -  - - CNT - 0 MAR ALU  R3 + R11 -> R11 -> MAR
 556  62 F3 2C 60 01               1 B   PL  DA 0  11 11 -  - - CNT - 0 ALU MD   MD + R11 -> R11
 557  2E 76 0C 60 D0               1 NN  OR  ZA 0  H  -  -  - - CNT - 0 BNK ALU  H -> BNK
 558  52 73 AC 60 30               1 B*  AN  ZA 0  11 15 -  - - CNT - 0 MAR ALU  R11 -> MAR, 0 -> G
 559  6F E0 EC 60 01               1 B   OR  DZ 0  -  7  -  - - CNT - 0 ALU MD   MD -> R7
     *           IF WIDTH < 0 THEN         (* CHARACTER WIDER THAN 16 BITS *)
     *             PSEUDOCHAR := COMPL(WIDTH);
     *             WIDTH := 16;
     *           END;
 55A  55 D8 47 20 0F               0 #CNV1        -F          - JMP              GOTO #CNV1 IF >=0
 55B  6A 6F AC 60 FF               1 B   MI  ZA 0  7  G  -  - - CNT - 0 NBD NBS  _R7 -> G
 55C  6F E0 EC 70 10               1 B   OR  DZ 0  -  7  -  - - CNT - 1 20       16 -> R7
     *           BLOCKWIDTH := BLOCKWIDTH + WIDTH;           S : BLOCKWIDTH
     *           HEIGHT := CHARPTR^.HEIGHT;                  Q : HEIGHT
     *           NEXTBITADDR := BITADDR + WIDTH;             7 : NEXTBITADDR
 55D  60 EF EC 60 FF     #CNV1     1 B   PL  AB 0  7  T  -  - - CNT - 0 NBD NBS  R7 + T -> T
 55E  54 92 07 20 0F               0 TRAPDCH    C             - JMP              TRAP IF OVERFLOW
 55F  4F EC A4 6C 00               1 B*  OR  DZ 0  6  5  RC 14 - CNT - 0 ALU ALU  (R6^14) -> R5 
 560  28 CB EC 60 FF               1 NN  MI  AB 1  5  T  -  - - CNT - 0 NBD NBS  R5 - T
 561  54 9A 07 20 0F               0 TRAPDCH    -C            - JMP              TRAP IF 16*BMW < T
 562  60 EF 8C 60 FF               1 B   PL  AB 0  7  S  -  - - CNT - 0 NBD NBS  R7 + S -> S
 563  2E 76 0C 60 D0               1 NN  OR  ZA 0  H  -  -  - - CNT - 0 BNK ALU  H -> BNK
 564  22 52 0C 60 30               1 NN  PL  ZA 1  11 -  -  - - CNT - 0 MAR ALU  R11+1 -> MAR
 565  40 E0 EC 60 40               1 B*  PL  AB 0  0  7  -  - - CNT - 0 SR  ALU  R0 -> SR, R0+R7 -> R7
 566  6F E1 0C 60 01               1 B   OR  DZ 0  -  10 -  - - CNT - 0 ALU MD   MD -> R10
 567  12 F0 0C 70 FF               1 Q   AN  DA 0  10 -  -  - - CNT - 1 377      R10 & 377 -> Q
     *           IF HEIGHT = 0
     *           THEN
     *             IF NEXTBITADDR >= 16 THEN 
     *               NEXTBITADDR := NEXTBITADDR - 16;
     *               INC(DWORD);
     *             END;
 568  56 C9 07 20 0F               0 #CNV10        -Z         - JMP              GOTO #CNV10 IF #0
 569  26 CE 0C 70 10               1 NN  MP  DA 1  7  -  -  - - CNT - 1 20       R7 - 16
 56A  5A 00 27 20 0F               0 #CNV6         S          - JMP              GOTO CNV6 IF <0
 56B  59 E8 07 20 0F               0 #CNV50        T          - JMP              GOTO CNV50
     *           ELSE
     *             CURRENTWORDADDR := DWORD;                 4 : CURRENTWORDADDR
     *             SKIP := CHARPTR^.SKIP;                    8 : SKIP
 56C  6E 62 8C 60 FF     #CNV10    1 B   OR  ZA 0  1  4  -  - - CNT - 0 NBD NBS  R1 -> R4
 56D  4F F1 04 68 00               1 B*  OR  DZ 0  10 10 RC 10 - CNT - 0 ALU ALU  R10^10 -> R10 
     *             WHILE SKIP > 0 DO
     *               CURRENTWORDADDR := CURRENTWORDADDR-
     *                                  BMWIDTH;
     *               DEC(SKIP);
     *             END;
 56E  72 F1 0C 70 FF               1 B   AN  DA 0  10 10 -  - - CNT - 1 377      R10 & 377 -> R10
 56F  6F E0 AC 40 FF               1 B   OR  DZ 0  -  5  -  - - CNT S 0 POP NBS  STK -> R5
 570  2E 6A 0C 40 0F               1 NN  OR  ZA 0  5  -  -  - - CNT S 0 PSH NBS  R5 -> STK
 571  64 D0 AC 60 FF               1 B   MP  AB 1  10 5  -  - - CNT - 0 NBD NBS  R5 - R10 -> R5
 572  54 9A 07 20 0F               0 TRAPDCH    -C            - JMP              TRAP IF R5<R10
 573  28 4A 0C 60 FF               1 NN  MI  AQ 1  5  -  -  - - CNT - 0 NBD NBS  R5 - Q
 574  54 9A 07 20 0F               0 TRAPDCH    -C            - JMP              TRAP IF R5<Q
 575  2E 70 0C 60 FF               1 NN  OR  ZA 0  10 -  -  - - CNT - 0 NBD NBS  R10 
 576  57 A1 07 20 0F               0 #CNV3         Z          - JMP              GOTO #CNV3 IF =0
 577  64 CC 8C 60 FF     #CNV2     1 B   MP  AB 1  6  4  -  - - CNT - 0 NBD NBS  R4 - R6 -> R4 
 578  66 71 0C 60 FF               1 B   MP  ZA 0  10 10 -  - - CNT - 0 NBD NBS  R10-1 -> R10
 579  57 79 07 20 0F               0 #CNV2        -Z          - JMP              GOTO #CNV2 IF #0
     *                                                       8 : HEIGHT
     *             CURRENTWORDADDR := CURRENTWORDADDR+ 
     *                                BMWIDTH;
     *             IF NEXTBITADDR < 16
     *             THEN        (* NO WRAP AROUND *)
 57A  6D 61 0C 60 FF     #CNV3     1 B   OR  ZQ 0  -  10 -  - - CNT - 0 NBD NBS  Q -> R10
 57B  60 EC 8C 60 FF               1 B   PL  AB 0  6  4  -  - - CNT - 0 NBD NBS  R4 + R6 -> R4 
 57C  26 CE 0C 70 10               1 NN  MP  DA 1  7  -  -  - - CNT - 1 20       R7 - 16
 57D  58 A8 27 20 0F               0 #CNV5        -S          - JMP              GOTO #CNV5 IF >=0
     *               FOR I := HEIGHT DOWN TO 1 DO            8 : I
     *                 R5 := ROT(CHARPTR^.DOTS[I],BITADDR);  5 : R5
     *                 CURRENTWORDADDR := CURRENTWORDADDR-
     *                                    BMWIDTH;
     *                 M[CURRENTWORDADDR] := M[C.W.A] OR R5;
     *               END;
 57E  2E 76 0C 60 D0     #CNV4     1 NN  OR  ZA 0  H  -  -  - - CNT - 0 BNK ALU  H -> BNK
 57F  66 73 2C 60 30               1 B   MP  ZA 0  11 11 -  - - CNT - 0 MAR ALU  R11-1 -> R11 -> MAR
 580  6F E0 B4 60 01               1 B   OR  DZ 0  -  5  RR - - CNT - 0 ALU MD   MD^SR -> R5
 581  2E 64 0C 60 D0               1 NN  OR  ZA 0  2  -  -  - - CNT - 0 BNK ALU  R2 -> BNK
 582  64 CC 8C 60 30               1 B   MP  AB 1  6  4  -  - - CNT - 0 MAR ALU  R4 - R6 -> R4 -> MAR
 583  6E EA AC 60 01               1 B   OR  DA 0  5  5  -  - - CNT - 0 ALU MD   MD OR R5 -> R5
 584  2E 6A 0C 60 10               1 NN  OR  ZA 0  5  -  -  - - CNT - 0 MD  ALU  R5 -> MD
 585  2E 64 0C 60 D0               1 NN  OR  ZA 0  2  -  -  - - CNT - 0 BNK ALU  R2 -> BNK
 586  2E 68 0C 60 30               1 NN  OR  ZA 0  4  -  -  - - CNT - 0 MAR ALU  R4 -> MAR
 587  66 71 0C 60 FF               1 B   MP  ZA 0  10 10 -  - - CNT - 0 NBD NBS  R10-1 -> R10
 588  57 E9 07 20 0F               0 #CNV4        -Z          - JMP              GOTO #CNV4 IF #0
 589  5A 08 07 20 0F               0 #CNV6         T          - JMP              GOTO #CNV6
     *             ELSE        (* WRAP AROUND *)
     *               FOR I := HEIGHT DOWNTO 1 DO
 58A  2E 76 0C 60 D0     #CNV5     1 NN  OR  ZA 0  H  -  -  - - CNT - 0 BNK ALU  H -> BNK
 58B  66 73 2C 60 30               1 B   MP  ZA 0  11 11 -  - - CNT - 0 MAR ALU  R11-1 -> R11 -> MAR
 58C  6F E0 B4 60 01               1 B   OR  DZ 0  -  5  RR - - CNT - 0 ALU MD   MD^SR -> R5
 58D  7F E1 5C 70 00               1 B   XN  DZ 0  -  12 MR - - CNT - 1 0        -MSK(0,SR) -> R12
 58E  70 EB 4C 60 FF               1 B   AN  AB 0  5  12 -  - - CNT - 0 NBD NBS  R5 & R12 -> R12
 58F  2E 64 0C 60 D0               1 NN  OR  ZA 0  2  -  -  - - CNT - 0 BNK ALU  R2 -> BNK
 590  64 CC 8C 60 30               1 B   MP  AB 1  6  4  -  - - CNT - 0 MAR ALU  R4 - R6 -> R4 -> MAR
 591  6E F5 4C 60 01               1 B   OR  DA 0  12 12 -  - - CNT - 0 ALU MD   MD OR R12 -> R12
 592  2E 74 0C 60 10               1 NN  OR  ZA 0  12 -  -  - - CNT - 0 MD  ALU  R12 -> MD
 593  2E 64 0C 60 D0               1 NN  OR  ZA 0  2  -  -  - - CNT - 0 BNK ALU  R2 -> BNK
 594  2E 68 0C 60 30               1 NN  OR  ZA 0  4  -  -  - - CNT - 0 MAR ALU  R4 -> MAR
     *                 R5 := ROT(CHARPTR^.DOTS[I],BITADDR);  5 : R5
     *                 C.W.A. := C.W.A. - BMWIDTH;
     *                 M[C.W.A.] := M[C.W.A.] OR (R5 MOD 2**BITADDR);
     *               END;
 595  72 EA BC 70 00               1 B   AN  DA 0  5  5  MR - - CNT - 1 0        MSK(0,SR) & R5 -> R5
 596  2E 64 0C 60 D0               1 NN  OR  ZA 0  2  -  -  - - CNT - 0 BNK ALU  R2 -> BNK
 597  22 48 0C 60 30               1 NN  PL  ZA 1  4  -  -  - - CNT - 0 MAR ALU  R4 + 1 -> MAR 
 598  6E EA AC 60 01               1 B   OR  DA 0  5  5  -  - - CNT - 0 ALU MD   MD OR R5 -> R5
 599  2E 6A 0C 60 10               1 NN  OR  ZA 0  5  -  -  - - CNT - 0 MD  ALU  R5 -> MD
 59A  2E 64 0C 60 D0               1 NN  OR  ZA 0  2  -  -  - - CNT - 0 BNK ALU  R2 -> BNK
 59B  22 48 0C 60 30               1 NN  PL  ZA 1  4  -  -  - - CNT - 0 MAR ALU  R4 + 1 -> MAR 
 59C  66 71 0C 60 FF               1 B   MP  ZA 0  10 10 -  - - CNT - 0 NBD NBS  R10 - 1 -> R10
 59D  58 A9 07 20 0F               0 #CNV5        -Z          - JMP              GOTO #CNV5 IF #0
     *               NEXTBITADDR := N.B.A. - 16;
     *               INC(DWORD);
     *             END;
 59E  66 CE EC 70 10     #CNV50    1 B   MP  DA 1  7  7  -  - - CNT - 1 20       R7 - 16 -> R7 
 59F  62 42 2C 60 FF               1 B   PL  ZA 1  1  1  -  - - CNT - 0 NBD NBS  R1 + 1 -> R1
     *             BITADDR := NEXTBITADDR;                   0 : BITADDR
     *           END;
     *           CH := PSEUDOCHAR; 
     *           IF CH # 0 THEN CONVERT(CH); END;
     *         END CONVERT;
 5A0  6E 6E 0C 60 FF     #CNV6     1 B   OR  ZA 0  7  0  -  - - CNT - 0 NBD NBS  R7 -> R0
 5A1  6E 7B 2C 60 FF               1 B   OR  ZA 0  G  11 -  - - CNT - 0 NBD NBS  G -> R11
 5A2  55 49 07 20 0F               0 #CONVERT     -Z          - JMP              JMP CONVERT IF #0
 5A3  00 08 01 20 0F               0 0             T          - RTN              RETURN
     *
     *
     *
     $
     *         PROCEDURE INIT;  (* WW 29.2.79
     *         --------------                 *)
     *           POP(DESTBLD);                               T : DESTBLD
     *           POP(SRCBLD);                                P : SRCBLD
     *          [REPL: POP(SOURCE);                          P : SOURCE]
     *           POP(BMD);                                   Q : BMD
     *           POP(MODE);                                  0 : MODE
     *           PUSH(M);
 5A4  6F E0 6C 40 FF     #INIT     1 B   OR  DZ 0  -  3  -  - - CNT S 0 POP NBS  STK -> R3
 5A5  0F E0 0C 40 FF               1 Q   OR  DZ 0  -  -  -  - - CNT S 0 POP NBS  STK -> Q
 5A6  6F E0 0C 40 FF               1 B   OR  DZ 0  -  0  -  - - CNT S 0 POP NBS  STK -> R0
 5A7  2E 72 0C 40 0F               1 NN  OR  ZA 0  M  -  -  - - CNT S 0 PSH NBS  M -> STK
     *           PUSH(L);
     *           DX := DESTBLD.X;                            6 : DX
     *           PUSH(G);
     *           DY := DESTBLD.Y;                            8 : DY
     *           PUSH(H);
     *           DW := DESTBLD.WIDTH;                        H : DW
     *           PUSH(P);
     *           DH := DESTBLD.HEIGHT;                       M : DH
     *                                                       T : BMD
 5A8  42 5F EC 60 30               1 B*  PL  ZA 1  T  T  -  - - CNT - 0 MAR ALU  T -> MAR, T+1 -> T
 5A9  4F FC CC 40 01               1 B*  OR  DZ 0  L  6  -  - - CNT S 0 ALU MD   L -> STK, MD -> R6
 5AA  42 5F EC 60 30               1 B*  PL  ZA 1  T  T  -  - - CNT - 0 MAR ALU  T -> MAR, T+1 -> T
 5AB  4F FB 0C 40 01               1 B*  OR  DZ 0  G  10 -  - - CNT S 0 ALU MD   G -> STK, MD -> R10
 5AC  42 5F EC 60 30               1 B*  PL  ZA 1  T  T  -  - - CNT - 0 MAR ALU  T -> MAR, T+1 -> T
 5AD  4F F7 6C 40 01               1 B*  OR  DZ 0  H  H  -  - - CNT S 0 ALU MD   H -> STK, MD -> H
 5AE  4D 7F EC 60 30               1 B*  OR  ZQ 0  T  T  -  - - CNT - 0 MAR ALU  T -> MAR, Q -> T
 5AF  4F F5 2C 40 01               1 B*  OR  DZ 0  P  11 -  - - CNT S 0 ALU MD   P -> STK, MD -> R11
     *           PUSH(S);
     *           BMA := BMD.ADDR;                            S : BMA
     *           BMWIDTH := BMD.WIDTH;                       4 : BMWIDTH
     *           BMHEIGHT := BMD.HEIGHT + 2                  2 : BMHEIGHT
     *           IF (DX+DW >= 2**16)
     *           OR (DX+DW > 16*BMWIDTH)
     *           OR (DY+DH >= 2**16)
     *           OR (DY+DH > BMHEIGHT)
     *           THEN TRAP END;
     *           SX := SRCBLD.X                              5 : SX
     *          [REPL: LENGTH := SOURCE.COUNT;               5 : LENGTH]
     *         END INIT;                                     Q : 'FFF'
 5B0  42 5F EC 60 30               1 B*  PL  ZA 1  T  T  -  - - CNT - 0 MAR ALU  T -> MAR, T+1 -> T
 5B1  4F F9 8C 40 01               1 B*  OR  DZ 0  S  S  -  - - CNT S 0 ALU MD   S -> STK, MD -> S
 5B2  42 5F EC 60 30               1 B*  PL  ZA 1  T  T  -  - - CNT - 0 MAR ALU  T -> MAR, T+1 -> T
 5B3  6F E0 8C 60 01               1 B   OR  DZ 0  -  4  -  - - CNT - 0 ALU MD   MD -> R4
 5B4  2E 7E 0C 60 30               1 NN  OR  ZA 0  T  -  -  - - CNT - 0 MAR ALU  T -> MAR
 5B5  6F E0 4C 60 01               1 B   OR  DZ 0  -  2  -  - - CNT - 0 ALU MD   MD -> R2
 5B6  62 E4 4C 70 02               1 B   PL  DA 0  2  2  -  - - CNT - 1 2        2 + R2 -> R2
 5B7  6E 6C AC 60 FF               1 B   OR  ZA 0  6  5  -  - - CNT - 0 NBD NBS  R6 -> R5
 5B8  60 F6 AC 60 FF               1 B   PL  AB 0  H  5  -  - - CNT - 0 NBD NBS  H + R5 -> R5
 5B9  5C 52 07 20 0F               0 TRAPBB     C             - JMP              TRAP IF OVERFLOW
 5BA  4F E9 44 6C 00               1 B*  OR  DZ 0  4  P  RC 14 - CNT - 0 ALU ALU  (R4^14) -> P  
 5BB  28 D4 AC 60 FF               1 NN  MI  AB 1  P  5  -  - - CNT - 0 NBD NBS  P - R5
 5BC  5C 5A 07 20 0F               0 TRAPBB     -C            - JMP              TRAP IF P<R5  
 5BD  6E 70 AC 60 FF               1 B   OR  ZA 0  10 5  -  - - CNT - 0 NBD NBS  R10 -> R5
 5BE  60 F2 AC 60 FF               1 B   PL  AB 0  M  5  -  - - CNT - 0 NBD NBS  M + R5 -> R5
 5BF  5C 52 07 20 0F               0 TRAPBB     C             - JMP              TRAP IF OVERFLOW
 5C0  28 C4 AC 60 FF               1 NN  MI  AB 1  2  5  -  - - CNT - 0 NBD NBS  R2 - R5
 5C1  5C 5A 07 20 0F               0 TRAPBB     -C            - JMP              TRAP IF R2<R5 
 5C2  42 47 4C 60 30               1 B*  PL  ZA 1  3  12 -  - - CNT - 0 MAR ALU  R3 -> MAR, R3+1 -> R12
 5C3  6F E0 AC 60 01               1 B   OR  DZ 0  -  5  -  - - CNT - 0 ALU MD   MD -> R5
 5C4  1F E0 09 74 00               1 Q   XN  DZ 0  -  -  MC 4 - RTN - 1 0        _MSK(0,4) -> Q, RTN
 5C5  00 08 00 20 0F     TRAPBB    0 0          T             - PST              FIX 2911 STACK
 5C6  5C A8 03 20 0F               0 EXITREPL   T             - JSR              RESTORE REGS
 5C7  3E 08 07 20 0F               0 TRAP(4)    T             - JMP              TRAP(4)
 5C8  2F E0 0C 40 FF     EXITBBLT  1 NN  OR  DZ 0  -  -  -  - - CNT S 0 POP NBS  STK -> DUMMY
 5C9  2F E0 0C 40 FF               1 NN  OR  DZ 0  -  -  -  - - CNT S 0 POP NBS  STK -> DUMMY
 5CA  6F E1 8C 40 FF     EXITREPL  1 B   OR  DZ 0  -  S  -  - - CNT S 0 POP NBS  STK -> S
 5CB  6F E1 4C 40 FF               1 B   OR  DZ 0  -  P  -  - - CNT S 0 POP NBS  STK -> P
 5CC  6F E1 6C 40 FF               1 B   OR  DZ 0  -  H  -  - - CNT S 0 POP NBS  STK -> H
 5CD  6F E1 AC 40 FF               1 B   OR  DZ 0  -  G  -  - - CNT S 0 POP NBS  STK -> G
 5CE  6F E1 CC 40 FF               1 B   OR  DZ 0  -  L  -  - - CNT S 0 POP NBS  STK -> L
 5CF  6F E1 2C 40 FF               1 B   OR  DZ 0  -  M  -  - - CNT S 0 POP NBS  STK -> M
 5D0  6F E1 E9 40 FF               1 B   OR  DZ 0  -  T  -  - - RTN S 0 POP NBS  STK -> T
 5D1  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
     *         PROCEDURE BBLT;  (* BLOCK TO BLOCK TRANSFER
     *         ===============                             *)
     *           POP(SBMD);                                  1 : SBMD
     *           INIT;
     *           DBMW := DBMWIDTH;                           3 : DBMW
     *           SY := SRCBLD.Y;                             7 : SY
     *           SBMW := SBMD.W;                             P : SBMW
 5D2  6E 7E 2C 60 FF     BBLT      1 B   OR  ZA 0  T  1  -  - - CNT - 0 NBD NBS  T -> R1
 5D3  6F E1 EC 40 FF               1 B   OR  DZ 0  -  T  -  - - CNT S 0 POP NBS  STK -> T
 5D4  5A 48 03 20 0F               0 #INIT      T             - JSR              INIT
 5D5  2E 74 0C 60 30               1 NN  OR  ZA 0  12 -  -  - - CNT - 0 MAR ALU  R12 -> MAR
 5D6  6E 68 6C 60 FF               1 B   OR  ZA 0  4  3  -  - - CNT - 0 NBD NBS  R4 -> R3
 5D7  6F E0 EC 60 01               1 B   OR  DZ 0  -  7  -  - - CNT - 0 ALU MD   MD -> R7
 5D8  62 42 2C 60 30               1 B   PL  ZA 1  1  1  -  - - CNT - 0 MAR ALU  R1 + 1 -> MAR -> R1
 5D9  6F E1 4C 60 01               1 B   OR  DZ 0  -  12 -  - - CNT - 0 ALU MD   MD -> R12
     *         (* COMPUTE MASKS, INCREMENT-STEPS AND BITPOSITION (FOR ALIGNEMENT) *) 
     *             IF SY > DY
     *             THEN       (* DOWN MOVE, THE TRANSFER STARTS WITH THE BOTTOM
     *                           LINE OF THE BLOCK, ..*     (BMW < 0)            *)
     *               DBMW := -DBMW;
     *               SBMW := -SBMW;
     *               SRCY := SY + 1;                         7 : SRCY
     *               DSTY := DY + 1;                         8 : DSTY
 5DA  28 CF 0C 60 FF               1 NN  MI  AB 1  7  10 -  - - CNT - 0 NBD NBS  R7-R10
 5DB  5E 10 27 20 0F               0 #UP        S             - JMP              GOTO UP IF <0 
 5DC  6A 46 6C 60 FF               1 B   MI  ZA 1  3  3  -  - - CNT - 0 NBD NBS  -R3 -> R3
 5DD  6A 55 4C 60 FF               1 B   MI  ZA 1  12 12 -  - - CNT - 0 NBD NBS  -R12 -> R12
 5DE  62 4E EC 60 FF               1 B   PL  ZA 1  7  7  -  - - CNT - 0 NBD NBS  R7+1 -> R7
 5DF  62 51 0C 60 FF               1 B   PL  ZA 1  10 10 -  - - CNT - 0 NBD NBS  R10+1 -> R10
 5E0  5E 38 07 20 0F               0 #HORIZ     T             - JMP              GOTO HORIZ
     *             ELSE       (* UP MOVE, START WITH THE TOP LINE OF THE BLOCK
     *                                                      (BMW > 0)             *) 
     *               SRCY := SY + DH;                        7 : SRCY
     *               DSTY := DY + DH;                        8 : DSTY
     *             END;
 5E1  60 F2 EC 60 FF     #UP       1 B   PL  AB 0  11 7  -  - - CNT - 0 NBD NBS  R11+R7 -> R7
 5E2  60 F3 0C 60 FF               1 B   PL  AB 0  11 10 -  - - CNT - 0 NBD NBS  R11+R10 -> R10
     $
     *             SBMHEIGHT := SBMD.H + 2
     *             SBMH := SBMHEIGHT - SRCY;                 T: SBMH
     *             DBMH := DBMHEIGHT - DSTY;                 8: DBMH
 5E3  22 42 0C 60 30     #HORIZ    1 NN  PL  ZA 1  1  -  -  - - CNT - 0 MAR ALU  R1 + 1 -> MAR 
 5E4  2E 66 0C 40 0F               1 NN  OR  ZA 0  3  -  -  - - CNT S 0 PSH NBS  R3 -> STK
 5E5  2E 74 0C 40 0F               1 NN  OR  ZA 0  12 -  -  - - CNT S 0 PSH NBS  R12 -> STK
 5E6  6F E1 EC 60 01               1 B   OR  DZ 0  -  T  -  - - CNT - 0 ALU MD   MD -> T
 5E7  62 FF EC 70 02               1 B   PL  DA 0  T  T  -  - - CNT - 1 2        T + 2 -> T
 5E8  64 CF EC 60 FF               1 B   MP  AB 1  7  T  -  - - CNT - 0 NBD NBS  T - R7 -> T
 5E9  68 C5 0C 60 FF               1 B   MI  AB 1  2  10 -  - - CNT - 0 NBD NBS  R2 - R10 -> R10
     *             IF SX < DX
     *             THEN       (* RIGHT MOVE, THE LINES ARE TRANSFERED FROM RIGHT
     *                           TO LEFT (HORIZ = -1)                             *) 
     *               HORIZ := -1;                            3 : HORIZ
     *               MASK3 := COMPL(MSK(0,DX MOD 16));       7 : MASK3
     *               SBIT := SX + DW;                        5 : SBIT
     *               DBIT := DX + DW;                        6 : DBIT
     *               MASK1 := MSK(0,DBIT MOD 16);            G : MASK1
     *               SR := (DBIT-SBIT) MOD 16;
     *               MASK2 := MSK(0,SR);                     L : MASK2
     *               WORDS := DBIT DIV 16 - DX DIV 16;       H : WORDS
 5EA  28 CA CC 60 FF               1 NN  MI  AB 1  5  6  -  - - CNT - 0 NBD NBS  R5-R6
 5EB  5F A8 27 20 0F               0 #LEFT      -S            - JMP              GOTO LEFT IF >=0
 5EC  67 C0 6C 70 01               1 B   MP  DZ 1  -  3  -  - - CNT - 1 1        -1 -> R3
 5ED  2E 6C 0C 60 40               1 NN  OR  ZA 0  6  -  -  - - CNT - 0 SR  ALU  R6 -> SR
 5EE  7F E0 FC 70 00               1 B   XN  DZ 0  -  7  MR - - CNT - 1 0        _MSK(0,SR) -> R7
 5EF  60 F6 AC 60 FF               1 B   PL  AB 0  H  5  -  - - CNT - 0 NBD NBS  H+R5 -> R5
 5F0  60 F6 CC 60 40               1 B   PL  AB 0  H  6  -  - - CNT - 0 SR  ALU  H+R6 -> R6 -> SR
 5F1  6F E1 BC 70 00               1 B   OR  DZ 0  -  G  MR - - CNT - 1 0        MSK(0,SR) -> G
 5F2  28 CC AC 60 40               1 NN  MI  AB 1  6  5  -  - - CNT - 0 SR  ALU  R6-R5 -> SR
 5F3  6F E1 DC 70 00               1 B   OR  DZ 0  -  L  MR - - CNT - 1 0        MSK(0,SR) -> L
 5F4  68 CD 6C 60 FF               1 B   MI  AB 1  6  H  -  - - CNT - 0 NBD NBS  R6 - H -> H  (DX)
 5F5  53 77 64 64 00               1 B*  AN  DQ 0  H  H  RC  4 - CNT - 0 ALU ALU  (H^4) & Q -> H
 5F6  53 6D 44 64 00               1 B*  AN  DQ 0  6 12  RC  4 - CNT - 0 ALU ALU  (R6^4) & Q -> R12
 5F7  68 D5 6C 60 FF               1 B   MI  AB 1 12  H  -  - - CNT - 0 NBD NBS  R12 - H -> H
 5F8  66 6A AC 60 FF               1 B   MP  ZA 0  5  5  -  - - CNT - 0 NBD NBS  DEC(R5)
 5F9  60 78 07 20 0F               0 #ENDIF     T             - JMP              GOTO ENDIF
     $
     *             ELSE    (* LEFT MOVE, THE LEFTMOST WORD OF THE LINES IN THE
     *                        BLOCK ARE TRANSFERED FIRST (HORIZ = 1)            *)
     *               HORIZ := 1;                             3 : HORIZ
     *               SBIT := SX;                             5 : SBIT
     *               DBIT := DX;                             6 : DBIT
     *               MASK3 := MSK(0,(DBIT+DW) MOD 16);       7 : MASK3
     *               IF MASK3 = 0 THEN MASK3 := FFFF;
     *               MASK1 := COMPL(MSK(0,DBIT MOD 16));     G : MASK1
     *               SR := (DBIT-SBIT) MOD 16;
     *               MASK2 := COMPL(MSK(0,SR);               L : MASK2
     *               WORDS := ((DW + (DBIT MOD 16) - 1)
     *                        DIV 16);                       H : WORDS
     *             END;
 5FA  6F E0 6C 70 01     #LEFT     1 B   OR  DZ 0  -  3  -  - - CNT - 1 1        1 -> R3
 5FB  20 ED 6C 60 40               1 NN  PL  AB 0  6  H  -  - - CNT - 0 SR  ALU  R6+H -> SR
 5FC  6F E0 FC 70 00               1 B   OR  DZ 0  -  7  MR - - CNT - 1 0        MSK(0,SR) -> 7
 5FD  5F F9 07 20 0F               0 #L         -Z            - JMP              IF 7 <> 0 
 5FE  66 6E EC 60 FF               1 B   MP  ZA 0  7  7  -  - - CNT - 0 NBD NBS  7 - 1 -> 7
 5FF  2E 6C 0C 60 40     #L        1 NN  OR  ZA 0  6  -  -  - - CNT - 0 SR  ALU  R6 -> SR
 600  7F E1 BC 70 00               1 B   XN  DZ 0  -  G  MR - - CNT - 1 0        MSK(0,SR) -> G
 601  28 CC AC 60 40               1 NN  MI  AB 1  6  5  -  - - CNT - 0 SR  ALU  R6-R5 -> SR
 602  7F E1 DC 70 00               1 B   XN  DZ 0  -  L  MR - - CNT - 1 0        MSK(0,SR ) -> L
 603  72 ED 4C 70 0F               1 B   AN  DA 0  6  12 -  - - CNT - 1 17       17 & R6 -> R12
 604  60 F5 6C 60 FF               1 B   PL  AB 0  12 H  -  - - CNT - 0 NBD NBS  R12 + H -> H
 605  66 77 6C 60 FF               1 B   MP  ZA 0  H  H  -  - - CNT - 0 NBD NBS  H - 1 -> H
 606  53 77 64 64 00               1 B*  AN  DQ 0  H  H  RC  4 - CNT - 0 ALU ALU  (H^4) & Q -> H
     *            SWORD := SBMA * SBIT DIV 16 +               1 : SWORD
     *                     SBMH * SBMWIDTH;
     *            (* SOURCE-WORD-address, WHERE THE TRANSFER STARTS *)
     *            DWORD := DBMA + DBIT DIV 16 +               2 : DWORD
     *                     DBMH * DBMWIDTH;
     *            (* CORRESPONDING DESTINATION-WORD-ADDRESS *)
     *            SBANK := SBMA MOD 4;                        4 : SBANK
     *            DBANK := DBMA MOD 4;                        T : DBANK
 607  2E 62 0C 60 30     #ENDIF    1 NN  OR  ZA 0  1  -  -  - - CNT - 0 MAR ALU  R1 -> MAR
 608  0F E0 0C 60 01               1 Q   OR  DZ 0  -  -  -  - - CNT - 0 ALU MD   MD -> Q
 609  26 62 0C 60 30               1 NN  MP  ZA 0  1  -  -  - - CNT - 0 MAR ALU  R1 - 1 -> MAR
 60A  3C 98 03 20 0F               0 #MUL16     T             - JSR              Q * T -> Q  (-2-)
 60B  6F E1 4C 60 01               1 B   OR  DZ 0  -  P  -  - - CNT - 0 ALU MD   MD -> P
 60C  76 F4 2C 70 03               1 B   NA  DA 0  P  1  -  - - CNT - 1 3        3 & P -> R1
 60D  00 62 0C 60 FF               1 Q   PL  AQ 0  1  -  -  - - CNT - 0 NBD NBS  R1 + Q -> Q
 60E  76 EA AC 70 0F               1 B   NA  DA 0  5  5  -  - - CNT - 1 17       _17 & R5 -> R5
 60F  43 6A 24 64 00               1 B*  PL  DQ 0  5  1  RC  4 - CNT - 0 ALU ALU  (R5^4) + Q -> R1
 610  6E 71 EC 60 FF               1 B   OR  ZA 0  10 T  -  - - CNT - 0 NBD NBS  R10 -> T
 611  0E 68 0C 60 FF               1 Q   OR  ZA 0  4  -  -  - - CNT - 0 NBD NBS  R4 -> Q
 612  3C 98 03 20 0F               0 #MUL16     T             - JSR              Q * T -> Q  (-2-)
 613  72 F9 EC 70 03               1 B   AN  DA 0  S  T  -  - - CNT - 1 3        3 & S -> T
 614  72 F4 8C 70 03               1 B   AN  DA 0  P  4  -  - - CNT - 1 3        3 & P -> R4
 615  76 F9 8C 70 03               1 B   NA  DA 0  S  S  -  - - CNT - 1 3        _3 & S -> S
 616  00 78 0C 60 FF               1 Q   PL  AQ 0  S  -  -  - - CNT - 0 NBD NBS  S + Q -> Q
 617  76 EC CC 70 0F               1 B   NA  DA 0  6  6  -  - - CNT - 1 17       _17 & R6 -> R6
 618  43 6C 44 64 00               1 B*  PL  DQ 0  6  2  RC  4 - CNT - 0 ALU ALU  (R6^4)+Q -> R2
     $
     *             WHILE DH > 0 DO  (* LOOP FOR THE LINES OF THE BLOCK *)
     *               DEC(DH);
     *               W := WORDS;                             8 : W
     *               SA := SWORD;  (* SRC-ADDRESS *)         P : SA
     *               DA := DWORD;  (* DEST-ADDRESS *)        S : DA
     *               STK1 := M[DA];
 619  66 73 2C 60 FF     #WHILE.DH 1 B   MP  ZA 0  11 11 -  - - CNT - 0 NBD NBS  R11-1 -> R11
 61A  68 D0 47 20 0F               0 #ENDBBLT   F             - JMP              JMP END IF < 0
 61B  2E 7E 0C 60 D0               1 NN  OR  ZA 0  T  -  -  - - CNT - 0 BNK ALU  T -> BNK
 61C  6E 65 8C 60 30               1 B   OR  ZA 0  2  S  -  - - CNT - 0 MAR ALU  R2 -> S -> MAR
 61D  6E 77 0C 60 FF               1 B   OR  ZA 0  H  10 -  - - CNT - 0 NBD NBS  H -> R10
 61E  6E 63 4C 60 FF               1 B   OR  ZA 0  1  12 -  - - CNT - 0 NBD NBS  R1 -> R12
 61F  2F E0 0C 40 01               1 NN  OR  DZ 0  -  -  -  - - CNT S 0 ALU MD   MD -> STK
 620  31 60 0C 40 0F               1 NN  AN  ZQ 0  -  -  -  - - CNT S 0 PSH NBS  0 -> STK
     *               IF (MASK1 OR MASK2) <> MASK2
     *               THEN STK0 := ROT(M[SA],SR) AND NOT MASK2;
     *                 SA := SA + HORIZ;
     *               ELSE STK0 := 0 END;
 621  0C FD AC 60 FF               1 Q   OR  AB 0  L  G  -  - - CNT - 0 NBD NBS  L OR G -> Q
 622  28 5C 0C 60 FF               1 NN  MI  AQ 1  L  -  -  - - CNT - 0 NBD NBS  L - Q
 623  62 91 07 20 0F               0 #ELSE      Z             - JMP              IF = 0
 624  2E 68 0C 60 D0               1 NN  OR  ZA 0  4  -  -  - - CNT - 0 BNK ALU  R4 -> BNK
 625  4F F4 CC 40 30               1 B*  OR  DZ 0  12 6  -  - - CNT S 0 MAR ALU  R12 -> MAR,
     *                                                       STK -> R6 (DUMMY)
 626  60 E7 4C 60 FF               1 B   PL  AB 0  3  12 -  - - CNT - 0 NBD NBS  R3+R12 -> R12 
 627  1E 7C 0C 60 FF               1 Q   XN  ZA 0  L  -  -  - - CNT - 0 NBD NBS  _L -> Q
 628  33 60 14 40 01               1 NN  AN  DQ 0  -  -  RR - - CNT S 0 ALU MD   (MD^SR) & Q -> STK
     *               R6 := ROT(M[SA],SR);                    6 : R6
     *               R5 := (STK0 OR (MASK2 AND R6)) AND MASK1; 5 : R5
 629  2E 68 0C 60 D0     #ELSE     1 NN  OR  ZA 0  4  -  -  - - CNT - 0 BNK ALU  R4 -> BNK
 62A  2E 74 0C 60 30               1 NN  OR  ZA 0  12 -  -  - - CNT - 0 MAR ALU  R12 -> MAR
 62B  6F E0 D4 60 01               1 B   OR  DZ 0  -  6  RR - - CNT - 0 ALU MD   (MD^SR) -> R6 
 62C  10 FC CC 60 FF               1 Q   AN  AB 0  L  6  -  - - CNT - 0 NBD NBS  L&R6 -> Q
 62D  6F 60 AC 40 FF               1 B   OR  DQ 0  -  5  -  - - CNT S 0 POP NBS  STK OR Q -> R5
 62E  70 FA AC 60 FF               1 B   AN  AB 0  G  5  -  - - CNT - 0 NBD NBS  G AND R5 -> R5
     *               CASE MODE OF
 62F  26 C0 0C 70 02               1 NN  MP  DA 1  0  -  -  - - CNT - 1 2        R0-2
 630  65 F1 07 20 0F               0 #INVERT    Z             - JMP              JMP INVERT IF =0
 631  67 28 47 20 0F               0 #ERASE     -F            - JMP              JMP ERASE IF >0
 632  2E 60 0C 60 FF               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 NBD NBS  R0
 633  64 C9 07 20 0F               0 #PAINT     -Z            - JMP              JMP PAINT IF #0
     $
     *               0: (* REPLACE, DEST := SOURCE *)
     *                 R5 := R5 OR (STK1 AND NOT MASK1);
     *                 WHILE W > 0 DO  (* LOOP OVER THE WORDS OF A LINE *) 
     *                   M[DA] :=R5;
     *                   DA := DA + HORIZ;
 634  1E 7A 0C 60 FF               1 Q   XN  ZA 0  G  -  -  - - CNT - 0 NBD NBS  _G -> Q
 635  13 60 0C 40 FF               1 Q   AN  DQ 0  -  -  -  - - CNT S 0 POP NBS  STK & Q -> Q
 636  6C 6A AC 60 FF               1 B   OR  AQ 0  5  5  -  - - CNT - 0 NBD NBS  R5 OR Q -> R5 
 637  2E 70 0C 60 FF               1 NN  OR  ZA 0  10 -  -  - - CNT - 0 NBD NBS  R10 
 638  64 51 07 20 0F               0 #ENDLP0    Z             - JMP              JMP ENDLP0 IF =0
 639  2E 6A 0C 60 10     #REPLACE  1 NN  OR  ZA 0  5  -  -  - - CNT - 0 MD  ALU  R5 -> MD
 63A  2E 7E 0C 60 D0               1 NN  OR  ZA 0  T  -  -  - - CNT - 0 BNK ALU  T -> BNK
 63B  2E 78 0C 60 30               1 NN  OR  ZA 0  S  -  -  - - CNT - 0 MAR ALU  S -> MAR
 63C  60 E7 8C 60 FF               1 B   PL  AB 0  3  S  -  - - CNT - 0 NBD NBS  R3+S -> S
     *                   SA := SA + HORIZ;
     *                   STK0 := R6 AND NOT MASK2;
     *                   R6 := ROT(M[SA],SR);
     *                   R5 := STK0 OR (R6 AND MASK2); 
     *                   W := W - 1;
     *                 END; (* WHILE *)
 63D  2E 68 0C 60 D0               1 NN  OR  ZA 0  4  -  -  - - CNT - 0 BNK ALU  R4 -> BNK
 63E  60 E7 4C 60 30               1 B   PL  AB 0  3  12 -  - - CNT - 0 MAR ALU  R3+R12 -> R12 -> MAR
 63F  34 FC CC 40 0F               1 NN  NA  AB 0  L  6  -  - - CNT S 0 PSH NBS  _L & R6 -> STK
 640  6F E0 D4 60 01               1 B   OR  DZ 0  -  6  RR - - CNT - 0 ALU MD   (MD^SR) -> R6 
 641  10 ED CC 60 FF               1 Q   AN  AB 0  6  L  -  - - CNT - 0 NBD NBS  R6 & L -> Q
 642  6F 60 AC 40 FF               1 B   OR  DQ 0  -  5  -  - - CNT S 0 POP NBS  STK OR Q -> R5
 643  66 71 0C 60 FF               1 B   MP  ZA 0  10 10 -  - - CNT - 0 NBD NBS  R10-1 -> R10
 644  63 99 07 20 0F               0 #REPLACE   -Z            - JMP              GOTO REPLACE IF #0
     *                 M[DA] := (MASK3 AND R5) OR (M[DA] AND NOT MASK3) /
 645  70 EE AC 60 FF     #ENDLP0   1 B   AN  AB 0  7  5  -  - - CNT - 0 NBD NBS  7 & R5 -> R5
 646  2E 7E 0C 60 D0               1 NN  OR  ZA 0  T  -  -  - - CNT - 0 BNK ALU  T -> BNK
 647  2E 78 0C 60 30               1 NN  OR  ZA 0  S  -  -  - - CNT - 0 MAR ALU  S -> MAR
 648  1E 6E 0C 60 FF               1 Q   XN  ZA 0  7  -  -  - - CNT - 0 NBD NBS  _R7 -> Q
 649  73 60 CC 60 01               1 B   AN  DQ 0  -  6  -  - - CNT - 0 ALU MD   MD & Q -> R6
 64A  2C EA CC 60 10               1 NN  OR  AB 0  5  6  -  - - CNT - 0 MD  ALU  R5 OR R6 -> MD
 64B  68 68 07 20 0F               0 #ENDCASE   T             - JMP              GOTO ENDCASE
     $
     *               1: (* PAINT, DEST := DEST OR SOURCE *)
     *                 WHILE W > 0 DO  (* LOOP OVER THE WORDS OF A LINE *) 
     *                   M[DA] := STK1 OR R5;
     *                   DA := DA + HORIZ;
     *                   STK1 := M[DA];
 64C  2E 70 0C 60 FF     #PAINT    1 NN  OR  ZA 0  10 -  -  - - CNT - 0 NBD NBS  R10 
 64D  65 C1 07 20 0F               0 #ENDLP1    Z             - JMP              GOTO ENDLP1 IF =0
 64E  2E EA 0C 40 10     #WHILE1   1 NN  OR  DA 0  5  -  -  - - CNT S 0 MD  ALU  STK OR R5 -> MD
 64F  2E 7E 0C 60 D0               1 NN  OR  ZA 0  T  -  -  - - CNT - 0 BNK ALU  T -> BNK
 650  2E 78 0C 60 30               1 NN  OR  ZA 0  S  -  -  - - CNT - 0 MAR ALU  S -> MAR
 651  2E 7E 0C 60 D0               1 NN  OR  ZA 0  T  -  -  - - CNT - 0 BNK ALU  T -> BNK
 652  60 E7 8C 60 30               1 B   PL  AB 0  3  S  -  - - CNT - 0 MAR ALU  R3+S -> S -> MAR
 653  2F E0 0C 40 01               1 NN  OR  DZ 0  -  -  -  - - CNT S 0 ALU MD   MD -> STK
     *                   STK0 := NOT MASK2 AND R6;
     *                   SA := SA + HORIZ;
     *                   R6 := ROT(M[SA],SR);
     *                   R5 := STK0 OR (R6 AND MASK2); 
     *                   W := W - 1;
     *                 END; (* WHILE *)
 654  2E 68 0C 60 D0               1 NN  OR  ZA 0  4  -  -  - - CNT - 0 BNK ALU  R4 -> BNK
 655  60 E7 4C 60 30               1 B   PL  AB 0  3  12 -  - - CNT - 0 MAR ALU  R3+R12 -> R12 -> MAR
 656  34 FC CC 40 0F               1 NN  NA  AB 0  L  6  -  - - CNT S 0 PSH NBS  _L & R6 -> STK
 657  6F E0 D4 60 01               1 B   OR  DZ 0  -  6  RR - - CNT - 0 ALU MD   (MD^SR) -> R6 
 658  10 ED CC 60 FF               1 Q   AN  AB 0  6  L  -  - - CNT - 0 NBD NBS  R6 & L -> Q
 659  6F 60 AC 40 FF               1 B   OR  DQ 0  -  5  -  - - CNT S 0 POP NBS  STK OR Q -> R5
 65A  66 71 0C 60 FF               1 B   MP  ZA 0  10 10 -  - - CNT - 0 NBD NBS  R10-1 -> R10
 65B  64 E9 07 20 0F               0 #WHILE1   -Z             - JMP              GOTO WHILE1 IF #0
     *                 M[DA] := STK1 OR (R5 AND MASK3)  /
 65C  70 EE AC 60 FF     #ENDLP1   1 B   AN  AB 0  7  5  -  - - CNT - 0 NBD NBS  R7 & R5 -> R5 
 65D  2E EA 0C 40 10               1 NN  OR  DA 0  5  -  -  - - CNT S 0 MD  ALU  STK OR R5 -> MD
 65E  68 68 07 20 0F               0 #ENDCASE   T             - JMP              GOTO ENDCASE
     $
     *               2: (* INVERT, DEST := DEST XOR SOURCE *)
     *                 WHILE W > 0 DO (* LOOP OVER THE WORDS OF A LINE *)
     *                   M[DA] := STK1 XOR R5;
     *                   DA := DA + HORIZ;
     *                   STK1 := M[DA];
 65F  2E 70 0C 60 FF     #INVERT   1 NN  OR  ZA 0  10 -  -  - - CNT - 0 NBD NBS  R10 
 660  66 F1 07 20 0F               0 #ENDLP2    Z             - JMP              GOTO ENDLP2 IF =0
 661  3A EA 0C 40 10     #WHILE2   1 NN  XR  DA 0  5  -  -  - - CNT S 0 MD  ALU  STK XOR R5 -> MD
 662  2E 7E 0C 60 D0               1 NN  OR  ZA 0  T  -  -  - - CNT - 0 BNK ALU  T -> BNK
 663  2E 78 0C 60 30               1 NN  OR  ZA 0  S  -  -  - - CNT - 0 MAR ALU  S -> MAR
 664  2E 7E 0C 60 D0               1 NN  OR  ZA 0  T  -  -  - - CNT - 0 BNK ALU  T -> BNK
 665  60 E7 8C 60 30               1 B   PL  AB 0  3  S  -  - - CNT - 0 MAR ALU  R3+S -> S -> MAR
 666  2F E0 0C 40 01               1 NN  OR  DZ 0  -  -  -  - - CNT S 0 ALU MD   MD -> STK
     *                   SA := SA + HORIZ;
     *                   STK0 := NOT MASK2 AND R6;
     *                   R6 := ROT(M[SA],SR);
     *                   R5 := STK0 OR (R6 AND MASK2); 
     *                   W := W - 1;
     *                 END; (* WHILE *)
 667  2E 68 0C 60 D0               1 NN  OR  ZA 0  4  -  -  - - CNT - 0 BNK ALU  R4 -> BNK
 668  60 E7 4C 60 30               1 B   PL  AB 0  3  12 -  - - CNT - 0 MAR ALU  R3+R12 -> R12 -> MAR
 669  34 FC CC 40 0F               1 NN  NA  AB 0  L  6  -  - - CNT S 0 PSH NBS  _L & R6 -> STK
 66A  6F E0 D4 60 01               1 B   OR  DZ 0  -  6  RR - - CNT - 0 ALU MD   (MD^SR) -> R6 
 66B  10 ED CC 60 FF               1 Q   AN  AB 0  6  L  -  - - CNT - 0 NBD NBS  R6 & L -> Q
 66C  6F 60 AC 40 FF               1 B   OR  DQ 0  -  5  -  - - CNT S 0 POP NBS  STK OR Q -> R5
 66D  66 71 0C 60 FF               1 B   MP  ZA 0  10 10 -  - - CNT - 0 NBD NBS  R10-1 -> R10
 66E  66 19 07 20 0F               0 #WHILE2   -Z             - JMP              GOTO WHILE2 IF #0
     *                 M[DA] := STK1 XOR (R5 AND MASK3)  /
 66F  70 EE AC 60 FF     #ENDLP2   1 B   AN AB 0  7  5   -  - - CNT - 0 NBD NBS  R7 & R5 -> R5 
 670  3A EA 0C 40 10               1 NN  XR DA 0  5  -   -  - - CNT S 0 MD  ALU  STK XOR R5 -> MD
 671  68 68 07 20 0F               0 #ENDCASE   T             - JMP              GOTO ENDCASE
     $
     *               3: (* ERASE, DEST := NOT SOURCE AND DEST *) 
     *                 WHILE W > 0 DO  (* LOOP OVER THE WORDS OF A LINE *) 
     *                   M[DA] := NOT R5 AND STK1;
     *                   DA := DA + HORIZ;
     *                   STK1 := M[DA];
 672  2E 70 0C 60 FF     #ERASE    1 NN  OR  ZA 0  10 -  -  - - CNT - 0 NBD NBS  R10 
 673  68 31 07 20 0F               0 #ENDLP3    Z             - JMP              GOTO ENDLP3 IF =0
 674  0F E0 0C 40 FF     #WHILE3   1 Q   OR  DZ 0  -  -  -  - - CNT S 0 POP NBS  STK -> Q
 675  34 6A 0C 60 10               1 NN  NA  AQ 0  5  -  -  - - CNT - 0 MD  ALU  _R5 & Q -> MD 
 676  2E 7E 0C 60 D0               1 NN  OR  ZA 0  T  -  -  - - CNT - 0 BNK ALU  T -> BNK
 677  2E 78 0C 60 30               1 NN  OR  ZA 0  S  -  -  - - CNT - 0 MAR ALU  S -> MAR
 678  2E 7E 0C 60 D0               1 NN  OR  ZA 0  T  -  -  - - CNT - 0 BNK ALU  T -> BNK
 679  60 E7 8C 60 30               1 B   PL  AB 0  3  S  -  - - CNT - 0 MAR ALU  R3+S -> S -> MAR
 67A  2F E0 0C 40 01               1 NN  OR  DZ 0  -  -  -  - - CNT S 0 ALU MD   MD -> STK
     *                   SA := SA + HORIZ;
     *                   STK0 := NOT MASK2 AND R6;
     *                   R6 := ROT(M[SA],SR);
     *                   R5 := STK0 OR (R6 AND MASK2); 
     *                   W := W - 1;
     *                 END; (* WHILE *)
 67B  2E 68 0C 60 D0               1 NN  OR  ZA 0  4  -  -  - - CNT - 0 BNK ALU  R4 -> BNK
 67C  60 E7 4C 60 30               1 B   PL  AB 0  3  12 -  - - CNT - 0 MAR ALU  R3+R12 -> R12 -> MAR
 67D  34 FC CC 40 0F               1 NN  NA  AB 0  L  6  -  - - CNT S 0 PSH NBS  _L & R6 -> STK
 67E  6F E0 D4 60 01               1 B   OR  DZ 0  -  6  RR - - CNT - 0 ALU MD   (MD^SR) -> R6 
 67F  10 ED CC 60 FF               1 Q   AN  AB 0  6  L  -  - - CNT - 0 NBD NBS  R6 & L -> Q
 680  6F 60 AC 40 FF               1 B   OR  DQ 0  -  5  -  - - CNT S 0 POP NBS  STK OR Q -> R5
 681  66 71 0C 60 FF               1 B   MP  ZA 0  10 10 -  - - CNT - 0 NBD NBS  R10 - 1 -> R10
 682  67 49 07 20 0F               0 #WHILE3   -Z             - JMP              GOTO WHILE3 IF #0
     *                 M[DA] := NOT (MASK3 AND R5) AND STK1
 683  70 EE AC 60 FF     #ENDLP3   1 B   AN  AB 0  7  5  -  - - CNT - 0 NBD NBS  R7 & R5 -> R5 
 684  0F E0 0C 40 FF               1 Q   OR  DZ 0  -  -  -  - - CNT S 0 POP NBS  STK -> Q
 685  34 6A 0C 60 10               1 NN  NA  AQ 0  5  -  -  - - CNT - 0 MD  ALU  _R5 & Q -> MD 
     *               END; (* CASE *);
     *               SWORD := SWORD + SBMW;  
     *               DWORD := DWORD + DBMW;  
     *             END; (* WHILE DH > 0 *)
 686  2E 7E 0C 60 D0     #ENDCASE  1 NN  OR  ZA 0  T  -  -  - - CNT - 0 BNK ALU  T -> BNK
 687  2E 78 0C 60 30               1 NN  OR  ZA 0  S  -  -  - - CNT - 0 MAR ALU  S -> MAR
 688  6F E0 AC 40 FF               1 B   OR  DZ 0  -  5  -  - - CNT S 0 POP NBS  STK -> R5
 689  6F E1 4C 40 FF               1 B   OR  DZ 0  -  12 -  - - CNT S 0 POP NBS  STK -> R12
 68A  40 F4 4C 40 0F               1 B*  PL  AB 0  12 2  -  - - CNT S 0 PSH NBS  R12 -> STK, R12+R2 -> R2
 68B  40 EA 2C 40 0F               1 B*  PL  AB 0  5  1  -  - - CNT S 0 PSH NBS  R5 -> STK, R5 + R1 -> R1
 68C  61 98 07 20 0F               0 #WHILE.DH  T             - JMP              END BIG WHILE 
 68D  5C 88 03 20 0F     #ENDBBLT  0 EXITBBLT   T             - JSR              RESTORE REGS
 68E  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     *           POP(S); 
     *           POP(P); 
     *           POP(H); 
     *           POP(G); 
     *           POP(L); 
     *           POP(M); 
     *           POP(T); 
     *         END BBLT; 
     *
     *
     *
     $
     *         PROCEDURE REPL;   (* PATTERN TO BLOCK TRANSFER
     *         ===============                                *) 
     *           INIT;
     *           MASK3 := MSK(0,(DX+DW) MOD 16);             T : MASK3
     *                                            TEMPORARY: 7
     *           SR := DX MOD 16;                            3 : DX MOD 16(10)
     *           MASK1 := COMPL(MSK(0,SR));                  G : MASK1
 68F  5A 48 03 20 0F     REPL      0 #INIT      T             - JSR              INIT
 690  2E 6A 0C 60 FF               1 NN  OR  ZA 0  5  -  -  - - CNT - 0 NBD NBS  R5
 691  7F 21 07 20 0F               0 #ENDREPL   Z             - JMP              IF LENGTH = 0 
 692  20 ED 6C 60 40               1 NN  PL  AB 0  6  H  -  - - CNT - 0 SR  ALU  R6 + H -> SR
 693  6F E0 FC 70 00               1 B   OR  DZ 0  -  7  MR - - CNT - 1 0        MSK(0,SR) -> 7
 694  72 EC 6C 70 0F               1 B   AN  DA 0  6  3  -  - - CNT - 1 17       R6 & 17 -> R3 
 695  2E 66 0C 60 40               1 NN  OR  ZA 0  3  -  -  - - CNT - 0 SR  ALU  R3 -> SR
 696  7F E1 BC 70 00               1 B   XN  DZ 0  -  G  MR - - CNT - 1 0        _MSK(0,SR) -> G
     *             WORDS := (DW + (DX MOD 16)) DIV 16;       H : WORDS
     *             DWORD := BMA + DX DIV 16 +                L : DWORD
     *                      (BMHEIGHT-DH-DY) * BMWIDTH;
     *             ENDWORD := DWORD + (DH-1)*BMWIDTH;        9 : ENDWORD
     *             CW := SOURCE.COUNT*BMWIDTH;               7 : CW
     *             DBANK := BMA MOD 4;                       2 : DBANK
 697  60 E7 6C 60 FF               1 B   PL  AB 0  3  H  -  - - CNT - 0 NBD NBS  R3 + H -> H        ^
 698  53 77 64 64 00               1 B*  AN  DQ 0  H  H  RC  4 - CNT - 0 ALU ALU  (H^4) & Q -> H
 699  53 6C 24 64 00               1 B*  AN  DQ 0  6  1  RC  4 - CNT - 0 ALU ALU  (R6^4) & Q -> R1
 69A  16 F8 0C 70 03               1 Q   NA  DA 0  S  -  -  - - CNT - 1 3        _3 & S -> Q
 69B  60 62 2C 60 FF               1 B   PL  AQ 0  1  1  -  - - CNT - 0 NBD NBS  Q + R1 -> R1  
 69C  68 C5 0C 60 FF               1 B   MI  AB 1  2  10 -  - - CNT - 0 NBD NBS  R2 - R10 -> R10
 69D  08 D1 2C 60 FF               1 Q   MI  AB 1  10 11 -  - - CNT - 0 NBD NBS  R10 - R11 -> Q
 69E  6E 69 EC 60 FF               1 B   OR  ZA 0  4  T  -  - - CNT - 0 NBD NBS  R4 -> T
 69F  3C 98 03 20 0F               0 #MUL16     T             - JSR              Q * T -> Q  (-2-)
 6A0  60 63 CC 60 FF               1 B   PL  AQ 0  1  L  -  - - CNT - 0 NBD NBS  R1 + Q -> L             
 6A1  06 72 0C 60 FF               1 Q   MP  ZA 0  11 -  -  - - CNT - 0 NBD NBS  R11 - 1 -> Q
 6A2  3C 98 03 20 0F               0 #MUL16     T             - JSR              Q * T -> Q  (-2-)
 6A3  60 7D 2C 60 FF               1 B   PL  AQ 0  L  11 -  - - CNT - 0 NBD NBS  L + Q -> R11  
 6A4  0E 6A 0C 60 FF               1 Q   OR  ZA 0  5  -  -  - - CNT - 0 NBD NBS  R5 -> Q
 6A5  3C 98 03 20 0F               0 #MUL16     T             - JSR              Q * T -> Q  (-2-)
 6A6  6E 6F EC 60 FF               1 B   OR  ZA 0  7  T  -  - - CNT - 0 NBD NBS  R7 -> T
 6A7  6D 60 EC 60 FF               1 B   OR  ZQ 0  -  7  -  - - CNT - 0 NBD NBS  Q -> R7
 6A8  72 F8 4C 70 03               1 B   AN  DA 0  S  2  -  - - CNT - 1 3        3 & S -> R2
     $
     *             FOR I := 1 TO LENGTH DO (* LOOP OVER THE WORDS OF THE PATTERN *)
     *               BITPAT := ROT(SOURCE.DOTS[I],SR);       3 : BITPAT
     *               DWD := DWORD;                           1 : DWD
 6A9  42 55 4C 60 30     #FORI     1 B*  PL  ZA 1  12 12 -  - - CNT - 0 MAR ALU  R12 -> MAR, R12+1 -> R12
 6AA  6F E0 74 60 01               1 B   OR  DZ 0  -  3  RR - - CNT - 0 ALU MD   (MD^SR) -> R3 
 6AB  6E 7C 2C 60 FF               1 B   OR  ZA 0  L  1  -  - - CNT - 0 NBD NBS  L -> R1
     *               WHILE DWD <= ENDWORD DO (* LOOP OVER THE LINES OF THE DEST BLOCK
     *                                    CORRESPONDING TO THE ACTUAL PATTERN WORD *)
     *                 DA := DWD;                            S : DA
     *                 W := WORDS;                           8 : W
     *                 R6 := BITPAT AND MASK1;               6 : R6
     *                                                       Q : M[DA]
 6AC  28 E3 2C 60 FF     #WHILE    1 NN  MI  AB 0  1  11 -  - - CNT - 0 NBD NBS  R1 - R11 - 1
 6AD  6F 62 07 20 0F               0 #ENDWHILE  C             - JMP              GOTO ENDWHILE IF > 0
 6AE  2E 64 0C 60 D0               1 NN  OR  ZA 0  2  -  -  - - CNT - 0 BNK ALU  R2 -> BNK
 6AF  6E 63 8C 60 30               1 B   OR  ZA 0  1  S  -  - - CNT - 0 MAR ALU  R1 -> S -> MAR
     *                                                       H -> R10
 6B0  6E 66 CC 60 FF               1 B   OR  ZA 0  3  6  -  - - CNT - 0 NBD NBS  R3 -> R6
 6B1  70 FA CC 60 FF               1 B   AN  AB 0  G  6  -  - - CNT - 0 NBD NBS  G & R6 -> R6
 6B2  0F E0 0C 60 01               1 Q   OR  DZ 0  -  -  -  - - CNT - 0 ALU MD   MD -> Q
     *                 CASE MODE OF
 6B3  26 C0 0C 70 02               1 NN  MP  DA 1  0  -  -  - - CNT - 1 2        R0 - 2
 6B4  6D 71 07 20 0F               0 #INVERT2   Z             - JMP              GOTO INVERT2 IF =0
 6B5  6E 58 47 20 0F               0 #ERASE2    -F            - JMP              GOTO ERASE2 IF >0
 6B6  2E 60 0C 60 FF               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 NBD NBS  R0
 6B7  6C 99 07 20 0F               0 #PAINT2    -Z            - JMP              GOTO PAINT2 IF #0
     *                 0: (* REPLACE, DEST := PATTERN *)
     *                   R6 := R6 OR (NOT MASK1 AND M[DA]);
     *                   WHILE W > 0 DO  (* LOOP OVER THE WORDS OF A LINE *)
     *                     M[DA] := R6;  (* OF THE DEST BLOCK             *)
     *                     DA := DA + 1;
     *                     R6 := BITPAT;
     *                     W := W - 1;
     *                   END;
 6B8  14 7A 0C 60 FF     #REPLACE2 1 Q   NA  AQ 0  G  -  -  - - CNT - 0 NBD NBS  _G & Q -> Q
 6B9  6C 6C CC 60 FF               1 B   OR  AQ 0  6  6  -  - - CNT - 0 NBD NBS  R6 OR Q -> R6 
 6BA  6E 77 0C 60 FF               1 B   OR  ZA 0  H  10 -  - - CNT - 0 NBD NBS  H -> R10
 6BB  6C 21 47 20 0F               0 #ENDWHL4   FZ            - JMP              GOTO ENDWHL4 IF <=0
 6BC  2E 6C 0C 60 10     #WHILE4   1 NN  OR  ZA 0  6  -  -  - - CNT - 0 MD  ALU  R6 -> MD
 6BD  2E 64 0C 60 D0               1 NN  OR  ZA 0  2  -  -  - - CNT - 0 BNK ALU  R2 -> BNK
 6BE  42 59 8C 60 30               1 B*  PL  ZA 1  S  S  -  - - CNT - 0 MAR ALU  S -> MAR, S+1 -> S
 6BF  6E 66 CC 60 FF               1 B   OR  ZA 0  3  6  -  - - CNT - 0 NBD NBS  R3 -> R6
 6C0  66 71 0C 60 FF               1 B   MP  ZA 0  10 10 -  - - CNT - 0 NBD NBS  R10 - 1 -> R10
 6C1  6B C9 07 20 0F               0 #WHILE4    -Z            - JMP              GOTO WHILE4 IF #0
     *                   Q := MASK3 AND R6;
     *                   R6 := M[DA] & NOT MASK3;
     *                   M[DA] := R6 OR Q  / 
 6C2  10 FE CC 60 FF     #ENDWHL4  1 Q   AN  AB 0  T  6  -  - - CNT - 0 NBD NBS  T & R6 -> Q
 6C3  2E 64 0C 60 D0               1 NN  OR  ZA 0  2  -  -  - - CNT - 0 BNK ALU  R2 -> BNK
 6C4  2E 78 0C 60 30               1 NN  OR  ZA 0  S  -  -  - - CNT - 0 MAR ALU  S -> MAR
 6C5  7E 7E CC 60 FF               1 B   XN  ZA 0  T  6  -  - - CNT - 0 NBD NBS  _0 XOR T -> R6
 6C6  72 EC CC 60 01               1 B   AN  DA 0  6  6  -  - - CNT - 0 ALU MD   MD & R6 -> R6 
 6C7  2C 6C 0C 60 10               1 NN  OR  AQ 0  6  -  -  - - CNT - 0 MD  ALU  R6 OR Q -> MD 
 6C8  6F 28 07 20 0F               0 #ENDCAS    T             - JMP              GOTO ENDCASE
     *                   1: (* PAINT, DEST := DEST OR PATTERN *) 
     *                     WHILE W > 0 DO
     *                       M[DA] := R6 OR M[DA];
     *                       DA := DA + 1;
     *                       R6 := BITPAT;                   Q : M[DA]
     *                       W := W - 1;
     *                     END;
 6C9  6E 77 0C 60 FF     #PAINT2   1 B   OR  ZA 0  H  10 -  - - CNT - 0 NBD NBS  H -> R10
 6CA  6D 41 47 20 0F               0 #ENDWHL5   FZ            - JMP              GOTO ENDWHL5 IF <=0
 6CB  2C 6C 0C 60 10     #WHILE5   1 NN  OR  AQ 0  6  -  -  - - CNT - 0 MD  ALU  R6 OR Q -> MD 
 6CC  2E 64 0C 60 D0               1 NN  OR  ZA 0  2  -  -  - - CNT - 0 BNK ALU  R2 -> BNK
 6CD  42 59 8C 60 30               1 B*  PL  ZA 1  S  S  -  - - CNT - 0 MAR ALU  S -> MAR, S+1 -> S
 6CE  2E 64 0C 60 D0               1 NN  OR  ZA 0  2  -  -  - - CNT - 0 BNK ALU  R2 -> BNK
 6CF  2E 78 0C 60 30               1 NN  OR  ZA 0  S  -  -  - - CNT - 0 MAR ALU  S -> MAR
 6D0  6E 66 CC 60 FF               1 B   OR  ZA 0  3  6  -  - - CNT - 0 NBD NBS  R3 -> R6
 6D1  0F E0 0C 60 01               1 Q   OR  DZ 0  -  -  -  - - CNT - 0 ALU MD   MD -> Q
 6D2  66 71 0C 60 FF               1 B   MP  ZA 0  10 10 -  - - CNT - 0 NBD NBS  R10 - 1 -> R10
 6D3  6C B9 07 20 0F               0 #WHILE5    -Z            - JMP              GOTO WHILE5 IF #0
     *                     R6 := MASK3 AND R6;
     *                     M[DA] := R6 OR M[DA]  /
 6D4  70 FE CC 60 FF     #ENDWHL5  1 B   AN  AB 0  T  6  -  - - CNT - 0 NBD NBS  T & R6 -> R6
 6D5  2C 6C 0C 60 10               1 NN  OR  AQ 0  6  -  -  - - CNT - 0 MD  ALU  R6 OR Q -> MD 
 6D6  6F 28 07 20 0F               0 #ENDCAS    T             - JMP              GOTO ENDCASE
     *                   2: (* INVERT, DEST := DEST XOR PATTERN *)
     *                     WHILE W > 0 DO
     *                       M[DA] := R6 XOR M[DA];
     *                       DA := DA + 1;
     *                       R6 := BITPAT;                   Q : M[DA]
     *                       W := W - 1;
     *                     END;
 6D7  6E 77 0C 60 FF     #INVERT2  1 B   OR  ZA 0  H  10 -  - - CNT - 0 NBD NBS  H -> R10
 6D8  6E 21 47 20 0F               0 #ENDWHL6   FZ            - JMP              GOTO ENDWHL5 IF <=0
 6D9  38 6C 0C 60 10     #WHILE6   1 NN  XR  AQ 0  6  -  -  - - CNT - 0 MD  ALU  R6 XOR Q -> MD
 6DA  2E 64 0C 60 D0               1 NN  OR  ZA 0  2  -  -  - - CNT - 0 BNK ALU  R2 -> BNK
 6DB  42 59 8C 60 30               1 B*  PL  ZA 1  S  S  -  - - CNT - 0 MAR ALU  S -> MAR, S+1 -> S
 6DC  2E 64 0C 60 D0               1 NN  OR  ZA 0  2  -  -  - - CNT - 0 BNK ALU  R2 -> BNK
 6DD  2E 78 0C 60 30               1 NN  OR  ZA 0  S  -  -  - - CNT - 0 MAR ALU  S -> MAR
 6DE  6E 66 CC 60 FF               1 B   OR  ZA 0  3  6  -  - - CNT - 0 NBD NBS  R3 -> R6
 6DF  0F E0 0C 60 01               1 Q   OR  DZ 0  -  -  -  - - CNT - 0 ALU MD   MD -> Q
 6E0  66 71 0C 60 FF               1 B   MP  ZA 0  10 10 -  - - CNT - 0 NBD NBS  R10 - 1 -> R10
 6E1  6D 99 07 20 0F               0 #WHILE6    -Z            - JMP              GOTO WHILE6 IF #0
     *                     R6 := MASK3 AND R6;
     *                     M[DA] := R6 XOR M[DA]  /
 6E2  70 FE CC 60 FF     #ENDWHL6  1 B   AN AB 0  T  6  -   - - CNT - 0 NBD NBS  T & R6 -> R6
 6E3  38 6C 0C 60 10               1 NN  XR AQ 0  6  -  -  - -  CNT - 0 MD  ALU  R6 XOR Q -> MD
 6E4  6F 28 07 20 0F               0 #ENDCAS    T             - JMP              GOTO ENDCASE
     $
     *                   3: (* ERASE, DEST := NOT PATTERN AND DEST *)
     *                     WHILE W > 0 DO
     *                       M[DA] := NOT R6 AND M[DA];
     *                       DA := DA + 1;
     *                       R6 := BITPAT;                   Q : M[DA]
     *                       W := W - 1;
     *                     END;
 6E5  6E 77 0C 60 FF     #ERASE2   1 B   OR  ZA 0  H  10 -  - - CNT - 0 NBD NBS  H -> R10
 6E6  6F 01 47 20 0F               0 #ENDWHL7   FZ            - JMP              GOTO ENDWHL7 IF <=0
 6E7  34 6C 0C 60 10     #WHILE7   1 NN  NA  AQ 0  6  -  -  - - CNT - 0 MD  ALU  _R6 & Q -> MD 
 6E8  2E 64 0C 60 D0               1 NN  OR  ZA 0  2  -  -  - - CNT - 0 BNK ALU  R2 -> BNK
 6E9  42 59 8C 60 30               1 B*  PL  ZA 1  S  S  -  - - CNT - 0 MAR ALU  S -> MAR, S+1 -> S
 6EA  2E 64 0C 60 D0               1 NN  OR  ZA 0  2  -  -  - - CNT - 0 BNK ALU  R2 -> BNK
 6EB  2E 78 0C 60 30               1 NN  OR  ZA 0  S  -  -  - - CNT - 0 MAR ALU  S -> MAR
 6EC  6E 66 CC 60 FF               1 B   OR  ZA 0  3  6  -  - - CNT - 0 NBD NBS  R3 -> R6
 6ED  0F E0 0C 60 01               1 Q   OR  DZ 0  -  -  -  - - CNT - 0 ALU MD   MD -> Q
 6EE  66 71 0C 60 FF               1 B   MP  ZA 0  10 10 -  - - CNT - 0 NBD NBS  R10 - 1 -> R10
 6EF  6E 79 07 20 0F               0 #WHILE7    -Z            - JMP              GOTO WHILE7 IF #0
     *                     R6 := MASK3 AND R6;
     *                     M[DA] := NOT R6 AND M[DA]
 6F0  70 FE CC 60 FF     #ENDWHL7  1 B   AN  AB 0  T  6  -  - - CNT - 0 NBD NBS  T & R6 -> R6
 6F1  34 6C 0C 60 10               1 NN  NA  AQ 0  6  -  -  - - CNT - 0 MD  ALU  _R6 & Q -> MD 
     *                   END; (* CASE *)
     *                   DWD := CW + DWD;
 6F2  2E 64 0C 60 D0     #ENDCAS   1 NN  OR  ZA 0  2  -  -  - - CNT - 0 BNK ALU  R2 -> BNK
 6F3  2E 78 0C 60 30               1 NN  OR  ZA 0  S  -  -  - - CNT - 0 MAR ALU  S -> MAR
 6F4  60 EE 2C 60 FF               1 B   PL  AB 0  7  1  -  - - CNT - 0 NBD NBS  R7 + R1 -> R1
 6F5  6A CA 07 20 0F               0 #WHILE     -C            - JMP              GOTO WHILE
     *                 END; (* WHILE DWD < ENDWORD *)
     *                 DWORD := DWORD + BMWIDTH;
     *               END; (* FOR I ..* *)
 6F6  60 E9 CC 60 FF     #ENDWHILE 1 B   PL  AB 0  4  L  -  - - CNT - 0 NBD NBS  R4 + L -> L
 6F7  7F 22 07 20 0F               0 #ENDREPL   C             - JMP              GOTO ENDREPL IF OVERFLOW
 6F8  66 6A AC 60 FF               1 B   MP  ZA 0  5  5  -  - - CNT - 0 NBD NBS  R5 - 1 -> R5
 6F9  6A 99 07 20 0F               0 #FORI      -Z            - JMP              GOTO FORI IF #0 
 6FA  7F 28 07 20 0F               0 #ENDREPL   T             - JMP              GOTO ENDREPL
     $
     *         FLOATING POINT ROUTINES    (NW 5.11.80) 
     *
     *         +---+--------+---------------------------+
     *         I S I  EXPO  I        MANTISSA           I
     *         +---+--------+---------------------------+
     *           0   1 - 8            9 - 31 
     *
     *         SIGN:  0 = POSITIVE, 1 = NEGATIVE
     *         EXPO:  WEIGHT = 200B
     *         MANT:  LEADING ONE BIT IS OMITTED
 6FB  6F E0 44 71 01     FSUB      1 B   OR  DZ 0  -  2  RC  1 - CNT - 1     1    1^1 -> R2
 6FC  6F E8 07 20 0F               0 #A1        T             - JMP              GOTO A1
 6FD  72 64 4C 60 FF     FADD      1 B   AN  ZA 0  2  2  -  - - CNT - 0 NBD NBS  0 -> R2       
 6FE  6F E0 2C 40 FF     #A1       1 B   OR  DZ 0  -  1  -  - - CNT S 0 POP NBS  STK -> R1    YH
 6FF  2C FE 2C 60 FF               1 NN  OR  AB 0  T  1  -  - - CNT - 0 NBD NBS  T OR R1
 700  74 21 07 20 0F               0 #Y0        Z             - JMP              IF =0 GOTO Y0 
 701  78 E4 2C 60 FF               1 B   XR  AB 0  2  1  -  - - CNT - 0 NBD NBS  R2 XOR R1 -> R1
 702  7B E0 AC 40 FF               1 B   XR  DZ 0  -  5  -  - - CNT S 0 POP NBS  STK -> R5    XL
 703  6F E0 0C 40 FF               1 B   OR  DZ 0  -  0  -  - - CNT S 0 POP NBS  STK -> R0    XH
 704  2C E0 AC 60 FF               1 NN  OR  AB 0  0  5  -  - - CNT - 0 NBD NBS  R0 OR R5
 705  74 01 07 20 0F               0 #X0        Z             - JMP              IF =0 GOTO X0 
 706  72 E0 44 79 FF               1 B   AN  DA 0  0  2  RC 11 - CNT - 1     377  (377^9)&R0 -> R2 XE
 707  72 E2 64 79 FF               1 B   AN  DA 0  1  3  RC 11 - CNT - 1     377  (377^9)&R1 -> R3 YE
 708  72 E0 8C 70 7F               1 B   AN  DA 0  0  4  -  - - CNT - 1     177  177&R0 -> R4 XH
 709  72 E2 CC 70 7F               1 B   AN  DA 0  1  6  -  - - CNT - 1     177  177&R1 -> R6 YH
 70A  6E E8 84 79 01               1 B   OR  DA 0  4  4  RC 11 - CNT - 1     1    (1^9) OR R4 -> R4
 70B  6E EC C4 79 01               1 B   OR  DA 0  6  6  RC 11 - CNT - 1     1    (1^9) OR R6 -> R6
     *         XE,XH,XL IN R2,R4,R5
     *         YE,YH,YL IN R3,R6,T 
 70C  64 C6 4C 60 FF               1 B   MP  AB 1  3  2  -  - - CNT - 0 NBD NBS  R2-R3 -> R2  ZE
 70D  71 48 47 20 0F               0 #A3       -F             - JMP              IF <0 THEN (XE<YE)
 70E  0E 6A 0C 60 FF               1 Q   OR  ZA 0  5  -  -  - - CNT - 0 NBD NBS    R5 -> Q
 70F  82 68 8C 60 FF     #A2       1 BQR PL  ZA 0  4  4  -  - - CNT - 0 NBD NBS    REP (R4,Q)/2  X
 710  62 E4 44 79 01               1 B   PL  DA 0  2  2  RC 11 - CNT - 1     1        R2+(1^9) -> R2
 711  70 F9 07 20 0F               0 #A2       -Z             - JMP                UNTIL R2=0  
 712  6D 60 AC 60 FF               1 B   OR  ZQ 0  -  5  -  - - CNT - 0 NBD NBS    Q -> R5
 713  71 B8 07 20 0F               0 #A5        T             - JMP
 714  71 B1 07 20 0F     #A3       0 #A5        Z             - JMP              ELSIF >0 THEN (XE>XY)
 715  60 E4 6C 60 FF               1 B   PL  AB 0  2  3  -  - - CNT - 0 NBD NBS    R3+R2 -> R3 
 716  0E 7E 0C 60 FF               1 Q   OR  ZA 0  T  -  -  - - CNT - 0 NBD NBS    T -> Q
 717  82 6C CC 60 FF     #A4       1 BQR PL  ZA 0  6  6  -  - - CNT - 0 NBD NBS    REP (R6,Q)/2  Y
 718  66 C4 44 79 01               1 B   MP  DA 1  2  2  RC 11 - CNT - 1     1        R2-(1^9) -> R2
 719  71 79 07 20 0F               0 #A4       -Z             - JMP                UNTIL R2=0  
 71A  6D 61 EC 60 FF               1 B   OR  ZQ 0  -  T  -  - - CNT - 0 NBD NBS    Q -> T
     *                                                       END 
 71B  2E 60 0C 60 FF     #A5       1 NN  OR  ZA 0  0  -  -  - - CNT - 0 NBD NBS  R0   SIGN(X)
 71C  71 F8 47 20 0F               0 #A6       -F             - JMP              IF <0 THEN
 71D  6A 4A AC 60 FF               1 B   MI  ZA 1  5  5  -  - - CNT - 0 NBD NBS    -R5 -> R5
 71E  6A 08 8C 60 FF               1 B   MI  ZA C  4  4  -  - - CNT - 0 NBD NBS    -R4 -> R4
     *                                                       END 
 71F  2E 62 0C 60 FF     #A6       1 NN  OR  ZA 0  1  -  -  - - CNT - 0 NBD NBS  R1   SIGN(Y)
 720  72 48 47 20 0F               0 #A7       -F             - JMP              IF <0 THEN
 721  08 CB EC 60 FF               1 Q   MI  AB 1  5  T  -  - - CNT - 0 NBD NBS    R5-T -> Q
 722  68 88 CC 60 FF               1 B   MI  AB C  4  6  -  - - CNT - 0 NBD NBS    R4-R6 -> R6 
 723  72 68 07 20 0F               0 #A8        T             - JMP              ELSE
 724  00 EB EC 60 FF     #A7       1 Q   PL  AB 0  5  T  -  - - CNT - 0 NBD NBS    R5+T -> Q
 725  60 88 CC 60 FF               1 B   PL  AB C  4  6  -  - - CNT - 0 NBD NBS    R4+R6 -> R6 
     *                                                       END 
     *         ZE,ZH,ZL IN R3,R6,Q 
 726  2C 6C 0C 60 FF     #A8       1 NN  OR  AQ 0  6  -  -  - - CNT - 0 NBD NBS  R6 OR Q
 727  74 41 07 20 0F               0 #ZERO      Z             - JMP              IF Z=0 GOTO ZERO
 728  72 EC 04 71 01               1 B   AN  DA 0  6  0  RC  1 - CNT - 1     1    (1^1)&R6 -> R0  SIGN
 729  72 C8 47 20 0F               0 #A9       -F             - JMP              IF Z<0 THEN
 72A  09 40 0C 60 FF               1 Q   MI  ZQ 1  -  -  -  - - CNT - 0 NBD NBS    -Q -> Q
 72B  6A 0C CC 60 FF               1 B   MI  ZA C  6  6  -  - - CNT - 0 NBD NBS    -R6 -> R6
     *                                                       END 
 72C  26 CC 04 78 01     #A9       1 NN  MP  DA 1  6  -  RC 10 - CNT - 1     1    R6 - 400  NORMALIZE
 72D  73 30 47 20 0F               0 #A10       F             - JMP              IF >=0 THEN
 72E  82 6C CC 60 FF               1 BQR PL  ZA 0  6  6  -  - - CNT - 0 NBD NBS    (R6,Q)/2
 72F  6D 61 EC 60 FF               1 B   OR  ZQ 0  -  T  -  - - CNT - 0 NBD NBS    Q -> T
 730  62 E6 64 79 01               1 B   PL  DA 0  3  3  RC 11 - CNT - 1     1      R3+(1^9) -> R3  ZE
 731  73 C8 47 20 0F               0 #A13      -F             - JMP                IF >=0 OVERFLOW
 732  3E 48 07 20 0F               0 TRAP(6)    T             - JMP              ELSE
 733  6D 61 EC 60 FF     #A10      1 B   OR  ZQ 0  -  T  -  - - CNT - 0 NBD NBS    Q -> T
 734  22 6C 0C 60 FF               1 NN  PL  ZA 0  6  -  -  - - CNT - 0 NBD NBS    R6
 735  73 A0 17 20 0F               0 #A12       H             - JMP                IF -H THEN
 736  66 C6 64 79 01     #A11      1 B   MP  DA 1  3  3  RC 11 - CNT - 1     1        REP R3-(1^9) -> R3
 737  60 FF EC 60 FF               1 B   PL  AB 0  T  T  -  - - CNT - 0 NBD NBS        2*T -> T
 738  60 8C CC 60 FF               1 B   PL  AB C  6  6  -  - - CNT - 0 NBD NBS        2*R6 -> R6
 739  73 68 17 20 0F               0 #A11      -H             - JMP                  UNTIL H
     *                                                         END
 73A  2E 66 0C 60 FF     #A12      1 NN  OR  ZA 0  3  -  -  - - CNT - 0 NBD NBS    R3         ZE
 73B  74 40 47 20 0F               0 #ZERO      F             - JMP                IF <0 GOTO ZERO
     *                                                       END 
 73C  72 EC CC 70 7F     #A13      1 B   AN  DA 0  6  6  -  - - CNT - 1     177  177&R6 -> R6
 73D  6C E6 CC 60 FF               1 B   OR  AB 0  3  6  -  - - CNT - 0 NBD NBS  R3 OR R6 -> R6
 73E  2C E0 CC 40 0F               1 NN  OR  AB 0  0  6  -  - - CNT S 0 PSH NBS  R0 OR R6 -> STK  ZH
 73F  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 740  2E 62 0C 40 0F     #X0       1 NN  OR  ZA 0  1  -  -  - - CNT S 0 PSH NBS  R1 -> STK     
 741  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 742  6F E1 EC 40 FF     #Y0       1 B   OR  DZ 0  -  T  -  - - CNT S 0 POP NBS  STK -> T
 743  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 744  72 61 EC 40 0F     #ZERO     1 B   AN  ZA 0  0  T  -  - - CNT S 0 PSH NBS  0 -> T -> STK 
 745  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 746  6E 7E EC 60 FF     FMUL      1 B   OR  ZA 0  T  7  -  - - CNT - 0 NBD NBS  T   -> R7    YL
 747  6F E0 CC 40 FF               1 B   OR  DZ 0  -  6  -  - - CNT S 0 POP NBS  STK -> R6    YH
 748  6F E0 AC 40 FF               1 B   OR  DZ 0  -  5  -  - - CNT S 0 POP NBS  STK -> R5    XL
 749  6F E0 8C 40 FF               1 B   OR  DZ 0  -  4  -  - - CNT S 0 POP NBS  STK -> R4    XH
 74A  2C E8 AC 60 FF               1 NN  OR  AB 0  4  5  -  - - CNT - 0 NBD NBS  R4 OR R5     X
 74B  74 41 07 20 0F               0 #ZERO      Z             - JMP              IF X=0 GOTO ZERO
 74C  2C EC EC 60 FF               1 NN  OR  AB 0  6  7  -  - - CNT - 0 NBD NBS  R6 OR R7     Y
 74D  74 41 07 20 0F               0 #ZERO      Z             - JMP              IF Y=0 GOTO ZERO
 74E  38 E8 CC 40 0F               1 NN  XR  AB 0  4  6  -  - - CNT S 0 PSH NBS  R4 XOR R6 -> STK
 74F  72 E8 44 79 FF               1 B   AN  DA 0  4  2  RC 11 - CNT - 1     377  (377^9)&R4 -> R2  XE
 750  72 EC 64 79 FF               1 B   AN  DA 0  6  3  RC 11 - CNT - 1     377  (377^9)&R6 -> R3  YE
 751  72 E8 8C 70 7F               1 B   AN  DA 0  4  4  -  - - CNT - 1     177  177&R4 -> R4
 752  72 EC CC 70 7F               1 B   AN  DA 0  6  6  -  - - CNT - 1     177  177&R6 -> R6
 753  6E E8 84 79 01               1 B   OR  DA 0  4  4  RC 11 - CNT - 1     1    (1^9) OR R4 -> R4
 754  6E EC C4 79 01               1 B   OR  DA 0  6  6  RC 11 - CNT - 1     1    (1^9) OR R6 -> R6
     *         XE,XH,XL IN R2,R4,R5
     *         YE,YH,YL IN R3,R6,R7    SIGN IN STK
 755  60 E4 6C 60 FF               1 B   PL  AB 0  2  3  -  - - CNT - 0 NBD NBS  R2+R3 -> R3  ZE
 756  0E 6A 0C 60 FF               1 Q   OR  ZA 0  5  -  -  - - CNT - 0 NBD NBS  R5 -> Q
 757  3C 98 03 20 0F               0 #MUL16     T             - JSR              XL*YL  Q*T -> (R2,Q)
 758  6E 64 2C 60 FF               1 B   OR  ZA 0  2  1  -  - - CNT - 0 NBD NBS  R2 -> R1     ZL
 759  0E 6A 0C 60 FF               1 Q   OR  ZA 0  5  -  -  - - CNT - 0 NBD NBS  R5 -> Q
 75A  6E 6D EC 60 FF               1 B   OR  ZA 0  6  T  -  - - CNT - 0 NBD NBS  R6 -> T
 75B  3C 98 03 20 0F               0 #MUL16     T             - JSR              XL*YH
 75C  60 62 2C 60 FF               1 B   PL  AQ 0  1  1  -  - - CNT - 0 NBD NBS  R1+Q -> R1   ZL
 75D  62 04 0C 60 FF               1 B   PL  ZA C  2  0  -  - - CNT - 0 NBD NBS  R2+C -> R0   ZH
 75E  0E 68 0C 60 FF               1 Q   OR  ZA 0  4  -  -  - - CNT - 0 NBD NBS  R4 -> Q
 75F  6E 6F EC 60 FF               1 B   OR  ZA 0  7  T  -  - - CNT - 0 NBD NBS  R7 -> T
 760  3C 98 03 20 0F               0 #MUL16     T             - JSR              XH*YL         
 761  60 62 2C 60 FF               1 B   PL  AQ 0  1  1  -  - - CNT - 0 NBD NBS  R1+Q -> R1   ZL
 762  60 84 0C 60 FF               1 B   PL  AB C  2  0  -  - - CNT - 0 NBD NBS  R2+R0 -> R0  ZH
 763  0E 68 0C 60 FF               1 Q   OR  ZA 0  4  -  -  - - CNT - 0 NBD NBS  R4 -> Q
 764  6E 6D EC 60 FF               1 B   OR  ZA 0  6  T  -  - - CNT - 0 NBD NBS  R6 -> T
 765  3C 98 03 20 0F               0 #MUL16     T             - JSR              XH*YH
 766  60 60 0C 60 FF               1 B   PL  AQ 0  0  0  -  - - CNT - 0 NBD NBS  R0+Q -> R0   ZH
 767  76 B0 47 20 0F               0 #M1        F             - JMP              IF -F THEN
 768  60 E2 2C 60 FF               1 B   PL  AB 0  1  1  -  - - CNT - 0 NBD NBS    2*R1 -> R1 NORMALIZE
 769  60 80 0C 60 FF               1 B   PL  AB C  0  0  -  - - CNT - 0 NBD NBS    2*R0 -> R0
 76A  66 C6 64 79 01               1 B   MP  DA 1  3  3  RC 11 - CNT - 1     1      R3 - (1^9) -> R3
     *                                                       END 
 76B  6F E0 EC 40 FF     #M1       1 B   OR  DZ 0  -  7  -  - - CNT S 0 POP NBS  STK -> R7   SIGN
 76C  66 C6 64 72 01               1 B   MP  DA 1  3  3  RC  2 - CNT - 1     1    R3 - (200^9) -> R3
 76D  74 4A 07 20 0F               0 #ZERO     -C             - JMP              IF <0 GOTO ZERO
 76E  3E 40 47 20 0F               0 TRAP(6)    F             - JMP              IF >= 400 OVERFLOW
 76F  4F E0 04 68 00               1 B*  OR  DZ 0  0  0  RC 10 - CNT - 0 ALU ALU  R0^8 -> R0
 770  4F E2 24 68 00               1 B*  OR  DZ 0  1  1  RC 10 - CNT - 0 ALU ALU  R1^8 -> R1
 771  72 E0 44 78 FF               1 B   AN  DA 0  0  2  RC 10 - CNT - 1     377  (377^8)&R0 -> R2
 772  72 E0 0C 70 7F               1 B   AN  DA 0  0  0  -  - - CNT - 1     177  177&R0 -> R0
 773  72 E3 EC 70 FF               1 B   AN  DA 0  1  T  -  - - CNT - 1     377  377&R1 -> T
 774  6C E5 EC 60 FF               1 B   OR  AB 0  2  T  -  - - CNT - 0 NBD NBS  R2 OR T -> T    ZL
 775  6C E6 0C 60 FF               1 B   OR  AB 0  3  0  -  - - CNT - 0 NBD NBS  R3 OR R0 -> R0
 776  72 EE E4 71 01               1 B   AN  DA 0  7  7  RC  1 - CNT - 1     1    (1^1)&R7 -> R7
 777  2C EE 0C 40 0F               1 NN  OR  AB 0  7  0  -  - - CNT S 0 PSH NBS  R7 OR R0 -> STK ZH
 778  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 779  6F E0 CC 40 FF     FDIV      1 B   OR  DZ 0  -  6  -  - - CNT S 0 POP NBS  STK -> R6    YH
 77A  6F E0 AC 40 FF               1 B   OR  DZ 0  -  5  -  - - CNT S 0 POP NBS  STK -> R5    XL
 77B  6F E0 8C 40 FF               1 B   OR  DZ 0  -  4  -  - - CNT S 0 POP NBS  STK -> R4    XH
 77C  2C ED EC 60 FF               1 NN  OR  AB 0  6  T  -  - - CNT - 0 NBD NBS  R6 OR T
 77D  3E 41 07 20 0F               0 TRAP(6)    Z             - JMP              IF Y=0 ZERO DIVIDE
 77E  2C E8 AC 60 FF               1 NN  OR  AB 0  4  5  -  - - CNT - 0 NBD NBS  R4 OR R5
 77F  74 41 07 20 0F               0 #ZERO      Z             - JMP              IF X=0 GOTO ZERO
 780  38 E8 CC 40 0F               1 NN  XR  AB 0  4  6  -  - - CNT S 0 PSH NBS  R4 XOR R6 -> STK
 781  72 E8 44 79 FF               1 B   AN  DA 0  4  2  RC 11 - CNT - 1     377  (377^9)&R4 -> R2  XE
 782  72 EC 64 79 FF               1 B   AN  DA 0  6  3  RC 11 - CNT - 1     377  (377^9)&R6 -> R3  YE
 783  72 E8 8C 70 7F               1 B   AN  DA 0  4  4  -  - - CNT - 1     177  177&R4 -> R4
 784  72 EC CC 70 7F               1 B   AN  DA 0  6  6  -  - - CNT - 1     177  177&R6 -> R6
 785  6E E8 84 79 01               1 B   OR  DA 0  4  4  RC 11 - CNT - 1     1    (1^9) OR R4 -> R4
 786  6E EC C4 79 01               1 B   OR  DA 0  6  6  RC 11 - CNT - 1     1    (1^9) OR R6 -> R6
     *         XE,XH,XL IN R2,R4,R5
     *         YE,YH,YL IN R3,R6,T 
 787  68 C4 6C 60 FF               1 B   MI  AB 1  2  3  -  - - CNT - 0 NBD NBS  R2-R3 -> R3  QE
 788  64 DE AC 60 FF               1 B   MP  AB 1  T  5  -  - - CNT - 0 NBD NBS  R5-T -> R5  (R-Y -> R)  
 789  64 8C 8C 60 FF               1 B   MP  AB C  6  4  -  - - CNT - 0 NBD NBS    FIRST DIV STEP
 78A  78 E0 27 20 0F               0 #D1        S             - JMP              IF R >= Y THEN
 78B  6F E0 2C 70 01               1 B   OR  DZ 0  -  1  -  - - CNT - 1     1      1 -> R1   (1 -> Q)
 78C  62 E6 64 79 01               1 B   PL  DA 0  3  3  RC 11 - CNT - 1     1      R3+(1^9) -> R3
 78D  79 18 07 20 0F               0 #D2        T             - JMP              ELSE
 78E  72 62 2C 60 FF     #D1       1 B   AN  ZA 0  1  1  -  - - CNT - 0 NBD NBS    0 -> R1  (0 -> Q)
 78F  60 FE AC 60 FF               1 B   PL  AB 0  T  5  -  - - CNT - 0 NBD NBS    R5+T -> R5 (R+Y -> R) 
 790  60 8C 8C 60 FF               1 B   PL  AB C  6  4  -  - - CNT - 0 NBD NBS    R4+R6 -> R4 
     *                                                       END 
 791  6A C2 4C 70 08     #D2       1 B   MI  DA 1  1  2  -  - - CNT - 1     10   8-R1 -> R2 (8-Q -> N)
 792  7A 08 03 20 0F               0 #XDIV      T             - JSR              N DIV STEPS FOR QH
 793  6E 62 0C 60 FF               1 B   OR  ZA 0  1  0  -  - - CNT - 0 NBD NBS  R1 -> R0   SAVE QH
 794  72 62 2C 60 FF               1 B   AN  ZA 0  1  1  -  - - CNT - 0 NBD NBS  0 -> R1
 795  7A 08 03 20 0F               0 #XDIV      T             - JSR              16 DIV STEPS FOR QL
 796  6F E0 4C 40 FF               1 B   OR  DZ 0  -  2  -  - - CNT S 0 POP NBS  STK -> R2  SIGN
 797  76 E0 04 79 01               1 B   NA  DA 0  0  0  RC 11 - CNT - 1     1   -(1^9)&R0 -> R0
 798  62 E6 64 72 01               1 B   PL  DA 0  3  3  RC  2 - CNT - 1     1    R3 + (200^9) -> R3 QE
 799  74 40 27 20 0F               0 #ZERO      S             - JMP              IF QE<0 GOTO ZERO
 79A  3E 40 47 20 0F               0 TRAP(6)    F             - JMP              OVERFLOW
 79B  6C E6 0C 60 FF               1 B   OR  AB 0  3  0  -  - - CNT - 0 NBD NBS  R3 OR R0 -> R0
 79C  72 E4 44 71 01               1 B   AN  DA 0  2  2  RC  1 - CNT - 1     1    (1^1)&R2 -> R2
 79D  2C E0 4C 40 0F               1 NN  OR  AB 0  0  2  -  - - CNT S 0 PSH NBS  R0 OR R2 -> STK  QH
 79E  6E 63 EC 60 FF               1 B   OR  ZA 0  1  T  -  - - CNT - 0 NBD NBS  R1 -> T          QL
 79F  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     *         R2 DIVISION STEPS                                 
     *         (R IN (R4,Q),  Q IN R1, COUNT N IN R2)        REPEAT
 7A0  60 EA AC 60 FF     #XDIV     1 B   PL  AB 0  5  5  -  - - CNT - 0 NBD NBS    2*R5 -> R5 (2*R -> R) 
 7A1  60 88 8C 60 FF               1 B   PL  AB C  4  4  -  - - CNT - 0 NBD NBS    2*R4 -> R4
 7A2  60 E2 2C 60 FF               1 B   PL  AB 0  1  1  -  - - CNT - 0 NBD NBS    2*R1 -> R1 (2*Q -> Q) 
 7A3  64 DE AC 60 FF               1 B   MP  AB 1  T  5  -  - - CNT - 0 NBD NBS    R5-T -> R5 (R-Y -> R) 
 7A4  64 8C 8C 60 FF               1 B   MP  AB C  6  4  -  - - CNT - 0 NBD NBS    R4-R6 -> R4 
 7A5  7A 80 27 20 0F               0 #XD1       S             - JMP                IF R >= Y THEN
 7A6  62 42 2C 60 FF               1 B   PL  ZA 1  1  1  -  - - CNT - 0 NBD NBS      R1+1     (Q+1 -> Q) 
 7A7  7A A8 07 20 0F               0 #XD2       T             - JMP                ELSE
 7A8  60 FE AC 60 FF     #XD1      1 B   PL  AB 0  T  5  -  - - CNT - 0 NBD NBS      R5+T ->  (R+Y -> R) 
 7A9  60 8C 8C 60 FF               1 B   PL  AB C  6  4  -  - - CNT - 0 NBD NBS      R4+R6 -> R4
     *                                                         END
 7AA  66 64 4C 60 FF     #XD2      1 B   MP  ZA 0  2  2  -  - - CNT - 0 NBD NBS    R2-1 -> R2
 7AB  7A 09 07 20 0F               0 #XDIV     -Z             - JMP              UNTIL R2=0
 7AC  6F E0 49 70 10               1 B   OR  DZ 0  -  2  -  - - RTN - 1     20   16 -> R2
 7AD  6E 7E EC 60 FF     FCMP      1 B   OR  ZA 0  T  7  -  - - CNT - 0 NBD NBS  T -> R7      YL
 7AE  6F E0 CC 40 FF               1 B   OR  DZ 0  -  6  -  - - CNT S 0 POP NBS  STK -> R6    YH
 7AF  6F E0 AC 40 FF               1 B   OR  DZ 0  -  5  -  - - CNT S 0 POP NBS  STK -> R5    XL
 7B0  6F E0 8C 40 FF               1 B   OR  DZ 0  -  4  -  - - CNT S 0 POP NBS  STK -> R4    XH
 7B1  72 7F EC 60 FF               1 B   AN  ZA 0  T  T  -  - - CNT - 0 NBD NBS  0 -> T
 7B2  38 E8 CC 60 FF               1 NN  XR  AB 0  4  6  -  - - CNT - 0 NBD NBS  R4 XOR R6
 7B3  7B 78 47 20 0F               0 #C1       -F             - JMP              JUMP IF SIGNS EQUAL
 7B4  2E 68 0C 60 FF               1 NN  OR  ZA 0  4  -  -  - - CNT - 0 NBD NBS  R4
 7B5  7C 10 47 20 0F               0 #LSS       F             - JMP
 7B6  7C 58 07 20 0F               0 #GTR       T             - JMP
 7B7  68 CA EC 60 FF     #C1       1 B   MI  AB 1  5  7  -  - - CNT - 0 NBD NBS  R5-R7 -> R7
 7B8  68 88 CC 60 FF               1 B   MI  AB C  4  6  -  - - CNT - 0 NBD NBS  R4-R6 -> R6
 7B9  7B F0 47 20 0F               0 #C2        F             - JMP              JUMP IF X < Y 
 7BA  2C EC EC 60 FF               1 NN  OR  AB 0  6  7  -  - - CNT - 0 NBD NBS  R6 OR R7
 7BB  7C 31 07 20 0F               0 #EQL       Z             - JMP
 7BC  2E 68 0C 60 FF               1 NN  OR  ZA 0  4  -  -  - - CNT - 0 NBD NBS  R4
 7BD  7C 10 47 20 0F               0 #LSS       F             - JMP
 7BE  7C 58 07 20 0F               0 #GTR       T             - JMP
 7BF  2E 68 0C 60 FF     #C2       1 NN  OR  ZA 0  4  -  -  - - CNT - 0 NBD NBS  R4
 7C0  7C 50 47 20 0F               0 #GTR       F             - JMP
 7C1  2A 7E 0C 40 0F     #LSS      1 NN  MI  ZA 0  T  -  -  - - CNT S 0 PSH NBS  -1 -> STK
 7C2  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 7C3  32 7E 0C 40 0F     #EQL      1 NN  AN  ZA 0  T  -  -  - - CNT S 0 PSH NBS  0 -> STK
 7C4  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 7C5  22 5E 0C 40 0F     #GTR      1 NN  PL  ZA 1  T  -  -  - - CNT S 0 PSH NBS  1 -> STK
 7C6  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     $
 7C7  6F E0 04 62 04     FFCT      1 B   OR  DZ 0  -  0  RC  2 - CNT - 0 ALU IR   IR^2 -> R0
 7C8  7D A0 47 20 0F               0 F1X        F             - JMP        
 7C9  60 E0 0C 60 FF               1 B   PL  AB 0  0  0  -  - - CNT - 0 NBD NBS  R0*2 -> R0
 7CA  7C C0 47 20 0F               0 FLOAT1     F             - JMP
     *
     *         PROCEDURE FLOAT(C: CARDINAL): REAL
     *         PROCEDURE FLOAT1(D: DOUBLE): REAL
     *
 7CB  32 60 0C 40 0F     FLOAT     1 NN  AN  ZA 0  0  -  -  - - CNT S 0 PSH NBS  0 -> STK
 7CC  6F E0 4C 40 FF     FLOAT1    1 B   OR  DZ 0  -  2  -  - - CNT S 0 POP NBS  STK -> R2  XH
 7CD  2C FE 4C 60 FF               1 NN  OR  AB 0  T  2  -  - - CNT - 0 NBD NBS  T OR R2
 7CE  7D 81 07 20 0F               0 #F3        Z             - JMP              IF # 0 THEN
 7CF  63 E0 24 79 98               1 B   PL  DZ 0  -  1  RC 11 - CNT - 1     230    (230^9) -> R1
 7D0  2E 64 0C 60 FF               1 NN  OR  ZA 0  2  -  -  - - CNT - 0 NBD NBS    R2
 7D1  7D 60 17 20 0F               0 #F2        H             - JMP                IF -H THEN
 7D2  66 C2 24 79 01     #F1       1 B   MP  DA 1  1  1  RC 11 - CNT - 1     1        REPEAT R1-(1^9)
 7D3  60 FF EC 60 FF               1 B   PL  AB 0  T  T  -  - - CNT - 0 NBD NBS        2*T -> T
 7D4  60 84 4C 60 FF               1 B   PL  AB C  2  2  -  - - CNT - 0 NBD NBS        2*R2 -> R2
 7D5  7D 28 17 20 0F               0 #F1       -H             - JMP                  UNTIL H
     *                                                         END
 7D6  72 E4 4C 70 7F     #F2       1 B   AN  DA 0  2  2  -  - - CNT - 1     177    177 & R2 -> R2
 7D7  6C E2 4C 60 FF               1 B   OR  AB 0  1  2  -  - - CNT - 0 NBD NBS    R1 OR R2 -> R2
     *                                                       END
 7D8  2E 64 0C 40 0F     #F3       1 NN  OR  ZA 0  2  -  -  - - CNT S 0 PSH NBS  R2 -> STK  XH
 7D9  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     *
     *
 7DA  60 E0 0C 60 FF     F1X       1 B   PL  AB 0  0  0  -  - - CNT - 0 NBD NBS  R0*2 -> R0
 7DB  7D D0 47 20 0F               0 FIX1       F             - JMP
     $
     *         PROCEDURE FIX(X: REAL): CARDINAL
     *         PROCEDURE FIX1(X:REAL; BIAS: CARDINAL): DOUBLE
     *
 7DC  4F FF E4 59 98     FIX       1 B*  OR  DZ 0  T  T  RC 11 - CNT S 1     230  T -> STK, 230^9 -> T
 7DD  0F E0 0C 40 FF     FIX1      1 Q   OR  DZ 0  -  -  -  - - CNT S 0 POP NBS  STK -> Q    XL
 7DE  6F E0 4C 40 FF               1 B   OR  DZ 0  -  2  -  - - CNT S 0 POP NBS  STK -> R2   XH
 7DF  2C 64 0C 60 FF               1 NN  OR  AQ 0  2  -  -  - - CNT - 0 NBD NBS  R2 OR 0
 7E0  7E A1 07 20 0F               0 #FX2       Z             - JMP              IF #0 THEN
 7E1  72 E4 24 79 FF               1 B   AN  DA 0  2  1  RC 11 - CNT - 1     377    (377^9)&R2 -> R1
 7E2  72 E4 4C 70 7F               1 B   AN  DA 0  2  2  -  - - CNT - 1     177    177 & R2 ->R2
 7E3  6E E4 44 79 01               1 B   OR  DA 0  2  2  RC 11 - CNT - 1     1      (1^9) OR R2 -> R2
 7E4  64 C3 EC 60 FF               1 B   MP  AB 1  1  T  -  - - CNT - 0 NBD NBS    T - R1 -> T
 7E5  3E 40 47 20 0F               0 TRAP(6)    F             - JMP                OUT OF RANGE
 7E6  7E A1 07 20 0F               0 #FX2       Z             - JMP                IF #0 THEN  (NORM)
 7E7  82 64 4C 60 FF     #FX1      1 BQR PL  ZA 0  2  2  -  - - CNT - 0 NBD NBS      REPEAT (R2,Q)/2
 7E8  66 DF E4 79 01               1 B   MP  DA 1  T  T  RC 11 - CNT - 1     1          T - (1^9) -> T
 7E9  7E 79 07 20 0F               0 #FX1      -Z             - JMP                  UNTIL T=0
     *                                                         END
     *                                                       END
 7EA  6D 61 EC 60 FF     #FX2      1 B   OR  ZQ 0  -  T  -  - - CNT - 0 NBD NBS  Q -> T
 7EB  2E 60 0C 60 FF               1 NN  OR  ZA 0  0  -  -  - - CNT - 0 NBD NBS  R0
 7EC  7E F8 47 20 0F               0 #FX3      -F             - JMP
 7ED  2E 64 0C 40 0F               1 NN  OR  ZA 0  2  -  -  - - CNT S 0 PSH NBS  R2 -> STK   HI
 7EE  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 7EF  2E 64 0C 60 FF     #FX3      1 NN  OR  ZA 0  2  -  -  - - CNT - 0 NBD NBS  R2
 7F0  3E 49 07 20 0F               0 TRAP(6)   -Z             - JMP              OVERFLOW
 7F1  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
 7F2  5C A8 03 20 0F     #ENDREPL  0 EXITREPL   T             - JSR
 7F3  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP
     *         POP(S);
     *         POP(P);
     *         POP(H);
     *         POP(G);
     *         POP(L);
     *         POP(M);
     *         POP(T);
     *       END REPL;
     * END DISPLAYHANDLER;
     *
     *
     *
 -org- 3764 4000
    .ORG 4000
 -map- a6 a6 800
    .MAP 246   ESCAPE-INSTRUCTION: JUMP TO THE BEGINNING OF THE 4-TH
     . ESCAPE-INSTRUCTION: JUMP TO THE BEGINNING OF THE 4-TH
     .
     . <JDR> Where are the diskread / write escape functions ?
     . <JDR> Compiled printer microcode is congruent with CH1043-microcode
     .
     . Microcode for printer instructions
     . ----------------------------------
     .  N.Wirth    5.11.81 / 20.5.82
     .  PROCEDURE PCH(bma: ADDRESS; VAR x: CARDINAL; y: CARDINAL;
     .                font: Frame; ch: CHAR);
     .     CODE 246B; 1
     .  END PCH;
     .  PROCEDURE REC(bma: ADDRESS; x,y,w,h: CARDINAL);
     .     CODE 246B; 2
     .  END REC;
     .  PROCEDURE CLR(n, m: CARDINAL; buf: ADDRESS);
     .     CODE 246B; 3
     .  END CLR;
     .  Bitmap is 2048 bits (128 words) wide, 256 lines high
     .  y coordinate counts from top down
     .  y coordinate wraps around, i.e. is taken MOD 256
     .  w and h must be > 0
     .  CLR clears lines m, m+1, ... , m+n-1 (MOD 256) of buffer
 -org- 4000 4000
    .ORG 4000
 -map- a6 a6 800
    .MAP 246
 800  0F E0 0C 60 04     ESC       1 Q   OR  DZ 0  -  -  -  - -  CNT - 0 ALU IR   Q := IR
 801  C0 01 07 20 0F               0 RAM        Z             -  JMP
 802  05 60 0C 60 FF               1 Q   MP  ZQ 0  -  -  -  - -  CNT - 0 NBD NBS	 Q := Q-1
 803  81 21 07 20 0F               0 PCH        Z             -  JMP
 804  05 60 0C 60 FF               1 Q   MP  ZQ 0  -  -  -  - -  CNT - 0 NBD NBS	 Q := Q-1          
 805  8D 31 07 20 0F               0 REC        Z             -  JMP
 806  05 60 0C 60 FF               1 Q   MP  ZQ 0  -  -  -  - -  CNT - 0 NBD NBS	 Q := Q-1
 807  89 B1 07 20 0F               0 CLR        Z             -  JMP
 808  00 01 07 20 0F               0 ZERO       Z             -  JMP
 -org- 4011 4022
    .ORG 4022 
 812  62 FE 0C 40 FF     PCH       1 B   PL  DA 0  T  0  -  - -  CNT  S 0 NBD NBS  R0 := STK+T  fontAdr
 813  4F E0 04 6E 00               1 B*  OR  DZ 0  0  0  RC 16 - CNT  - 0 ALU ALU  R0 := 4*R0
 814  72 E1 0C 70 03               1 B   AN  DA 0  0 10  -  - -  CNT  - 1 3        R8 := fontFrame
 815  76 E0 0C 70 03               1 B   NA  DA 0  0  0  -  - -  CNT  - 1 3        R0 := fontAdr
 816  2E 70 0C 60 D0               1 NN  OR  ZA 0 10  -  -  - -  CNT  - 0 BNK ALU  
 817  0E 60 0C 60 30               1 Q   OR  ZA 0  0  -  -  - -  CNT  - 0 MAR ALU  MAR := Q := R0
 818  6F E0 6C 60 01               1 B   OR  DZ 0  -  3  -  - -  CNT  - 0 ALU MD   R3 := MD   w
 819  2E 70 0C 60 D0               1 NN  OR  ZA 0 10  -  -  - -  CNT  - 0 BNK ALU  
 81A  01 40 0C 60 30               1 Q   PL  ZQ 1  -  -  -  - -  CNT  - 0 MAR ALU  MAR := Q := Q+1
 81B  6F E0 2C 60 01               1 B   OR  DZ 0  -  1  -  - -  CNT  - 0 ALU MD   R1 := MD     (oy,ox)
 81C  2E 70 0C 60 D0               1 NN  OR  ZA 0 10  -  -  - -  CNT  - 0 BNK ALU  
 81D  01 40 0C 60 30               1 Q   PL  ZQ 1  -  -  -  - -  CNT  - 0 MAR ALU  MAR := Q := Q+1
 81E  72 E2 AC 70 FF               1 B   AN  DA 0  1  5  -  - -  CNT  - 1 377      R5 := R1 MOD 256  ox
 81F  82 18 17 20 0F               0 L0        -H             -  JMP
 820  6E EA A4 78 FF               1 B   OR  DA 0  5  5  RC 10 - CNT  - 1 377      sign extension
 821  4F E2 24 68 00     L0        1 B*  OR  DZ 0  1  1  RC 10 - CNT  - 0 ALU ALU  R1 := R1^8
 822  62 E2 2C 40 FF               1 B   PL  DA 0  1  1  -  - -  CNT  S 0 NBD NBS  R1 := STK+R1    y+oy
 823  72 E2 2C 70 FF               1 B   AN  DA 0  1  1  -  - -  CNT  - 1 377      R1 := R1 MOD 256
 824  6F E0 EC 60 01               1 B   OR  DZ 0  -  7  -  - -  CNT  - 0 ALU MD   R7 := MD       dy,dx
 825  4F E2 24 69 00               1 B*  OR  DZ 0  1  1  RC 11 - CNT  - 0 ALU ALU  R1 := R1*128
 826  6F E1 EC 40 30               1 B   OR  DZ 0  -  T  -  - -  CNT  S 0 MAR ALU  MAR := T := STK   @x
 827  72 EE CC 70 FF               1 B   AN  DA 0  7  6  -  - -  CNT  - 1 377      R6 := R7 MOD 256  dx
 828  4F EE E4 68 00               1 B*  OR  DZ 0  7  7  RC 10 - CNT  - 0 ALU ALU  R7 := R7^8
 829  6F E0 0C 60 01               1 B   OR  DZ 0  -  0  -  - -  CNT  - 0 ALU MD   R0 := MD           x
 82A  6F E0 8C 40 FF               1 B   OR  DZ 0  -  4  -  - -  CNT  S 0 NBD NBS  R4 := STK        
 82B  20 E0 6C 60 10               1 NN   PL  AB 0  0  3  -  - - CNT  - 0 MD  ALU  MD := R0+R3      x+w
 82C  4F FF EC 40 30               1 B*  OR  DZ 0  T  T  -  - -  CNT  S 0 MAR ALU  MAR := T; T := STK
 82D  72 EE EC 70 FF               1 B   AN  DA 0  7  7  -  - -  CNT  - 1 377      R7 := R7 MOD 256  dy
 82E  85 21 07 20 0F               0 quit       Z             -  JMP              invalid char
 82F  60 E0 AC 60 40               1 B   PL  AB 0  0  5  -  - -  CNT - 0 SR  ALU  SR := R5 := R0+R5 x+ox
 830  76 EA 4C 70 0F               1 B   NA  DA 0  5  2  -  - -  CNT - 1 17       R2 := R5 -& 17
 831  4F E4 44 64 00               1 B*  OR  DZ 0  2  2  RC  4 - CNT - 0 ALU ALU  R2 := R2^4 (x+ox)/16
 832  72 EA 6C 70 0F               1 B   AN  DA 0  5  3  -  - -  CNT - 1 17       R3 := R5 MOD 16
 833  2E 70 0C 60 D0               1 NN  OR  ZA 0 10  -  -  - -  CNT - 0 BNK ALU  
 834  01 40 0C 60 30               1 Q   PL  ZQ 1  -  -  -  - -  CNT - 0 MAR ALU  MAR := Q := Q+1
 835  60 E4 2C 60 FF               1 B   PL  AB 0  2  1  -  - -  CNT - 0 NBD NBS  R1 := R1+R2      
 836  2E 72 0C 40 0F               1 NN  OR  ZA 0 11  -  -  - -  CNT S 0 ALU NBS  STK := R9  (save)
 837  03 60 0C 60 01               1 Q   PL  DQ 0  -  -  -  - -  CNT - 0 ALU MD   Q := MD+Q  @raster
 838  76 E2 AC 71 00     VLoop     1 B   NA  DA 0  1  5  MC  1 - CNT - 1 0        R5 := R1 MOD 40000B
 839  72 61 EC 60 FF               1 B   AN  ZA 0  0  T  -  - -  CNT - 0 NBD NBS  T := 0
 83A  6E 6D 2C 60 FF               1 B   OR  ZA 0  6  11 -  - -  CNT - 0 NBD NBS  R9 := R6       dx
 83B  2E 70 0C 60 D0     HLoop     1 NN   OR  ZA 0 10  -  -  - - CNT - 0 BNK ALU  
 83C  01 40 0C 60 30               1 Q   PL  ZQ 1  -  -  -  - -  CNT - 0 MAR ALU  MAR := Q := Q+1
 83D  6F E0 14 60 01               1 B   OR  DZ 0  -  0  RR - -  CNT - 0 ALU MD   R0 := MD^SR  raster
 83E  20 E8 AC 60 30               1 NN   PL  AB 0  4  5  -  - - CNT - 0 MAR ALU  MAR := R4+R5
 83F  76 E0 5C 70 00               1 B   NA  DA 0  0  2  MR - -  CNT - 1 0        R2 := R0 & -MSK(0,SR)
 840  6C E5 EC 60 FF               1 B   OR  AB 0  2  T  -  - -  CNT - 0 NBD NBS   T := T OR R2
 841  6E FF EC 60 01               1 B   OR  DA 0  T  T  -  - -  CNT - 0 ALU MD   T := T OR MD
 842  2E 7E 0C 60 10               1 NN   OR  ZA 0  T  -  -  - - CNT - 0 MD  ALU  MD := T
 843  20 E8 AC 60 30               1 NN   PL  AB 0  4  5  -  - - CNT - 0 MAR ALU  MAR := R4+R5
 844  62 4A AC 60 FF               1 B   PL  ZA 1  5  5  -  - -  CNT - 0 NBD NBS   R5 := R5+1
 845  72 E1 FC 70 00               1 B   AN  DA 0  0  T  MR - -  CNT - 1 0        T := R0 & MSK(0,SR)
 846  66 D3 2C 70 10               1 B   MP  DA 1 11 11  -  - -  CNT - 1 20       R9 := R9 - 16
 847  83 B9 27 20 0F               0 HLoop     -ZS            -  JMP
 848  20 F2 6C 60 FF               1 NN   PL  AB 0 11 3  -  - -  CNT - 0 NBD NBS   R9+R3        dx+xb
 849  84 E1 27 20 0F               0 L1         ZS            -  JMP
 84A  20 E8 AC 60 30               1 NN  PL  AB 0  4  5  -  - -  CNT - 0 MAR ALU  MAR := R4+R5
 84B  6E FF EC 60 01               1 B   OR  DA 0  T  T  -  - -  CNT - 0 ALU MD   T := T OR MD
 84C  2E 7E 0C 60 10               1 NN  OR  ZA 0  T  -  -  - -  CNT - 0 MD  ALU  MD := T
 84D  20 E8 AC 60 30               1 NN   PL AB 0  4  5  -  - -  CNT - 0 MAR ALU  MAR := R4+R5
 84E  62 E2 2C 70 80     L1        1 B   PL  DA 0  1  1  -  - -  CNT - 1 200      R1 := R1 + 200B
 84F  66 6E EC 60 FF               1 B   MP  ZA 0  7  7  -  - -  CNT - 0 NBD NBS   R7 := R7-1     dy
 850  83 89 27 20 0F               0 VLoop     -ZS            -  JMP   
 851  6F E1 2C 40 FF               1 B   OR  DZ 0  - 11  -  - -  CNT   S 0 NBD NBS  R9 := STK  (restore)
 852  0F E0 0F E0 03     quit      1 Q   OR  DZ 0  -  -  -  - S  JMP - 0 ALU IR4  JMAP
 -org- 4123 4233
    .ORG 4233 ------------------------------
 89B  6F E0 2C 40 FF     CLR       1 B   OR  DZ 0  -  1  -  - -  CNT S 0 NBD NBS   R1 := STK  (adr)
 89C  6F E0 0C 40 FF               1 B   OR  DZ 0  -  0  -  - -  CNT S 0 NBD NBS  R0 := STK  (cnt)
 89D  8A 91 07 20 0F               0 C2         Z             -  JMP
 89E  72 E2 2C 70 FF     C0        1 B   AN  DA 0  1  1  -  - -  CNT - 1 377      R1 := R1 MOD 256
 89F  4F E2 44 69 00               1 B*  OR  DZ 0  1  2  RC 11 - CNT - 0 ALU ALU  R2 := R1 * 128
 8A0  60 FE 4C 60 FF               1 B   PL  AB 0  T  2  -  - -  CNT - 0 NBD NBS  R2 := T+R2 (+org)
 8A1  6F E0 6C 70 80               1 B   OR  DZ 0  -  3  -  - -  CNT - 1 200      R3 := 128
 8A2  32 60 0C 60 10     C1        1 NN  AN  ZA 0  0  -  -  - -  CNT - 0 MD  ALU  MD := 0
 8A3  42 44 4C 60 30               1 B*  PL  ZA 1  2  2  -  - -  CNT - 0 MAR ALU  MAR := R2; R2 := R2+1
 8A4  66 66 6C 60 FF               1 B   MP  ZA 0  3  3  -  - -  CNT - 0 NBD NBS  R3 := R3-1
 8A5  8A 29 07 20 0F               0 C1        -Z             -  JMP
 8A6  62 42 2C 60 FF               1 B   PL  ZA 1  1  1  -  - -  CNT - 0 NBD NBS   R1 := R1+1
 8A7  66 60 0C 60 FF               1 B   MP  ZA 0  0  0  -  - -  CNT - 0 NBD NBS  R0 := R0-1
 8A8  89 E9 07 20 0F               0 C0        -Z             -  JMP
 8A9  6F E1 EC 40 FF     C2        1 B   OR  DZ 0  -  T  -  - -  CNT S 0 NBD NBS  T := STK
 8AA  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S  JMP - 0 ALU IR4  JMAP
 -org- 4253 4323
    .ORG 4323 ------------------------------
 8D3  6F E0 0C 40 FF     REC       1 B   OR  DZ 0  -  0  -  - -  CNT S 0 NBD NBS   R0 := w
 8D4  6F E0 2C 40 FF               1 B   OR  DZ 0  -  1  -  - -  CNT S 0 NBD NBS  R1 := y
 8D5  72 E2 2C 70 FF               1 B   AN  DA 0  1  1  -  - -  CNT - 1 377      R1 := R1 MOD 400B
 8D6  4F E2 24 69 00               1 B*  OR  DZ 0  1  1  RC 11 - CNT - 0 ALU ALU  R1 := R1 * 128
 8D7  6F E0 4C 40 40               1 B   OR  DZ 0  -  2  -  - -  CNT S 0 SR  ALU  R2 := SR := x
 8D8  76 E4 6C 70 0F               1 B   NA  DA 0  2  3  -  - -  CNT - 1 17
 8D9  4F E6 64 64 00               1 B*  OR  DZ 0  3  3  RC  4 - CNT - 0 ALU ALU  R3 := x DIV 16
 8DA  60 E6 2C 60 FF               1 B   PL  AB 0  3  1  -  - -  CNT - 0 NBD NBS   R1 := R1+R3
 8DB  7F E0 DC 70 00               1 B   XN  DZ 0  -  6  MR - -  CNT - 1 0        R6 := {xb..15}
 8DC  72 E4 4C 70 0F               1 B   AN  DA 0  2  2  -  - -  CNT - 1 17       R2 := R2 MOD 16
 8DD  60 E4 0C 60 40               1 B   PL  AB 0  2  0  -  - -  CNT - 0 SR  ALU  SR := R0 := R0+R2 w+xb
 8DE  6F E0 FC 70 00               1 B   OR  DZ 0  -  7  MR - -  CNT - 1 0        R7 := {0..xb+w-1}
 8DF  8E 19 07 20 0F               0 L2         -Z            -  JMP
 8E0  64 EE EC 60 FF               1 B   MP  AB 0  7  7  -  - -  CNT - 0 NBD NBS  corr, if R0 = 16
 8E1  6F E0 6C 40 FF     L2        1 B   OR  DZ 0  -  3  -  - -  CNT S 0 NBD NBS  R3 := mapadr
 8E2  0F E0 0C 40 FF               1 Q   OR  DZ 0  -  -  -  - -  CNT S 0 NBD NBS  Q  := STK dummy
 8E3  66 C0 0C 70 10               1 B   MP  DA 1  0  0  -  - -  CNT - 1 20	  R0 := R0-16
 8E4  8E F9 27 20 0F               0 I1         -ZS           -  JMP 		GOTO I1 IF > 0
 8E5  70 EC EC 60 FF               1 B   AN  AB 0  6  7  -  - -  CNT - 0 NBD NBS  R7 := {xb..xb+w-1}
 8E6  20 E6 2C 60 30     R1        1 NN  PL  AB 0  3  1  -  - -  CNT - 0 MAR ALU  MAR := R1+R3
 8E7  6E EE 4C 60 01               1 B   OR  DA 0  7  2  -  - -  CNT - 0 ALU MD   R2 := MD OR R7
 8E8  2E 64 0C 60 10               1 NN  OR  ZA 0  2  -  -  - -  CNT - 0 MD  ALU  MD := R2
 8E9  20 E2 6C 60 30               1 NN  PL  AB 0  1  3  -  - -  CNT - 0 MAR ALU  MAR := R1+R3
 8EA  62 E2 2C 70 80               1 B   PL  DA 0  1  1  -  - -  CNT - 1 200	 R1 := R1 + 128
 8EB  76 E2 24 71 01               1 B   NA  DA 0  1  1  RC  1 - CNT - 1 1	 R1 := R1 MOD 256*128
 8EC  66 7F EC 60 FF               1 B   MP  ZA 0  T  T  -  - -  CNT - 0 NBD NBS  T := T-1   h
 8ED  8E 69 07 20 0F               0 R1         -Z            -  JMP              REPEAT IF # 0
 8EE  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S  JMP - 0 ALU IR4  JMAP
 8EF  66 C0 0C 70 10     I1        1 B   MP  DA 1  0  0  -  - -  CNT - 1 20	 R0 := R0-16
 8F0  8F E9 27 20 0F               0 I2         -ZS           -  JMP 	       GOTO I2 IF > 0
 8F1  20 E6 2C 60 30     R2        1 NN  PL  AB 0  3  1  -  - -  CNT - 0 MAR ALU  MAR := R1+R3
 8F2  6E EC 4C 60 01               1 B   OR  DA 0  6  2  -  - -  CNT - 0 ALU MD   R2 := MD OR R6
 8F3  2E 64 0C 60 10               1 NN  OR  ZA 0  2  -  -  - -  CNT - 0 MD  ALU  MD := R2
 8F4  20 E2 6C 60 30               1 NN  PL  AB 0  1  3  -  - -  CNT - 0 MAR ALU  MAR := R1+R3
 8F5  20 C2 6C 60 30               1 NN  PL  AB 1  1  3  -  - -  CNT - 0 MAR ALU  MAR := R1+R3+1
 8F6  6E EE 4C 60 01               1 B   OR  DA 0  7  2  -  - -  CNT - 0 ALU MD   R2 := MD OR R7
 8F7  2E 64 0C 60 10               1 NN  OR  ZA 0  2  -  -  - -  CNT - 0 MD  ALU  MD := R2
 8F8  20 C2 6C 60 30               1 NN  PL  AB 1  1  3  -  - -  CNT - 0 MAR ALU  MAR := R1+R3+1
 8F9  62 E2 2C 70 80               1 B   PL  DA 0  1  1  -  - -  CNT - 1 200	 R1 := R1 + 128
 8FA  76 E2 24 71 01               1 B   NA  DA 0  1  1  RC 1 -  CNT - 1 1	 R1 := R1 MOD 256*128
 8FB  66 7F EC 60 FF               1 B   MP  ZA 0  T  T  -  - -  CNT - 0 NBD NBS  T := T-1   h
 8FC  8F 19 07 20 0F               0 R2         -Z            -  JMP              REPEAT IF # 0
 8FD  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S  JMP - 0 ALU IR4  JMAP
 8FE  6E 60 AC 60 FF     I2        1 B   OR  ZA 0  0  5  -  - -  CNT - 0 NBD NBS  R5 := R0
 8FF  20 E6 2C 60 30               1 NN  PL  AB 0  3  1  -  - -  CNT - 0 MAR ALU  MAR := R1+R3
 900  6E EC 4C 60 01               1 B   OR  DA 0  6  2  -  - -  CNT - 0 ALU MD   R2 := MD OR R6
 901  2E 64 0C 60 10               1 NN  OR  ZA 0  2  -  -  - -  CNT - 0 MD  ALU  MD := R2
 902  00 E2 6C 60 30               1 Q   PL  AB 0  1  3  -  - -  CNT - 0 MAR ALU  MAR := Q := R1+R3
 903  3C E0 0C 60 10     R3        1 NN  XN  AB 0  0  0  -  - -  CNT - 0 MD  ALU  MD := 177777B
 904  01 40 0C 60 30               1 Q   PL  ZQ 1  -  -  -  - -  CNT - 0 MAR ALU  MAR := Q := Q+1
 905  66 CA AC 70 10               1 B   MP  DA 1  5  5  -  - -  CNT - 1 20	 R5 := R5-16
 906  90 39 27 20 0F               0 R3         -ZS           -  JMP 	       REPEAT IF > 0
 907  01 40 0C 60 30               1 Q   PL  ZQ 1  -  -  -  - -  CNT - 0 MAR ALU  MAR := Q := Q+1
 908  6E EE 4C 60 01               1 B   OR  DA 0  7  2  -  - -  CNT - 0 ALU MD   R2 := MD OR R7
 909  2E 64 0C 60 10               1 NN  OR  ZA 0  2  -  -  - -  CNT - 0 MD  ALU  MD := R2
 90A  2D 60 0C 60 30               1 NN  OR  ZQ 0  -  -  -  - -  CNT - 0 MAR ALU  MAR := Q
 90B  62 E2 2C 70 80               1 B   PL  DA 0  1  1  -  - -  CNT - 1 200	 R1 := R1 + 128
 90C  76 E2 24 71 01               1 B   NA  DA 0  1  1  RC 1 -  CNT - 1 1	 R1 := R1 MOD 256*128
 90D  66 7F EC 60 FF               1 B   MP  ZA 0  T  T  -  - -  CNT - 0 NBD NBS   T := T-1   h
 90E  8F E9 07 20 0F               0 I2         -Z            -  JMP              REPEAT IF # 0
 90F  0F E0 0F E0 03               1 Q   OR  DZ 0  -  -  -  - S  JMP - 0 ALU IR4  JMAP
     *
     * End of  printer interface code  from "ESC.MIC"
     *
     * Remaining code below comes from a disassembly of the firmware roms out of CH1043          
     * It mainly interfaces with the WD1001-05 subassembly.            
     *          
 910  2E 6A 0C 60 60     EFGET     1 NN  OR  ZA  0  5   0  -    -  - CNT -  0 IOA ALU	[4420 910]
 911  2D 60 0C E0 F7               1 NN  OR  ZQ  0  0   0  -    -  S CNT -  0 NBD IOD	[4421 911]
 912  2D 60 0C E0 F7               1 NN  OR  ZQ  0  0   0  -    -  S CNT -  0 NBD IOD	[4422 912]
 913  6F E0 CC E0 07               1 B   OR  DZ  0  0   6  -    -  S CNT -  0 ALU IOD	[4423 913]
 914  2D 60 0C E0 F7               1 NN  OR  ZQ  0  0   0  -    -  S CNT -  0 NBD IOD	[4424 914]
 915  32 60 09 60 60               1 NN  AN  ZA  0  0   0  -    -  - RTN -  0 IOA ALU	[4425 915]
 916  2E 6A 0C 60 60     EFPUT     1 NN  OR  ZA  0  5   0  -    -  - CNT -  0 IOA ALU	[4426 916]
 917  2E 6C 0C E0 70               1 NN  OR  ZA  0  6   0  -    -  S CNT -  0 IOD ALU	[4427 917]
 918  2E 6C 0C E0 70               1 NN  OR  ZA  0  6   0  -    -  S CNT -  0 IOD ALU	[4430 918]
 919  2E 6C 0C E0 70               1 NN  OR  ZA  0  6   0  -    -  S CNT -  0 IOD ALU	[4431 919]
 91A  2E 6C 0C E0 F0               1 NN  OR  ZA  0  6   0  -    -  S CNT -  0 NBD ALU	[4432 91a]
 91B  32 60 09 60 60               1 NN  AN  ZA  0  0   0  -    -  - RTN -  0 IOA ALU	[4433 91b]
 91C  03 E0 0C 40 FF               1 Q   PL  DZ  0  0   0  -    -  - CNT S  0 NBD NBS	[4434 91c]
 91D  C3 E0 0C 70 00               1 BQL PL  DZ  0  0   0  -    -  - CNT -  1 000	[4435 91d]
 91E  C2 60 0C 60 FF               1 BQL PL  ZA  0  0   0  -    -  - CNT -  0 NBD NBS	[4436 91e]
 91F  60 7E 2C 60 FF               1 B   PL  AQ  0  T   1  -    -  - CNT -  0 NBD NBS	[4437 91f]
 920  62 00 0C 60 FF               1 B   PL  ZA  C  0   0  -    -  - CNT -  0 NBD NBS	[4440 920]
 921  6F E1 EC 40 FF               1 B   OR  DZ  0  0   T  -    -  - CNT S  0 NBD NBS	[4441 921]
 922  6F E0 4C 70 80               1 B   OR  DZ  0  0   2  -    -  - CNT -  1 200	[4442 922]
 923  6F E0 AC 70 10               1 B   OR  DZ  0  0   5  -    -  - CNT -  1 020	[4443 923]
 924  91 08 03 20 0F               0 EFGET    T                     - JSR EFGET	        [4444 924]
 925  72 EC CC 70 FF               1 B   AN  DA  0  6   6  -    -  - CNT -  1 377	[4445 925]
 926  4F EC E4 68 00               1 B*  OR  DZ  0  6   7 RC   10  - CNT -  0 ALU ALU	[4446 926]
 927  91 08 03 20 0F               0 EFGET    T                     - JSR EFGET	        [4447 927]
 928  72 EC CC 70 FF               1 B   AN  DA  0  6   6  -    -  - CNT -  1 377	[4450 928]
 929  20 EC EC 60 10               1 NN  PL  AB  0  6   7  -    -  - CNT -  0 MD  ALU	[4451 929]
 92A  2E 60 0C 60 D0               1 NN  OR  ZA  0  0   0  -    -  - CNT -  0 BNK ALU	[4452 92a]
 92B  42 42 2C 60 30               1 B*  PL  ZA  1  1   1  -    -  - CNT -  0 MAR ALU	[4453 92b]
 92C  66 64 4C 60 FF               1 B   MP  ZA  0  2   2  -    -  - CNT -  0 NBD NBS	[4454 92c]
 92D  92 39 07 20 0F               0 4443    -Z                    - JMP 4443		[4455 92d]
 92E  0F E0 0F E0 03               1 Q   OR  DZ  0  0   0  -    -  S JMP -  0 ALU IR4	[4456 92e]
     *
 92F  03 E0 0C 40 FF               1 Q   PL  DZ  0  0   0  -    -  - CNT S  0 NBD NBS	[4457 92f]
 930  C3 E0 0C 70 00               1 BQL PL  DZ  0  0   0  -    -  - CNT -  1 000	[4460 930]
 931  C2 60 0C 60 FF               1 BQL PL  ZA  0  0   0  -    -  - CNT -  0 NBD NBS	[4461 931]
 932  60 7E 2C 60 FF               1 B   PL  AQ  0  T   1  -    -  - CNT -  0 NBD NBS	[4462 932]
 933  62 00 0C 60 FF               1 B   PL  ZA  C  0   0  -    -  - CNT -  0 NBD NBS	[4463 933]
 934  6F E1 EC 40 FF               1 B   OR  DZ  0  0   T  -    -  - CNT S  0 NBD NBS	[4464 934]
 935  6F E0 4C 70 80               1 B   OR  DZ  0  0   2  -    -  - CNT -  1 200	[4465 935]
 936  6F E0 AC 70 10               1 B   OR  DZ  0  0   5  -    -  - CNT -  1 020	[4466 936]
 937  2E 60 0C 60 D0               1 NN  OR  ZA  0  0   0  -    -  - CNT -  0 BNK ALU	[4467 937]
 938  42 42 2C 60 30               1 B*  PL  ZA  1  1   1  -    -  - CNT -  0 MAR ALU	[4470 938]
 939  6F E0 C4 68 01               1 B   OR  DZ  0  0   6 RC   10  - CNT -  0 ALU MD 	[4471 939]
 93A  91 68 03 20 0F               0 EFPUT   T                     - JSR EFPUT		[4472 93a]
 93B  4F EC C4 68 00               1 B*  OR  DZ  0  6   6 RC   10  - CNT -  0 ALU ALU	[4473 93b]
 93C  91 68 03 20 0F               0 EFPUT   T                     - JSR EFPUT		[4474 93c]
 93D  66 64 4C 60 FF               1 B   MP  ZA  0  2   2  -    -  - CNT -  0 NBD NBS	[4475 93d]
 93E  93 79 07 20 0F               0 4467    -Z                    - JMP 4467		[4476 93e]
 93F  0F E0 0F E0 03               1 Q   OR  DZ  0  0   0  -    -  S JMP -  0 ALU IR4	[4477 93f]
     *          
 940  72 71 0C 60 FF     EFDUMP    1 B   AN  ZA  0  8   8  -    -  - CNT -  0 NBD NBS	[4500 940]
 941  6F E1 2C 70 1F               1 B   OR  DZ  0  0   M  -    -  - CNT -  1 037	[4501 941]
 942  6F E1 4C 70 05               1 B   OR  DZ  0  0   P  -    -  - CNT -  1 005	[4502 942]
 943  6F E0 4C 70 00               1 B   OR  DZ  0  0   2  -    -  - CNT -  1 000	[4503 943]
 944  6F E0 0C 70 00               1 B   OR  DZ  0  0   0  -    -  - CNT -  1 000	[4504 944]
 945  2E 60 0C 60 D0     DMPWRD    1 NN  OR  ZA  0  0   0  -    -  - CNT -  0 BNK ALU	[4505 945]
 946  2E 64 0C 60 30               1 NN  OR  ZA  0  2   0  -    -  - CNT -  0 MAR ALU	[4506 946]
 947  2E 70 0C 60 FF               1 NN  OR  ZA  0  8   0  -    -  - CNT -  0 NBD NBS	[4507 947]
 948  95 61 03 20 0F               0 NINITWRT   Z                  - JSR NINITWRT [4510 948]
 949  6F E0 AC 70 10               1 B   OR  DZ  0  0   5  -    -  - CNT -  1 020	[4511 949]
 94A  6F E0 C4 68 01               1 B   OR  DZ  0  0   6 RC   10  - CNT -  0 ALU MD 	[4512 94a]
 94B  91 68 03 20 0F               0 EFPUT   T                     - JSR EFPUT		[4513 94b]
 94C  4F EC C4 68 00               1 B*  OR  DZ  0  6   6 RC   10  - CNT -  0 ALU ALU	[4514 94c]
 94D  91 68 03 20 0F               0 EFPUT   T                     - JSR EFPUT		[4515 94d]
 94E  62 51 0C 60 FF               1 B   PL  ZA  1  8   8  -    -  - CNT -  0 NBD NBS	[4516 94e]
 94F  72 F1 0C 70 7F               1 B   AN  DA  0  8   8  -    -  - CNT -  1 177	[4517 94f]
 950  62 44 4C 60 FF               1 B   PL  ZA  1  2   2  -    -  - CNT -  0 NBD NBS	[4520 950]
 951  94 5A 07 20 0F               0 DMPWRD  -C                    - JMP DMPWRD		[4521 951]
 952  62 40 0C 60 FF               1 B   PL  ZA  1  0   0  -    -  - CNT -  0 NBD NBS	[4522 952]
 953  26 C0 0C 70 02               1 NN  MP  DA  1  0   0  -    -  - CNT -  1 002	[4523 953]
 954  94 59 07 20 0F               0 DMPWRD -Z                     - JMP DMPWRD		[4524 954]
 955  00 08 01 20 0F               0 0000    T                     - RTN 0000		[4525 955]
     * 
 956  6F E0 AC 70 17     NINITWRT  1 B   OR  DZ  0  0   5  -    -  - CNT -  1 027	[4526 956]
 957  91 08 03 20 0F               0 EFGET   T                     - JSR EFGET		[4527 957]
 958  32 EC 0C 70 80               1 NN  AN  DA  0  6   0  -    -  - CNT -  1 200	[4530 958]
 959  95 69 07 20 0F               0 NINITWRT  -Z                   - JMP N INITWRT      [4531 959]
 95A  62 53 2C 60 FF               1 B   PL  ZA  1  M   M  -    -  - CNT -  0 NBD NBS	[4532 95a]
 95B  72 F3 2C 70 1F               1 B   AN  DA  0  M   M  -    -  - CNT -  1 037	[4533 95b]
 95C  95 E9 07 20 0F               0 4536    -Z                    - JMP 4536		[4534 95c]
 95D  62 55 4C 60 FF               1 B   PL  ZA  1  P   P  -    -  - CNT -  0 NBD NBS	[4535 95d]
 95E  6F E0 AC 70 13               1 B   OR  DZ  0  0   5  -    -  - CNT -  1 023	[4536 95e]
 95F  6E 72 CC 60 FF               1 B   OR  ZA  0  M   6  -    -  - CNT -  0 NBD NBS	[4537 95f]
 960  91 68 03 20 0F               0 EFPUT   T                     - JSR EFPUT		[4540 960]
 961  6F E0 CC 70 88               1 B   OR  DZ  0  0   6  -    -  - CNT -  1 210	[4541 961]
 962  72 F4 AC 70 03               1 B   AN  DA  0  P   5  -    -  - CNT -  1 003	[4542 962]
 963  6C EA CC 60 FF               1 B   OR  AB  0  5   6  -    -  - CNT -  0 NBD NBS	[4543 963]
 964  6F E0 AC 70 16               1 B   OR  DZ  0  0   5  -    -  - CNT -  1 026	[4544 964]
 965  91 68 03 20 0F               0 EFPUT   T                     - JSR EFPUT		[4545 965]
 966  4F F4 C4 62 00               1 B*  OR  DZ  0  P   6 RC   02  - CNT -  0 ALU ALU	[4546 966]
 967  6F E0 AC 70 14               1 B   OR  DZ  0  0   5  -    -  - CNT -  1 024	[4547 967]
 968  91 68 03 20 0F               0 EFPUT   T                     - JSR EFPUT		[4550 968]
 969  72 6C CC 60 FF               1 B   AN  ZA  0  6   6  -    -  - CNT -  0 NBD NBS	[4551 969]
 96A  6F E0 AC 70 15               1 B   OR  DZ  0  0   5  -    -  - CNT -  1 025	[4552 96a]
 96B  91 68 03 20 0F               0 EFPUT   T                     - JSR EFPUT		[4553 96b]
 96C  6F E0 CC 70 30               1 B   OR  DZ  0  0   6  -    -  - CNT -  1 060	[4554 96c]
 96D  6F E0 AC 70 17               1 B   OR  DZ  0  0   5  -    -  - CNT -  1 027	[4555 96d]
 96E  91 68 07 20 0F               0 EFPUT   T                     - JMP EFPUT		[4556 96e]
     *          
 96F  0F E0 0C 60 04     EFXYZ     1 Q   OR  DZ  0  0   0  -    -  - CNT -  0 ALU IR 	[4557 96f]
 970  C0 01 07 20 0F               0 6000     Z                    - JMP 6000		[4560 970]
 971  05 60 0C 60 FF               1 Q   MP  ZQ  0  0   0  -    -  - CNT -  0 NBD NBS	[4561 971]
 972  81 21 07 20 0F               0 4022     Z                    - JMP 4022		[4562 972]
 973  05 60 0C 60 FF               1 Q   MP  ZQ  0  0   0  -    -  - CNT -  0 NBD NBS	[4563 973]
 974  8D 31 07 20 0F               0 4323     Z                    - JMP 4323		[4564 974]
 975  05 60 0C 60 FF               1 Q   MP  ZQ  0  0   0  -    -  - CNT -  0 NBD NBS	[4565 975]
 976  89 B1 07 20 0F               0 4233     Z                    - JMP 4233		[4566 976]
 977  05 60 0C 60 FF               1 Q   MP  ZQ  0  0   0  -    -  - CNT -  0 NBD NBS	[4567 977]
 978  91 C1 07 20 0F               0 4434     Z                    - JMP 4434		[4570 978]
 979  05 60 0C 60 FF               1 Q   MP  ZQ  0  0   0  -    -  - CNT -  0 NBD NBS	[4571 979]
 97A  92 F1 07 20 0F               0 4457     Z                    - JMP 4457		[4572 97a]
 97B  05 60 0C 60 FF               1 Q   MP  ZQ  0  0   0  -    -  - CNT -  0 NBD NBS	[4573 97b]
 97C  99 11 07 20 0F               0 EFBOOT   Z                    - JMP EFBOOT		[4574 97c]
 97D  05 60 0C 60 FF               1 Q   MP  ZQ  0  0   0  -    -  - CNT -  0 NBD NBS	[4575 97d]
 97E  18 F1 07 20 0F               0 0617     Z                    - JMP 0617		[4576 97e]
 97F  05 60 0C 60 FF               1 Q   MP  ZQ  0  0   0  -    -  - CNT -  0 NBD NBS	[4577 97f]
 980  9B 31 07 20 0F               0 4663     Z                    - JMP 4663		[4600 980]
 981  05 60 0C 60 FF               1 Q   MP  ZQ  0  0   0  -    -  - CNT -  0 NBD NBS	[4601 981]
 982  A4 81 07 20 0F               0 5110     Z                    - JMP 5110		[4602 982]
 983  05 60 0C 60 FF               1 Q   MP  ZQ  0  0   0  -    -  - CNT -  0 NBD NBS	[4603 983]
 984  00 01 07 20 0F               0 0000     Z                    - JMP 0000		[4604 984]
 985  05 60 0C 60 FF               1 Q   MP  ZQ  0  0   0  -    -  - CNT -  0 NBD NBS	[4605 985]
 986  00 01 07 20 0F               0 0000     Z                    - JMP 0000		[4606 986]
 987  05 60 0C 60 FF               1 Q   MP  ZQ  0  0   0  -    -  - CNT -  0 NBD NBS	[4607 987]
 988  00 01 07 20 0F               0 0000     Z                    - JMP 0000		[4610 988]
 989  00 08 07 20 0F               0 0000    T                     - JMP 0000		[4611 989]
 98A  2E 72 0C 40 0F               1 NN  OR  ZA  0  M   0  -    -  - CNT S  0 ALU NBS	[4612 98a]
 98B  2E 74 0C 40 0F               1 NN  OR  ZA  0  P   0  -    -  - CNT S  0 ALU NBS	[4613 98b]
 98C  94 08 03 20 0F               0 EFDUMP  T                     - JSR EFDUMP		[4614 98c]
 98D  42 F8 03 20 0F     EFSTART   0 #SAVEREGS T                   - JSR #SAVEREGS	[4615 98d]   SAVE REG'S IN CASE OF reset
 98E  6F E0 0C 70 05               1 B   OR  DZ  0  0   0  -    -  - CNT -  1 005	[4616 98e]
 98F  2E 74 0C 60 10               1 NN  OR  ZA  0  P   0  -    -  - CNT -  0 MD  ALU	[4617 98f]
 990  2E 60 0C 60 30               1 NN  OR  ZA  0  0   0  -    -  - CNT -  0 MAR ALU	[4620 990]
     *         
 991  6F E0 64 78 80     EFBOOT    1 B   OR  DZ  0  0   3 RC   10  - CNT -  1 200	[4621 991]
 992  32 66 0C 60 E0               1 NN  AN  ZA  0  3   0  -    -  - CNT -  0  F  ALU	[4622 992]
 993  22 66 0C 60 20               1 NN  PL  ZA  0  3   0  -    -  - CNT -  0 PC  ALU	[4623 993]
 994  6F E0 4C 70 0C               1 B   OR  DZ  0  0   2  -    -  - CNT -  1 014	[4624 994]
 995  22 64 0C 60 30               1 NN  PL  ZA  0  2   0  -    -  - CNT -  0 MAR ALU	[4625 995]
 996  6F E0 4C 60 01               1 B   OR  DZ  0  0   2  -    -  - CNT -  0 ALU MD 	[4626 996]
 997  6F E0 6C 70 0D               1 B   OR  DZ  0  0   3  -    -  - CNT -  1 015	[4627 997]
 998  22 66 0C 60 30               1 NN  PL  ZA  0  3   0  -    -  - CNT -  0 MAR ALU	[4630 998]
 999  6F E0 6C 60 01               1 B   OR  DZ  0  0   3  -    -  - CNT -  0 ALU MD 	[4631 999]
 99A  9A F8 03 20 0F               0 4657    T                     - JSR 4657		[4632 99a]
 99B  2E 6E 0C 60 10               1 NN  OR  ZA  0  7   0  -    -  - CNT -  0 MD  ALU	[4633 99b]
 99C  22 66 0C 60 D0               1 NN  PL  ZA  0  3   0  -    -  - CNT -  0 BNK ALU	[4634 99c]
 99D  42 44 4C 60 30               1 B*  PL  ZA  1  2   2  -    -  - CNT -  0 MAR ALU	[4635 99d]
 99E  66 6E 0C 60 FF               1 B   MP  ZA  0  7   0  -    -  - CNT -  0 NBD NBS	[4636 99e]
 99F  00 10 47 20 0F               0 0001     F                    - JMP #RESTART	[4637 99f]
 9A0  9A F8 03 20 0F               0 4657    T                     - JSR 4657		[4640 9a0]
 9A1  2E 6E 0C 60 10               1 NN  OR  ZA  0  7   0  -    -  - CNT -  0 MD  ALU	[4641 9a1]
 9A2  22 66 0C 60 D0               1 NN  PL  ZA  0  3   0  -    -  - CNT -  0 BNK ALU	[4642 9a2]
 9A3  42 44 4C 60 30               1 B*  PL  ZA  1  2   2  -    -  - CNT -  0 MAR ALU	[4643 9a3]
 9A4  6E 6E 2C 60 FF               1 B   OR  ZA  0  7   1  -    -  - CNT -  0 NBD NBS	[4644 9a4]
 9A5  9A F8 03 20 0F               0 4657    T                     - JSR 4657		[4645 9a5]
 9A6  22 62 0C 60 30               1 NN  PL  ZA  0  1   0  -    -  - CNT -  0 MAR ALU	[4646 9a6]
 9A7  2E 6E 0C 60 11               1 NN  OR  ZA  0  7   0  -    -  - CNT -  0 MD  MD 	[4647 9a7]
 9A8  22 66 0C 60 D0               1 NN  PL  ZA  0  3   0  -    -  - CNT -  0 BNK ALU	[4650 9a8]
 9A9  42 44 4C 60 30               1 B*  PL  ZA  1  2   2  -    -  - CNT -  0 MAR ALU	[4651 9a9]
 9AA  2E 6E 0C 60 10               1 NN  OR  ZA  0  7   0  -    -  - CNT -  0 MD  ALU	[4652 9aa]
 9AB  42 42 2C 60 30               1 B*  PL  ZA  1  1   1  -    -  - CNT -  0 MAR ALU	[4653 9ab]
 9AC  66 60 0C 60 FF               1 B   MP  ZA  0  0   0  -    -  - CNT -  0 NBD NBS	[4654 9ac]
 9AD  9A 59 07 20 0F               0 4645    -Z                    - JMP 4645		[4655 9ad]
 9AE  99 A8 07 20 0F               0 4632    T                     - JMP 4632		[4656 9ae]
     *
 9AF  6F E0 E4 68 04               1 B   OR  DZ  0  0   7 RC   10  - CNT -  0 ALU IR 	[4657 9af]
 9B0  2E 62 0C E0 FF               1 NN  OR  ZA  0  1   0  -    -  S CNT -  0 NBD NBS	[4660 9b0]
 9B1  2E 62 0C E0 FF               1 NN  OR  ZA  0  1   0  -    -  S CNT -  0 NBD NBS	[4661 9b1]
 9B2  6E EE E9 60 04               1 B   OR  DA  0  7   7  -    -  - RTN -  0 ALU IR 	[4662 9b2]
     *
 9B3  6E 7E 0C 60 FF               1 B   OR  ZA  0  T   0  -    -  - CNT -  0 NBD NBS	[4663 9b3]
 9B4  6F E0 2C 40 FF               1 B   OR  DZ  0  0   1  -    -  - CNT S  0 NBD NBS	[4664 9b4]
 9B5  6F E0 6C 40 FF               1 B   OR  DZ  0  0   3  -    -  - CNT S  0 NBD NBS	[4665 9b5]
 9B6  6F E0 8C 40 FF               1 B   OR  DZ  0  0   4  -    -  - CNT S  0 NBD NBS	[4666 9b6]
 9B7  6F E0 AC 40 30               1 B   OR  DZ  0  0   5  -    -  - CNT S  0 MAR ALU	[4667 9b7]
 9B8  6F E0 EC 60 01               1 B   OR  DZ  0  0   7  -    -  - CNT -  0 ALU MD 	[4670 9b8]
 9B9  62 4A AC 60 30               1 B   PL  ZA  1  5   5  -    -  - CNT -  0 MAR ALU	[4671 9b9]
 9BA  6F E0 CC 60 01               1 B   OR  DZ  0  0   6  -    -  - CNT -  0 ALU MD 	[4672 9ba]
 9BB  4F EC 44 6C 00               1 B*  OR  DZ  0  6   2 RC   14  - CNT -  0 ALU ALU	[4673 9bb]
 9BC  28 C2 4C 60 FF               1 NN  MI  AB  1  1   2  -    -  - CNT -  0 NBD NBS	[4674 9bc]
 9BD  3E 02 07 20 0F               0 TRAP(4)     C                 - JMP TRAP(4)		[4675 9bd]
 9BE  28 C8 4C 60 FF               1 NN  MI  AB  1  4   2  -    -  - CNT -  0 NBD NBS	[4676 9be]
 9BF  3E 02 07 20 0F               0 TRAP(4)     C                 - JMP TRAP(4)		[4677 9bf]
 9C0  62 4A AC 60 30               1 B   PL  ZA  1  5   5  -    -  - CNT -  0 MAR ALU	[4700 9c0]
 9C1  03 C0 0C 60 01               1 Q   PL  DZ  1  0   0  -    -  - CNT -  0 ALU MD 	[4701 9c1]
 9C2  6E 60 4C 60 FF               1 B   OR  ZA  0  0   2  -    -  - CNT -  0 NBD NBS	[4702 9c2]
 9C3  64 44 4C 60 FF               1 B   MP  AQ  1  2   2  -    -  - CNT -  0 NBD NBS	[4703 9c3]
 9C4  62 44 4C 60 FF               1 B   PL  ZA  1  2   2  -    -  - CNT -  0 NBD NBS	[4704 9c4]
 9C5  3E 01 47 20 0F               0 TRAP(4)     ZF                - JMP TRAP(4)		[4705 9c5]
 9C6  6E 66 4C 60 FF               1 B   OR  ZA  0  3   2  -    -  - CNT -  0 NBD NBS	[4706 9c6]
 9C7  64 44 4C 60 FF               1 B   MP  AQ  1  2   2  -    -  - CNT -  0 NBD NBS	[4707 9c7]
 9C8  62 44 4C 60 FF               1 B   PL  ZA  1  2   2  -    -  - CNT -  0 NBD NBS	[4710 9c8]
 9C9  3E 01 47 20 0F               0 TRAP(4)     ZF                - JMP TRAP(4)		[4711 9c9]
 9CA  6E 6E AC 60 FF               1 B   OR  ZA  0  7   5  -    -  - CNT -  0 NBD NBS	[4712 9ca]
 9CB  6F E0 EC 40 FF               1 B   OR  DZ  0  0   7  -    -  - CNT S  0 NBD NBS	[4713 9cb]
 9CC  5F EE E4 6C 00               1 B*  XN  DZ  0  7   7 RC   14  - CNT -  0 ALU ALU	[4714 9cc]
 9CD  6F E1 0C 40 FF               1 B   OR  DZ  0  0   8  -    -  - CNT S  0 NBD NBS	[4715 9cd]
 9CE  9D 09 07 20 0F               0 4720    -Z                    - JMP 4720		[4716 9ce]
 9CF  67 C1 0C 70 01               1 B   MP  DZ  1  0   8  -    -  - CNT -  1 001	[4717 9cf]
 9D0  6A D1 0C 70 03               1 B   MI  DA  1  8   8  -    -  - CNT -  1 003	[4720 9d0]
 9D1  A2 98 03 20 0F               0 5051    T                     - JSR 5051		[4721 9d1]
 9D2  6D 61 CC 60 FF               1 B   OR  ZQ  0  0   L  -    -  - CNT -  0 NBD NBS	[4722 9d2]
 9D3  72 EB 8C 70 03               1 B   AN  DA  0  5   S  -    -  - CNT -  1 003	[4723 9d3]
 9D4  76 EA AC 70 03               1 B   NA  DA  0  5   5  -    -  - CNT -  1 003	[4724 9d4]
 9D5  6E 69 2C 60 FF               1 B   OR  ZA  0  4   M  -    -  - CNT -  0 NBD NBS	[4725 9d5]
 9D6  68 C3 2C 60 FF               1 B   MI  AB  1  1   M  -    -  - CNT -  0 NBD NBS	[4726 9d6]
 9D7  9D 98 47 20 0F               0 4731    -F                    - JMP 4731		[4727 9d7]
 9D8  6A 53 2C 60 FF               1 B   MI  ZA  1  M   M  -    -  - CNT -  0 NBD NBS	[4730 9d8]
 9D9  6E 67 4C 60 FF               1 B   OR  ZA  0  3   P  -    -  - CNT -  0 NBD NBS	[4731 9d9]
 9DA  68 C1 4C 60 FF               1 B   MI  AB  1  0   P  -    -  - CNT -  0 NBD NBS	[4732 9da]
 9DB  9D D8 47 20 0F               0 4735    -F                    - JMP 4735		[4733 9db]
 9DC  6A 55 4C 60 FF               1 B   MI  ZA  1  P   P  -    -  - CNT -  0 NBD NBS	[4734 9dc]
 9DD  28 D5 2C 60 FF               1 NN  MI  AB  1  P   M  -    -  - CNT -  0 NBD NBS	[4735 9dd]
 9DE  A0 18 47 20 0F               0 5001    -F                    - JMP 5001		[4736 9de]
 9DF  28 C2 8C 60 FF               1 NN  MI  AB  1  1   4  -    -  - CNT -  0 NBD NBS	[4737 9df]
 9E0  A2 30 43 20 0F               0 5043     F                    - JSR 5043		[4740 9e0]
 9E1  6E 6D EC 60 FF               1 B   OR  ZA  0  6   T  -    -  - CNT -  0 NBD NBS	[4741 9e1]
 9E2  08 DC 6C 60 FF               1 Q   MI  AB  1  L   3  -    -  - CNT -  0 NBD NBS	[4742 9e2]
 9E3  3C 98 03 20 0F               0 1711    T                     - JSR 1711		[4743 9e3]
 9E4  6D 61 CC 60 FF               1 B   OR  ZQ  0  0   L  -    -  - CNT -  0 NBD NBS	[4744 9e4]
 9E5  60 EB CC 60 FF               1 B   PL  AB  0  5   L  -    -  - CNT -  0 NBD NBS	[4745 9e5]
 9E6  28 C0 6C 60 FF               1 NN  MI  AB  1  0   3  -    -  - CNT -  0 NBD NBS	[4746 9e6]
 9E7  9E B0 47 20 0F               0 4753     F                    - JMP 4753		[4747 9e7]
 9E8  63 E1 6C 70 01               1 B   PL  DZ  0  0   H  -    -  - CNT -  1 001	[4750 9e8]
 9E9  6A 4C CC 60 FF               1 B   MI  ZA  1  6   6  -    -  - CNT -  0 NBD NBS	[4751 9e9]
 9EA  9E C8 07 20 0F               0 4754    T                     - JMP 4754		[4752 9ea]
 9EB  67 C1 6C 70 01               1 B   MP  DZ  1  0   H  -    -  - CNT -  1 001	[4753 9eb]
 9EC  6E 74 0C 60 FF               1 B   OR  ZA  0  P   0  -    -  - CNT -  0 NBD NBS	[4754 9ec]
 9ED  68 D2 0C 60 FF               1 B   MI  AB  1  M   0  -    -  - CNT -  0 NBD NBS	[4755 9ed]
 9EE  AD E1 2C 60 FF               1 BR  OR  ZB  0  0   M  -    -  - CNT -  0 NBD NBS	[4756 9ee]
 9EF  76 F3 2C 71 00               1 B   NA  DA  0  M   M MC   01  - CNT -  1 000	[4757 9ef]
 9F0  64 C1 2C 60 FF               1 B   MP  AB  1  0   M  -    -  - CNT -  0 NBD NBS	[4760 9f0]
 9F1  4F EE E4 6F 00               1 B*  OR  DZ  0  7   7 RC   17  - CNT -  0 ALU ALU	[4761 9f1]
 9F2  12 EE 0C 70 04               1 Q   AN  DA  0  7   0  -    -  - CNT -  1 004	[4762 9f2]
 9F3  08 50 0C 60 FF               1 Q   MI  AQ  1  8   0  -    -  - CNT -  0 NBD NBS	[4763 9f3]
 9F4  A3 68 43 20 0F               0 5066    -F                    - JSR 5066		[4764 9f4]
 9F5  2E 72 0C 60 FF               1 NN  OR  ZA  0  M   0  -    -  - CNT -  0 NBD NBS	[4765 9f5]
 9F6  9F 98 47 20 0F               0 4771    -F                    - JMP 4771		[4766 9f6]
 9F7  60 F5 2C 60 FF               1 B   PL  AB  0  P   M  -    -  - CNT -  0 NBD NBS	[4767 9f7]
 9F8  9F C8 07 20 0F               0 4774    T                     - JMP 4774		[4770 9f8]
 9F9  64 C1 2C 60 FF               1 B   MP  AB  1  0   M  -    -  - CNT -  0 NBD NBS	[4771 9f9]
 9FA  60 F6 6C 60 FF               1 B   PL  AB  0  H   3  -    -  - CNT -  0 NBD NBS	[4772 9fa]
 9FB  60 ED CC 60 FF               1 B   PL  AB  0  6   L  -    -  - CNT -  0 NBD NBS	[4773 9fb]
 9FC  62 48 8C 60 FF               1 B   PL  ZA  1  4   4  -    -  - CNT -  0 NBD NBS	[4774 9fc]
 9FD  28 C8 2C 60 FF               1 NN  MI  AB  1  4   1  -    -  - CNT -  0 NBD NBS	[4775 9fd]
 9FE  9F 11 47 20 0F               0 4761     ZF                    - JMP 4761		[4776 9fe]
 9FF  A2 F8 03 20 0F               0 5057    T                     - JSR 5057		[4777 9ff]
 A00  0F E0 0F E0 03               1 Q   OR  DZ  0  0   0  -    -  S JMP -  0 ALU IR4	[5000 a00]
 A01  28 C0 6C 60 FF               1 NN  MI  AB  1  0   3  -    -  - CNT -  0 NBD NBS	[5001 a01]
 A02  A2 30 43 20 0F               0 5043     F                    - JSR 5043		[5002 a02]
 A03  6E 6D EC 60 FF               1 B   OR  ZA  0  6   T  -    -  - CNT -  0 NBD NBS	[5003 a03]
 A04  08 DC 6C 60 FF               1 Q   MI  AB  1  L   3  -    -  - CNT -  0 NBD NBS	[5004 a04]
 A05  3C 98 03 20 0F               0 1711    T                     - JSR 1711		[5005 a05]
 A06  6D 61 CC 60 FF               1 B   OR  ZQ  0  0   L  -    -  - CNT -  0 NBD NBS	[5006 a06]
 A07  60 EB CC 60 FF               1 B   PL  AB  0  5   L  -    -  - CNT -  0 NBD NBS	[5007 a07]
 A08  6A 4C CC 60 FF               1 B   MI  ZA  1  6   6  -    -  - CNT -  0 NBD NBS	[5010 a08]
 A09  28 C2 8C 60 FF               1 NN  MI  AB  1  1   4  -    -  - CNT -  0 NBD NBS	[5011 a09]
 A0A  A0 D0 47 20 0F               0 5015     F                    - JMP 5015		[5012 a0a]
 A0B  63 E1 6C 70 01               1 B   PL  DZ  0  0   H  -    -  - CNT -  1 001	[5013 a0b]
 A0C  A0 E8 07 20 0F               0 5016    T                     - JMP 5016		[5014 a0c]
 A0D  67 C1 6C 70 01               1 B   MP  DZ  1  0   H  -    -  - CNT -  1 001	[5015 a0d]
 A0E  6E 72 2C 60 FF               1 B   OR  ZA  0  M   1  -    -  - CNT -  0 NBD NBS	[5016 a0e]
 A0F  68 D4 2C 60 FF               1 B   MI  AB  1  P   1  -    -  - CNT -  0 NBD NBS	[5017 a0f]
 A10  AD E1 4C 60 FF               1 BR  OR  ZB  0  0   P  -    -  - CNT -  0 NBD NBS	[5020 a10]
 A11  76 F5 4C 71 00               1 B   NA  DA  0  P   P MC   01  - CNT -  1 000	[5021 a11]
 A12  64 C3 4C 60 FF               1 B   MP  AB  1  1   P  -    -  - CNT -  0 NBD NBS	[5022 a12]
 A13  4F EE E4 6F 00               1 B*  OR  DZ  0  7   7 RC   17  - CNT -  0 ALU ALU	[5023 a13]
 A14  12 EE 0C 70 04               1 Q   AN  DA  0  7   0  -    -  - CNT -  1 004	[5024 a14]
 A15  08 50 0C 60 FF               1 Q   MI  AQ  1  8   0  -    -  - CNT -  0 NBD NBS	[5025 a15]
 A16  A3 68 43 20 0F               0 5066    -F                    - JSR 5066		[5026 a16]
 A17  2E 74 0C 60 FF               1 NN  OR  ZA  0  P   0  -    -  - CNT -  0 NBD NBS	[5027 a17]
 A18  A1 B8 47 20 0F               0 5033    -F                    - JMP 5033		[5030 a18]
 A19  60 F3 4C 60 FF               1 B   PL  AB  0  M   P  -    -  - CNT -  0 NBD NBS	[5031 a19]
 A1A  A1 D8 07 20 0F               0 5035    T                     - JMP 5035		[5032 a1a]
 A1B  64 C3 4C 60 FF               1 B   MP  AB  1  1   P  -    -  - CNT -  0 NBD NBS	[5033 a1b]
 A1C  60 F6 8C 60 FF               1 B   PL  AB  0  H   4  -    -  - CNT -  0 NBD NBS	[5034 a1c]
 A1D  62 46 6C 60 FF               1 B   PL  ZA  1  3   3  -    -  - CNT -  0 NBD NBS	[5035 a1d]
 A1E  60 ED CC 60 FF               1 B   PL  AB  0  6   L  -    -  - CNT -  0 NBD NBS	[5036 a1e]
 A1F  28 C6 0C 60 FF               1 NN  MI  AB  1  3   0  -    -  - CNT -  0 NBD NBS	[5037 a1f]
 A20  A1 31 47 20 0F               0 5023     ZF                    - JMP 5023		[5040 a20]
 A21  A2 F8 03 20 0F               0 5057    T                     - JSR 5057		[5041 a21]
 A22  0F E0 0F E0 03               1 Q   OR  DZ  0  0   0  -    -  S JMP -  0 ALU IR4	[5042 a22]
 A23  6E 63 EC 60 FF               1 B   OR  ZA  0  1   T  -    -  - CNT -  0 NBD NBS	[5043 a23]
 A24  6E 68 2C 60 FF               1 B   OR  ZA  0  4   1  -    -  - CNT -  0 NBD NBS	[5044 a24]
 A25  6E 7E 8C 60 FF               1 B   OR  ZA  0  T   4  -    -  - CNT -  0 NBD NBS	[5045 a25]
 A26  6E 61 EC 60 FF               1 B   OR  ZA  0  0   T  -    -  - CNT -  0 NBD NBS	[5046 a26]
 A27  6E 66 0C 60 FF               1 B   OR  ZA  0  3   0  -    -  - CNT -  0 NBD NBS	[5047 a27]
 A28  6E 7E 69 60 FF               1 B   OR  ZA  0  T   3  -    -  - RTN -  0 NBD NBS	[5050 a28]
 A29  2E 72 0C 40 0F               1 NN  OR  ZA  0  M   0  -    -  - CNT S  0 ALU NBS	[5051 a29]
 A2A  2E 74 0C 40 0F               1 NN  OR  ZA  0  P   0  -    -  - CNT S  0 ALU NBS	[5052 a2a]
 A2B  2E 76 0C 40 0F               1 NN  OR  ZA  0  H   0  -    -  - CNT S  0 ALU NBS	[5053 a2b]
 A2C  2E 78 0C 40 0F               1 NN  OR  ZA  0  S   0  -    -  - CNT S  0 ALU NBS	[5054 a2c]
 A2D  2E 7A 0C 40 0F               1 NN  OR  ZA  0  G   0  -    -  - CNT S  0 ALU NBS	[5055 a2d]
 A2E  2E 7C 09 40 0F               1 NN  OR  ZA  0  L   0  -    -  - RTN S  0 ALU NBS	[5056 a2e]
 A2F  6F E1 CC 40 FF               1 B   OR  DZ  0  0   L  -    -  - CNT S  0 NBD NBS	[5057 a2f]
 A30  6F E1 AC 40 FF               1 B   OR  DZ  0  0   G  -    -  - CNT S  0 NBD NBS	[5060 a30]
 A31  6F E1 8C 40 FF               1 B   OR  DZ  0  0   S  -    -  - CNT S  0 NBD NBS	[5061 a31]
 A32  6F E1 6C 40 FF               1 B   OR  DZ  0  0   H  -    -  - CNT S  0 NBD NBS	[5062 a32]
 A33  6F E1 4C 40 FF               1 B   OR  DZ  0  0   P  -    -  - CNT S  0 NBD NBS	[5063 a33]
 A34  6F E1 2C 40 FF               1 B   OR  DZ  0  0   M  -    -  - CNT S  0 NBD NBS	[5064 a34]
 A35  6F E1 E9 40 FF               1 B   OR  DZ  0  0   T  -    -  - RTN S  0 NBD NBS	[5065 a35]
 A36  6E 7D AC 60 FF               1 B   OR  ZA  0  L   G  -    -  - CNT -  0 NBD NBS	[5066 a36]
 A37  4F E8 44 64 00               1 B*  OR  DZ  0  4   2 RC   04  - CNT -  0 ALU ALU	[5067 a37]
 A38  76 E4 4C 74 00               1 B   NA  DA  0  2   2 MC   04  - CNT -  1 000	[5070 a38]
 A39  2E 78 0C 60 D0               1 NN  OR  ZA  0  S   0  -    -  - CNT -  0 BNK ALU	[5071 a39]
 A3A  60 E5 AC 60 30               1 B   PL  AB  0  2   G  -    -  - CNT -  0 MAR ALU	[5072 a3a]
 A3B  22 48 0C 60 40               1 NN  PL  ZA  1  4   0  -    -  - CNT -  0 SR  ALU	[5073 a3b]
 A3C  6F E0 4C 60 01               1 B   OR  DZ  0  0   2  -    -  - CNT -  0 ALU MD 	[5074 a3c]
 A3D  6F E0 B4 70 01               1 B   OR  DZ  0  0   5 RR    -  - CNT -  1 001	[5075 a3d]
 A3E  27 40 0C 70 01               1 NN  MP  DQ  1  0   0  -    -  - CNT -  1 001	[5076 a3e]
 A3F  A4 30 47 20 0F               0 5103     F                    - JMP 5103		[5077 a3f]
 A40  A4 51 07 20 0F               0 5105     Z                    - JMP 5105		[5100 a40]
 A41  2C EA 4C 60 10               1 NN  OR  AB  0  5   2  -    -  - CNT -  0 MD  ALU	[5101 a41]
 A42  A4 68 07 20 0F               0 5106    T                     - JMP 5106		[5102 a42]
 A43  34 EA 4C 60 10               1 NN  NA  AB  0  5   2  -    -  - CNT -  0 MD  ALU	[5103 a43]
 A44  A4 68 07 20 0F               0 5106    T                     - JMP 5106		[5104 a44]
 A45  38 EA 4C 60 10               1 NN  XR  AB  0  5   2  -    -  - CNT -  0 MD  ALU	[5105 a45]
 A46  2E 78 0C 60 D0               1 NN  OR  ZA  0  S   0  -    -  - CNT -  0 BNK ALU	[5106 a46]
 A47  2E 7A 09 60 30               1 NN  OR  ZA  0  G   0  -    -  - RTN -  0 MAR ALU	[5107 a47]
 A48  6F E0 2C 40 FF               1 B   OR  DZ  0  0   1  -    -  - CNT S  0 NBD NBS	[5110 a48]
 A49  6F E0 0C 40 FF               1 B   OR  DZ  0  0   0  -    -  - CNT S  0 NBD NBS	[5111 a49]
 A4A  6F E0 6C 40 FF               1 B   OR  DZ  0  0   3  -    -  - CNT S  0 NBD NBS	[5112 a4a]
 A4B  6F E0 4C 40 FF               1 B   OR  DZ  0  0   2  -    -  - CNT S  0 NBD NBS	[5113 a4b]
 A4C  30 D8 07 20 0F               0 1415    T                     - JMP 1415		[5114 a4c]
 -org- 5115 5120
    .ORG 5120
 A50  62 FE 0C 40 FF               1 B   PL  DA  0  T   0  -    -  - CNT S  0 NBD NBS	[5120 a50]
 A51  4F E0 04 6E 00               1 B*  OR  DZ  0  0   0 RC   16  - CNT -  0 ALU ALU	[5121 a51]
 A52  72 E1 0C 70 03               1 B   AN  DA  0  0   8  -    -  - CNT -  1 003	[5122 a52]
 A53  76 E0 0C 70 03               1 B   NA  DA  0  0   0  -    -  - CNT -  1 003	[5123 a53]
 A54  2E 70 0C 60 D0               1 NN  OR  ZA  0  8   0  -    -  - CNT -  0 BNK ALU	[5124 a54]
 A55  0E 60 0C 60 30               1 Q   OR  ZA  0  0   0  -    -  - CNT -  0 MAR ALU	[5125 a55]
 A56  6F E0 6C 60 01               1 B   OR  DZ  0  0   3  -    -  - CNT -  0 ALU MD 	[5126 a56]
 A57  2E 70 0C 60 D0               1 NN  OR  ZA  0  8   0  -    -  - CNT -  0 BNK ALU	[5127 a57]
 A58  01 40 0C 60 30               1 Q   PL  ZQ  1  0   0  -    -  - CNT -  0 MAR ALU	[5130 a58]
 A59  6F E0 2C 60 01               1 B   OR  DZ  0  0   1  -    -  - CNT -  0 ALU MD 	[5131 a59]
 A5A  2E 70 0C 60 D0               1 NN  OR  ZA  0  8   0  -    -  - CNT -  0 BNK ALU	[5132 a5a]
 A5B  01 40 0C 60 30               1 Q   PL  ZQ  1  0   0  -    -  - CNT -  0 MAR ALU	[5133 a5b]
 A5C  72 E2 AC 70 FF               1 B   AN  DA  0  1   5  -    -  - CNT -  1 377	[5134 a5c]
 A5D  A5 F8 17 20 0F               0 5137    -H                    - JMP 5137		[5135 a5d]
 A5E  6E EA A4 78 FF               1 B   OR  DA  0  5   5 RC   10  - CNT -  1 377	[5136 a5e]
 A5F  4F E2 24 68 00               1 B*  OR  DZ  0  1   1 RC   10  - CNT -  0 ALU ALU	[5137 a5f]
 A60  62 E2 2C 40 FF               1 B   PL  DA  0  1   1  -    -  - CNT S  0 NBD NBS	[5140 a60]
 A61  72 E2 2C 70 FF               1 B   AN  DA  0  1   1  -    -  - CNT -  1 377	[5141 a61]
 A62  6F E0 EC 60 01               1 B   OR  DZ  0  0   7  -    -  - CNT -  0 ALU MD 	[5142 a62]
 A63  4F E2 24 69 00               1 B*  OR  DZ  0  1   1 RC   11  - CNT -  0 ALU ALU	[5143 a63]
 A64  6F E1 EC 40 30               1 B   OR  DZ  0  0   T  -    -  - CNT S  0 MAR ALU	[5144 a64]
 A65  72 EE CC 70 FF               1 B   AN  DA  0  7   6  -    -  - CNT -  1 377	[5145 a65]
 A66  4F EE E4 68 00               1 B*  OR  DZ  0  7   7 RC   10  - CNT -  0 ALU ALU	[5146 a66]
 A67  6F E0 0C 60 01               1 B   OR  DZ  0  0   0  -    -  - CNT -  0 ALU MD 	[5147 a67]
 A68  6F E0 8C 40 FF               1 B   OR  DZ  0  0   4  -    -  - CNT S  0 NBD NBS	[5150 a68]
 A69  6F E0 4C 40 FF               1 B   OR  DZ  0  0   2  -    -  - CNT S  0 NBD NBS	[5151 a69]
 A6A  20 E0 6C 60 10               1 NN  PL  AB  0  0   3  -    -  - CNT -  0 MD  ALU	[5152 a6a]
 A6B  4F FF EC 40 30               1 B*  OR  DZ  0  T   T  -    -  - CNT S  0 MAR ALU	[5153 a6b]
 A6C  72 EE EC 70 FF               1 B   AN  DA  0  7   7  -    -  - CNT -  1 377	[5154 a6c]
 A6D  A9 C1 07 20 0F               0 5234     Z                    - JMP 5234		[5155 a6d]
 A6E  2E 7C 0C 40 0F               1 NN  OR  ZA  0  L   0  -    -  - CNT S  0 ALU NBS	[5156 a6e]
 A6F  6E 65 CC 60 FF               1 B   OR  ZA  0  2   L  -    -  - CNT -  0 NBD NBS	[5157 a6f]
 A70  60 E0 AC 60 40               1 B   PL  AB  0  0   5  -    -  - CNT -  0 SR  ALU	[5160 a70]
 A71  76 EA 4C 70 0F               1 B   NA  DA  0  5   2  -    -  - CNT -  1 017	[5161 a71]
 A72  4F E4 44 64 00               1 B*  OR  DZ  0  2   2 RC   04  - CNT -  0 ALU ALU	[5162 a72]
 A73  72 EA 6C 70 0F               1 B   AN  DA  0  5   3  -    -  - CNT -  1 017	[5163 a73]
 A74  2E 70 0C 60 D0               1 NN  OR  ZA  0  8   0  -    -  - CNT -  0 BNK ALU	[5164 a74]
 A75  01 40 0C 60 30               1 Q   PL  ZQ  1  0   0  -    -  - CNT -  0 MAR ALU	[5165 a75]
 A76  60 E4 2C 60 FF               1 B   PL  AB  0  2   1  -    -  - CNT -  0 NBD NBS	[5166 a76]
 A77  2E 72 0C 40 0F               1 NN  OR  ZA  0  M   0  -    -  - CNT S  0 ALU NBS	[5167 a77]
 A78  03 60 0C 60 01               1 Q   PL  DQ  0  0   0  -    -  - CNT -  0 ALU MD 	[5170 a78]
 A79  76 E2 AC 71 00               1 B   NA  DA  0  1   5 MC   01  - CNT -  1 000	[5171 a79]
 A7A  72 61 EC 60 FF               1 B   AN  ZA  0  0   T  -    -  - CNT -  0 NBD NBS	[5172 a7a]
 A7B  6E 6D 2C 60 FF               1 B   OR  ZA  0  6   M  -    -  - CNT -  0 NBD NBS	[5173 a7b]
 A7C  2E 70 0C 60 D0               1 NN  OR  ZA  0  8   0  -    -  - CNT -  0 BNK ALU	[5174 a7c]
 A7D  01 40 0C 60 30               1 Q   PL  ZQ  1  0   0  -    -  - CNT -  0 MAR ALU	[5175 a7d]
 A7E  6F E0 14 60 01               1 B   OR  DZ  0  0   0 RR    -  - CNT -  0 ALU MD 	[5176 a7e]
 A7F  20 E8 AC 60 FF               1 NN  PL  AB  0  4   5  -    -  - CNT -  0 NBD NBS	[5177 a7f]
 A80  22 1C 0C 60 D0               1 NN  PL  ZA  C  L   0  -    -  - CNT -  0 BNK ALU	[5200 a80]
 A81  20 E8 AC 60 30               1 NN  PL  AB  0  4   5  -    -  - CNT -  0 MAR ALU	[5201 a81]
 A82  76 E0 5C 70 00               1 B   NA  DA  0  0   2 MR    -  - CNT -  1 000	[5202 a82]
 A83  6C E5 EC 60 FF               1 B   OR  AB  0  2   T  -    -  - CNT -  0 NBD NBS	[5203 a83]
 A84  6E FF EC 60 01               1 B   OR  DA  0  T   T  -    -  - CNT -  0 ALU MD 	[5204 a84]
 A85  2E 7E 0C 60 10               1 NN  OR  ZA  0  T   0  -    -  - CNT -  0 MD  ALU	[5205 a85]
 A86  20 E8 AC 60 FF               1 NN  PL  AB  0  4   5  -    -  - CNT -  0 NBD NBS	[5206 a86]
 A87  22 1C 0C 60 D0               1 NN  PL  ZA  C  L   0  -    -  - CNT -  0 BNK ALU	[5207 a87]
 A88  20 E8 AC 60 30               1 NN  PL  AB  0  4   5  -    -  - CNT -  0 MAR ALU	[5210 a88]
 A89  62 4A AC 60 FF               1 B   PL  ZA  1  5   5  -    -  - CNT -  0 NBD NBS	[5211 a89]
 A8A  72 E1 FC 70 00               1 B   AN  DA  0  0   T MR    -  - CNT -  1 000	[5212 a8a]
 A8B  66 D3 2C 70 10               1 B   MP  DA  1  M   M  -    -  - CNT -  1 020	[5213 a8b]
 A8C  A7 C9 27 20 0F               0 5174    -ZS                    - JMP 5174		[5214 a8c]
 A8D  20 F2 6C 60 FF               1 NN  PL  AB  0  M   3  -    -  - CNT -  0 NBD NBS	[5215 a8d]
 A8E  A9 71 27 20 0F               0 5227     ZS                    - JMP 5227		[5216 a8e]
 A8F  20 E8 AC 60 FF               1 NN  PL  AB  0  4   5  -    -  - CNT -  0 NBD NBS	[5217 a8f]
 A90  22 1C 0C 60 D0               1 NN  PL  ZA  C  L   0  -    -  - CNT -  0 BNK ALU	[5220 a90]
 A91  20 E8 AC 60 30               1 NN  PL  AB  0  4   5  -    -  - CNT -  0 MAR ALU	[5221 a91]
 A92  6E FF EC 60 01               1 B   OR  DA  0  T   T  -    -  - CNT -  0 ALU MD 	[5222 a92]
 A93  2E 7E 0C 60 10               1 NN  OR  ZA  0  T   0  -    -  - CNT -  0 MD  ALU	[5223 a93]
 A94  20 E8 AC 60 FF               1 NN  PL  AB  0  4   5  -    -  - CNT -  0 NBD NBS	[5224 a94]
 A95  22 1C 0C 60 D0               1 NN  PL  ZA  C  L   0  -    -  - CNT -  0 BNK ALU	[5225 a95]
 A96  20 E8 AC 60 30               1 NN  PL  AB  0  4   5  -    -  - CNT -  0 MAR ALU	[5226 a96]
 A97  62 E2 2C 70 80               1 B   PL  DA  0  1   1  -    -  - CNT -  1 200	[5227 a97]
 A98  66 6E EC 60 FF               1 B   MP  ZA  0  7   7  -    -  - CNT -  0 NBD NBS	[5230 a98]
 A99  A7 99 27 20 0F               0 5171    -ZS                   - JMP 5171		[5231 a99]
 A9A  6F E1 2C 40 FF               1 B   OR  DZ  0  0   M  -    -  - CNT S  0 NBD NBS	[5232 a9a]
 A9B  6F E1 CC 40 FF               1 B   OR  DZ  0  0   L  -    -  - CNT S  0 NBD NBS	[5233 a9b]
 A9C  0F E0 0F E0 03               1 Q   OR  DZ  0  0   0  -    -  S JMP -  0 ALU IR4	[5234 a9c]   
     *                   
 -org- 5235 6000
    .ORG 6000
 C00  62 FE 08 40 F0     RAM       1 B   PL  DA 0  T  0  -  - -  -   S 0 POP -    R0 := STK+T  fontAdr   
 -org- 6001 7752
    .ORG 7752
 FEA  99 18 07 20 0F     NBOOT     0 EFBOOT  T           -  JMP 4621  
 -org- 7753 7760
    .ORG 7760
 FF0  98 D8 07 20 0F     NSTART    0 EFSTART T           -  JMP 4615  
 -org- 7761 7764
    .ORG 7764
 FF4  91 08 07 20 0F     N_GET     0 EFGET   T           -  JMP 4420  
 -org- 7765 7772
    .ORG 7772
 FFA  94 08 07 20 0F     NDUMP     0 EFDUMP  T           -  JMP 4500
 FFB  91 68 07 20 0F     N_PUT     0 EFPUT   T	        -  JMP 4426
 -org- 7774 7776
    .ORG 7776
 FFE  96 F8 07 20 0F     NXYZP     0 EFXYZ   T           -  JMP 4557  
 FFF  -0000 -0000 -0000 -0000 -0000     .NOP
  file read...
